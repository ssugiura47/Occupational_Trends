<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.20.1106.0321                               -->
<workbook original-version='18.1' source-build='2020.4.0 (20204.20.1106.0321)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='OccupationalTrends_16085093575400' path='/workbooks' revision='1.4' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='occupation-trends-db' inline='true' name='federated.11nivlt1kgd50i17goo4k1ev9abh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='occupation-trends.cppwghmqrqzq.us-west-1.rds.amazonaws.com' name='postgres.0t41ogq1y6m07012d54u20ua2y6a'>
            <connection authentication='username-password' class='postgres' dbname='occupation-trends-db' one-time-sql='' port='5432' server='occupation-trends.cppwghmqrqzq.us-west-1.rds.amazonaws.com' username='root' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='current_employment_stats' table='[public].[current_employment_stats]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='occupational_employment_stat' table='[public].[occupational_employment_stat]' type='table' />
          <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='current_employment_stats' table='[public].[current_employment_stats]' type='table' />
          <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='datajobs2020_info' table='[public].[datajobs2020_info]' type='table' />
          <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='datajobs2020' table='[public].[datajobs2020]' type='table' />
          <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='datajobs_info' table='[public].[datajobs_info]' type='table' />
          <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='datajobs' table='[public].[datajobs]' type='table' />
          <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='restaurant2020_info' table='[public].[restaurant2020_info]' type='table' />
          <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='restaurantjobs2020' table='[public].[restaurantjobs2020]' type='table' />
          <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='restaurant_info' table='[public].[restaurant_info]' type='table' />
          <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='restaurantjobs' table='[public].[restaurantjobs]' type='table' />
          <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='local_area_unemployment_stats' table='[public].[local_area_unemployment_stats]' type='table' />
          <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='longterm_occupational_employment' table='[public].[longterm_occupational_employment]' type='table' />
          <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='unemployment_rate_by_age' table='[public].[unemployment_rate_by_age]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Area Type]' value='[occupational_employment_stat].[Area Type]' />
          <map key='[age_16_19]' value='[unemployment_rate_by_age].[age_16_19]' />
          <map key='[age_20_24]' value='[unemployment_rate_by_age].[age_20_24]' />
          <map key='[age_25_34]' value='[unemployment_rate_by_age].[age_25_34]' />
          <map key='[age_35_44]' value='[unemployment_rate_by_age].[age_35_44]' />
          <map key='[age_45_54]' value='[unemployment_rate_by_age].[age_45_54]' />
          <map key='[age_55_64]' value='[unemployment_rate_by_age].[age_55_64]' />
          <map key='[age_65]' value='[unemployment_rate_by_age].[age_65]' />
          <map key='[area_name (current_employment_stats)]' value='[current_employment_stats].[area_name]' />
          <map key='[area_name (datajobs2020_info)]' value='[datajobs2020_info].[area_name]' />
          <map key='[area_name (datajobs_info)]' value='[datajobs_info].[area_name]' />
          <map key='[area_name (local_area_unemployment_stats)]' value='[local_area_unemployment_stats].[area_name]' />
          <map key='[area_name (longterm_occupational_employment)]' value='[longterm_occupational_employment].[area_name]' />
          <map key='[area_name (restaurant2020_info)]' value='[restaurant2020_info].[area_name]' />
          <map key='[area_name (restaurant_info)]' value='[restaurant_info].[area_name]' />
          <map key='[area_name]' value='[unemployment_rate_by_age].[area_name]' />
          <map key='[current_employment (datajobs2020_info)]' value='[datajobs2020_info].[current_employment]' />
          <map key='[current_employment (datajobs_info)]' value='[datajobs_info].[current_employment]' />
          <map key='[current_employment (restaurant2020_info)]' value='[restaurant2020_info].[current_employment]' />
          <map key='[current_employment (restaurant_info)]' value='[restaurant_info].[current_employment]' />
          <map key='[current_employment]' value='[current_employment_stats].[current_employment]' />
          <map key='[employment]' value='[local_area_unemployment_stats].[employment]' />
          <map key='[entry_level_education]' value='[longterm_occupational_employment].[entry_level_education]' />
          <map key='[industry_title (datajobs)]' value='[datajobs].[industry_title]' />
          <map key='[industry_title (datajobs2020)]' value='[datajobs2020].[industry_title]' />
          <map key='[industry_title (datajobs2020_info)]' value='[datajobs2020_info].[industry_title]' />
          <map key='[industry_title (datajobs_info)]' value='[datajobs_info].[industry_title]' />
          <map key='[industry_title (restaurant2020_info)]' value='[restaurant2020_info].[industry_title]' />
          <map key='[industry_title (restaurant_info)]' value='[restaurant_info].[industry_title]' />
          <map key='[industry_title (restaurantjobs)]' value='[restaurantjobs].[industry_title]' />
          <map key='[industry_title (restaurantjobs2020)]' value='[restaurantjobs2020].[industry_title]' />
          <map key='[industry_title]' value='[current_employment_stats].[industry_title]' />
          <map key='[mean_wage]' value='[occupational_employment_stat].[mean_wage]' />
          <map key='[median_annual_wage]' value='[longterm_occupational_employment].[median_annual_wage]' />
          <map key='[median_hourly_wage]' value='[longterm_occupational_employment].[median_hourly_wage]' />
          <map key='[month (current_employment_stats)]' value='[current_employment_stats].[month]' />
          <map key='[month (datajobs2020_info)]' value='[datajobs2020_info].[month]' />
          <map key='[month (datajobs_info)]' value='[datajobs_info].[month]' />
          <map key='[month (restaurant2020_info)]' value='[restaurant2020_info].[month]' />
          <map key='[month (restaurant_info)]' value='[restaurant_info].[month]' />
          <map key='[month]' value='[local_area_unemployment_stats].[month]' />
          <map key='[month_numeric (restaurant2020_info)]' value='[restaurant2020_info].[month_numeric]' />
          <map key='[month_numeric]' value='[datajobs2020_info].[month_numeric]' />
          <map key='[occupational_title (longterm_occupational_employment)]' value='[longterm_occupational_employment].[occupational_title]' />
          <map key='[occupational_title]' value='[occupational_employment_stat].[occupational_title]' />
          <map key='[percentage_change]' value='[longterm_occupational_employment].[percentage_change]' />
          <map key='[period]' value='[longterm_occupational_employment].[period]' />
          <map key='[r_squared (datajobs)]' value='[datajobs].[r_squared]' />
          <map key='[r_squared (restaurantjobs)]' value='[restaurantjobs].[r_squared]' />
          <map key='[r_squared (restaurantjobs2020)]' value='[restaurantjobs2020].[r_squared]' />
          <map key='[r_squared]' value='[datajobs2020].[r_squared]' />
          <map key='[slope (datajobs)]' value='[datajobs].[slope]' />
          <map key='[slope (restaurantjobs)]' value='[restaurantjobs].[slope]' />
          <map key='[slope (restaurantjobs2020)]' value='[restaurantjobs2020].[slope]' />
          <map key='[slope]' value='[datajobs2020].[slope]' />
          <map key='[testing_score (datajobs)]' value='[datajobs].[testing_score]' />
          <map key='[testing_score (restaurantjobs)]' value='[restaurantjobs].[testing_score]' />
          <map key='[testing_score (restaurantjobs2020)]' value='[restaurantjobs2020].[testing_score]' />
          <map key='[testing_score]' value='[datajobs2020].[testing_score]' />
          <map key='[training_score (datajobs)]' value='[datajobs].[training_score]' />
          <map key='[training_score (restaurantjobs)]' value='[restaurantjobs].[training_score]' />
          <map key='[training_score (restaurantjobs2020)]' value='[restaurantjobs2020].[training_score]' />
          <map key='[training_score]' value='[datajobs2020].[training_score]' />
          <map key='[unemployment]' value='[local_area_unemployment_stats].[unemployment]' />
          <map key='[unemployment_rate]' value='[local_area_unemployment_stats].[unemployment_rate]' />
          <map key='[wage_type]' value='[occupational_employment_stat].[wage_type]' />
          <map key='[y_intercept (datajobs)]' value='[datajobs].[y_intercept]' />
          <map key='[y_intercept (restaurantjobs)]' value='[restaurantjobs].[y_intercept]' />
          <map key='[y_intercept (restaurantjobs2020)]' value='[restaurantjobs2020].[y_intercept]' />
          <map key='[y_intercept]' value='[datajobs2020].[y_intercept]' />
          <map key='[year (current_employment_stats)]' value='[current_employment_stats].[year]' />
          <map key='[year (datajobs2020_info)]' value='[datajobs2020_info].[year]' />
          <map key='[year (datajobs_info)]' value='[datajobs_info].[year]' />
          <map key='[year (local_area_unemployment_stats)]' value='[local_area_unemployment_stats].[year]' />
          <map key='[year (restaurant2020_info)]' value='[restaurant2020_info].[year]' />
          <map key='[year (restaurant_info)]' value='[restaurant_info].[year]' />
          <map key='[year (unemployment_rate_by_age)]' value='[unemployment_rate_by_age].[year]' />
          <map key='[year]' value='[occupational_employment_stat].[year]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Area Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area Type]</local-name>
            <parent-name>[occupational_employment_stat]</parent-name>
            <remote-alias>Area Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[occupational_employment_stat]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wage_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wage_type]</local-name>
            <parent-name>[occupational_employment_stat]</parent-name>
            <remote-alias>wage_type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>occupational_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[occupational_title]</local-name>
            <parent-name>[occupational_employment_stat]</parent-name>
            <remote-alias>occupational_title</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_wage]</local-name>
            <parent-name>[occupational_employment_stat]</parent-name>
            <remote-alias>mean_wage</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area_name (current_employment_stats)]</local-name>
            <parent-name>[current_employment_stats]</parent-name>
            <remote-alias>area_name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (current_employment_stats)]</local-name>
            <parent-name>[current_employment_stats]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month (current_employment_stats)]</local-name>
            <parent-name>[current_employment_stats]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry_title]</local-name>
            <parent-name>[current_employment_stats]</parent-name>
            <remote-alias>industry_title</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_employment</remote-name>
            <remote-type>3</remote-type>
            <local-name>[current_employment]</local-name>
            <parent-name>[current_employment_stats]</parent-name>
            <remote-alias>current_employment</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area_name (datajobs2020_info)]</local-name>
            <parent-name>[datajobs2020_info]</parent-name>
            <remote-alias>area_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (datajobs2020_info)]</local-name>
            <parent-name>[datajobs2020_info]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month (datajobs2020_info)]</local-name>
            <parent-name>[datajobs2020_info]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry_title (datajobs2020_info)]</local-name>
            <parent-name>[datajobs2020_info]</parent-name>
            <remote-alias>industry_title</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_employment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[current_employment (datajobs2020_info)]</local-name>
            <parent-name>[datajobs2020_info]</parent-name>
            <remote-alias>current_employment</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_numeric</remote-name>
            <remote-type>3</remote-type>
            <local-name>[month_numeric]</local-name>
            <parent-name>[datajobs2020_info]</parent-name>
            <remote-alias>month_numeric</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry_title (datajobs2020)]</local-name>
            <parent-name>[datajobs2020]</parent-name>
            <remote-alias>industry_title</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y_intercept</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y_intercept]</local-name>
            <parent-name>[datajobs2020]</parent-name>
            <remote-alias>y_intercept</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>slope</remote-name>
            <remote-type>5</remote-type>
            <local-name>[slope]</local-name>
            <parent-name>[datajobs2020]</parent-name>
            <remote-alias>slope</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>training_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[training_score]</local-name>
            <parent-name>[datajobs2020]</parent-name>
            <remote-alias>training_score</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>testing_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[testing_score]</local-name>
            <parent-name>[datajobs2020]</parent-name>
            <remote-alias>testing_score</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>r_squared</remote-name>
            <remote-type>5</remote-type>
            <local-name>[r_squared]</local-name>
            <parent-name>[datajobs2020]</parent-name>
            <remote-alias>r_squared</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area_name (datajobs_info)]</local-name>
            <parent-name>[datajobs_info]</parent-name>
            <remote-alias>area_name</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (datajobs_info)]</local-name>
            <parent-name>[datajobs_info]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month (datajobs_info)]</local-name>
            <parent-name>[datajobs_info]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry_title (datajobs_info)]</local-name>
            <parent-name>[datajobs_info]</parent-name>
            <remote-alias>industry_title</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_employment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[current_employment (datajobs_info)]</local-name>
            <parent-name>[datajobs_info]</parent-name>
            <remote-alias>current_employment</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry_title (datajobs)]</local-name>
            <parent-name>[datajobs]</parent-name>
            <remote-alias>industry_title</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y_intercept</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y_intercept (datajobs)]</local-name>
            <parent-name>[datajobs]</parent-name>
            <remote-alias>y_intercept</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>slope</remote-name>
            <remote-type>5</remote-type>
            <local-name>[slope (datajobs)]</local-name>
            <parent-name>[datajobs]</parent-name>
            <remote-alias>slope</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>training_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[training_score (datajobs)]</local-name>
            <parent-name>[datajobs]</parent-name>
            <remote-alias>training_score</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>testing_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[testing_score (datajobs)]</local-name>
            <parent-name>[datajobs]</parent-name>
            <remote-alias>testing_score</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>r_squared</remote-name>
            <remote-type>5</remote-type>
            <local-name>[r_squared (datajobs)]</local-name>
            <parent-name>[datajobs]</parent-name>
            <remote-alias>r_squared</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area_name (restaurant2020_info)]</local-name>
            <parent-name>[restaurant2020_info]</parent-name>
            <remote-alias>area_name</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (restaurant2020_info)]</local-name>
            <parent-name>[restaurant2020_info]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month (restaurant2020_info)]</local-name>
            <parent-name>[restaurant2020_info]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry_title (restaurant2020_info)]</local-name>
            <parent-name>[restaurant2020_info]</parent-name>
            <remote-alias>industry_title</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_employment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[current_employment (restaurant2020_info)]</local-name>
            <parent-name>[restaurant2020_info]</parent-name>
            <remote-alias>current_employment</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_numeric</remote-name>
            <remote-type>3</remote-type>
            <local-name>[month_numeric (restaurant2020_info)]</local-name>
            <parent-name>[restaurant2020_info]</parent-name>
            <remote-alias>month_numeric</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry_title (restaurantjobs2020)]</local-name>
            <parent-name>[restaurantjobs2020]</parent-name>
            <remote-alias>industry_title</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y_intercept</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y_intercept (restaurantjobs2020)]</local-name>
            <parent-name>[restaurantjobs2020]</parent-name>
            <remote-alias>y_intercept</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>slope</remote-name>
            <remote-type>5</remote-type>
            <local-name>[slope (restaurantjobs2020)]</local-name>
            <parent-name>[restaurantjobs2020]</parent-name>
            <remote-alias>slope</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>training_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[training_score (restaurantjobs2020)]</local-name>
            <parent-name>[restaurantjobs2020]</parent-name>
            <remote-alias>training_score</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>testing_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[testing_score (restaurantjobs2020)]</local-name>
            <parent-name>[restaurantjobs2020]</parent-name>
            <remote-alias>testing_score</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>r_squared</remote-name>
            <remote-type>5</remote-type>
            <local-name>[r_squared (restaurantjobs2020)]</local-name>
            <parent-name>[restaurantjobs2020]</parent-name>
            <remote-alias>r_squared</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area_name (restaurant_info)]</local-name>
            <parent-name>[restaurant_info]</parent-name>
            <remote-alias>area_name</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (restaurant_info)]</local-name>
            <parent-name>[restaurant_info]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month (restaurant_info)]</local-name>
            <parent-name>[restaurant_info]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry_title (restaurant_info)]</local-name>
            <parent-name>[restaurant_info]</parent-name>
            <remote-alias>industry_title</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_employment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[current_employment (restaurant_info)]</local-name>
            <parent-name>[restaurant_info]</parent-name>
            <remote-alias>current_employment</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry_title (restaurantjobs)]</local-name>
            <parent-name>[restaurantjobs]</parent-name>
            <remote-alias>industry_title</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y_intercept</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y_intercept (restaurantjobs)]</local-name>
            <parent-name>[restaurantjobs]</parent-name>
            <remote-alias>y_intercept</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>slope</remote-name>
            <remote-type>5</remote-type>
            <local-name>[slope (restaurantjobs)]</local-name>
            <parent-name>[restaurantjobs]</parent-name>
            <remote-alias>slope</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>training_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[training_score (restaurantjobs)]</local-name>
            <parent-name>[restaurantjobs]</parent-name>
            <remote-alias>training_score</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>testing_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[testing_score (restaurantjobs)]</local-name>
            <parent-name>[restaurantjobs]</parent-name>
            <remote-alias>testing_score</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>r_squared</remote-name>
            <remote-type>5</remote-type>
            <local-name>[r_squared (restaurantjobs)]</local-name>
            <parent-name>[restaurantjobs]</parent-name>
            <remote-alias>r_squared</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area_name (local_area_unemployment_stats)]</local-name>
            <parent-name>[local_area_unemployment_stats]</parent-name>
            <remote-alias>area_name</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (local_area_unemployment_stats)]</local-name>
            <parent-name>[local_area_unemployment_stats]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[local_area_unemployment_stats]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>employment</remote-name>
            <remote-type>3</remote-type>
            <local-name>[employment]</local-name>
            <parent-name>[local_area_unemployment_stats]</parent-name>
            <remote-alias>employment</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unemployment</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unemployment]</local-name>
            <parent-name>[local_area_unemployment_stats]</parent-name>
            <remote-alias>unemployment</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unemployment_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unemployment_rate]</local-name>
            <parent-name>[local_area_unemployment_stats]</parent-name>
            <remote-alias>unemployment_rate</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area_name (longterm_occupational_employment)]</local-name>
            <parent-name>[longterm_occupational_employment]</parent-name>
            <remote-alias>area_name</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[period]</local-name>
            <parent-name>[longterm_occupational_employment]</parent-name>
            <remote-alias>period</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>occupational_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[occupational_title (longterm_occupational_employment)]</local-name>
            <parent-name>[longterm_occupational_employment]</parent-name>
            <remote-alias>occupational_title</remote-alias>
            <ordinal>76</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage_change]</local-name>
            <parent-name>[longterm_occupational_employment]</parent-name>
            <remote-alias>percentage_change</remote-alias>
            <ordinal>77</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_hourly_wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_hourly_wage]</local-name>
            <parent-name>[longterm_occupational_employment]</parent-name>
            <remote-alias>median_hourly_wage</remote-alias>
            <ordinal>78</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_annual_wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_annual_wage]</local-name>
            <parent-name>[longterm_occupational_employment]</parent-name>
            <remote-alias>median_annual_wage</remote-alias>
            <ordinal>79</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>entry_level_education</remote-name>
            <remote-type>129</remote-type>
            <local-name>[entry_level_education]</local-name>
            <parent-name>[longterm_occupational_employment]</parent-name>
            <remote-alias>entry_level_education</remote-alias>
            <ordinal>80</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area_name]</local-name>
            <parent-name>[unemployment_rate_by_age]</parent-name>
            <remote-alias>area_name</remote-alias>
            <ordinal>82</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (unemployment_rate_by_age)]</local-name>
            <parent-name>[unemployment_rate_by_age]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>83</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_16_19</remote-name>
            <remote-type>5</remote-type>
            <local-name>[age_16_19]</local-name>
            <parent-name>[unemployment_rate_by_age]</parent-name>
            <remote-alias>age_16_19</remote-alias>
            <ordinal>84</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_20_24</remote-name>
            <remote-type>5</remote-type>
            <local-name>[age_20_24]</local-name>
            <parent-name>[unemployment_rate_by_age]</parent-name>
            <remote-alias>age_20_24</remote-alias>
            <ordinal>85</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_25_34</remote-name>
            <remote-type>5</remote-type>
            <local-name>[age_25_34]</local-name>
            <parent-name>[unemployment_rate_by_age]</parent-name>
            <remote-alias>age_25_34</remote-alias>
            <ordinal>86</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_35_44</remote-name>
            <remote-type>5</remote-type>
            <local-name>[age_35_44]</local-name>
            <parent-name>[unemployment_rate_by_age]</parent-name>
            <remote-alias>age_35_44</remote-alias>
            <ordinal>87</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_45_54</remote-name>
            <remote-type>5</remote-type>
            <local-name>[age_45_54]</local-name>
            <parent-name>[unemployment_rate_by_age]</parent-name>
            <remote-alias>age_45_54</remote-alias>
            <ordinal>88</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_55_64</remote-name>
            <remote-type>5</remote-type>
            <local-name>[age_55_64]</local-name>
            <parent-name>[unemployment_rate_by_age]</parent-name>
            <remote-alias>age_55_64</remote-alias>
            <ordinal>89</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_65</remote-name>
            <remote-type>5</remote-type>
            <local-name>[age_65]</local-name>
            <parent-name>[unemployment_rate_by_age]</parent-name>
            <remote-alias>age_65</remote-alias>
            <ordinal>90</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]&quot;' value='Age 16-19' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]&quot;' value='Age 20-24' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]&quot;' value='Age 25-34' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]&quot;' value='Age 35-44' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]&quot;' value='Age 45-54' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]&quot;' value='Age 55-64' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]&quot;' value='Age 65+' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044667486210:qk]&quot;' value='Machine Learning Linear Regression Line' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044668985349:qk]&quot;' value='Machine Learning Linear Regression Line ' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs_info):qk]&quot;' value='Current Employment' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant_info):qk]&quot;' value='Current Employment ' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:r_squared (datajobs):qk]&quot;' value='R Squared' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:r_squared (restaurantjobs):qk]&quot;' value='R Squared  ' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:slope (datajobs):qk]&quot;' value='Weight Coefficient' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:testing_score (datajobs):qk]&quot;' value='Testing Score ' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:testing_score (restaurantjobs2020):qk]&quot;' value='Testing Score' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:training_score (datajobs):qk]&quot;' value='Training Score  ' />
          <alias key='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:training_score (restaurantjobs2020):qk]&quot;' value='Training Score' />
        </aliases>
      </column>
      <column caption='Age 16 19 (copy)' datatype='real' name='[Age 16 19 (copy)_1484780561636216832]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[age_16_19]' />
      </column>
      <column caption='Age 20 24 (copy)' datatype='real' name='[Age 20 24 (copy)_1484780561636306945]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[age_20_24]' />
      </column>
      <column caption='Age 25 34 (copy)' datatype='real' name='[Age 25 34 (copy)_1484780561636372482]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[age_25_34]' />
      </column>
      <column caption='Age 35 44 (copy)' datatype='real' name='[Age 35 44 (copy)_1484780561636388867]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[age_35_44]' />
      </column>
      <column caption='Age 45 54 (copy)' datatype='real' name='[Age 45 54 (copy)_1484780561636397060]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[age_45_54]' />
      </column>
      <column caption='Age 55 64 (copy)' datatype='real' name='[Age 55 64 (copy)_1484780561636405253]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[age_55_64]' />
      </column>
      <column caption='Age 65 (copy)' datatype='real' name='[Age 65 (copy)_1484780561636413446]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[age_65]' />
      </column>
      <column caption='ML Data' datatype='real' name='[Calculation_1394990044667486210]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[slope (datajobs)]*[year (datajobs_info)] + [y_intercept (datajobs)]' />
      </column>
      <column caption='ML Data 2020' datatype='real' name='[Calculation_1394990044667957251]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[slope]*[month_numeric] + [y_intercept]' />
      </column>
      <column caption='ML Restaurant' datatype='real' name='[Calculation_1394990044668985349]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[slope (restaurantjobs)]*[year (restaurant_info)] + [y_intercept (restaurantjobs)]' />
      </column>
      <column caption='ML Restaurant 2020' datatype='real' name='[Calculation_1751900315142287360]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[slope (restaurantjobs2020)]*[month_numeric (restaurant2020_info)] + [y_intercept (restaurantjobs2020)]' />
      </column>
      <column caption='Min Range' datatype='real' name='[Calculation_2123165808428621833]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [age_16_19] = {FIXED [age_16_19] : MIN([age_16_19])}&#13;&#10;THEN [age_16_19]&#13;&#10;END' />
      </column>
      <column aggregation='CountD' caption='Month (Datajobs2020 Info) (copy)' datatype='string' default-role='measure' default-type='quantitative' name='[Month (Datajobs2020 Info) (copy)_1394990044668706820]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[month (datajobs2020_info)]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='current_employment_stats' datatype='table' name='[__tableau_internal_object_id__].[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='datajobs2020' datatype='table' name='[__tableau_internal_object_id__].[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='datajobs2020_info' datatype='table' name='[__tableau_internal_object_id__].[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='datajobs' datatype='table' name='[__tableau_internal_object_id__].[datajobs_0E331CD38B174374A578DAF6C81B6A33]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='datajobs_info' datatype='table' name='[__tableau_internal_object_id__].[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='local_area_unemployment_stats' datatype='table' name='[__tableau_internal_object_id__].[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='longterm_occupational_employment' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='occupational_employment_stat' datatype='table' name='[__tableau_internal_object_id__].[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='restaurant2020_info' datatype='table' name='[__tableau_internal_object_id__].[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='restaurant_info' datatype='table' name='[__tableau_internal_object_id__].[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='restaurantjobs2020' datatype='table' name='[__tableau_internal_object_id__].[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='restaurantjobs' datatype='table' name='[__tableau_internal_object_id__].[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='unemployment_rate_by_age' datatype='table' name='[__tableau_internal_object_id__].[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]' role='measure' type='quantitative' />
      <column caption='Age 16 19' datatype='real' name='[age_16_19]' role='measure' type='quantitative' />
      <column caption='Age 20 24' datatype='real' name='[age_20_24]' role='measure' type='quantitative' />
      <column caption='Age 25 34' datatype='real' name='[age_25_34]' role='measure' type='quantitative' />
      <column caption='Age 35 44' datatype='real' name='[age_35_44]' role='measure' type='quantitative' />
      <column caption='Age 45 54' datatype='real' name='[age_45_54]' role='measure' type='quantitative' />
      <column caption='Age 55 64' datatype='real' name='[age_55_64]' role='measure' type='quantitative' />
      <column caption='Age 65' datatype='real' name='[age_65]' role='measure' type='quantitative' />
      <column caption='Area Name (Current Employment Stats)' datatype='string' name='[area_name (current_employment_stats)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Area Name (Datajobs2020 Info)' datatype='string' name='[area_name (datajobs2020_info)]' role='dimension' type='nominal' />
      <column caption='Area Name (Datajobs Info)' datatype='string' name='[area_name (datajobs_info)]' role='dimension' type='nominal' />
      <column caption='Area Name (Local Area Unemployment Stats)' datatype='string' name='[area_name (local_area_unemployment_stats)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Area Name (Longterm Occupational Employment)' datatype='string' hidden='true' name='[area_name (longterm_occupational_employment)]' role='dimension' type='nominal' />
      <column caption='Area Name (Restaurant2020 Info)' datatype='string' name='[area_name (restaurant2020_info)]' role='dimension' type='nominal' />
      <column caption='Area Name (Restaurant Info)' datatype='string' name='[area_name (restaurant_info)]' role='dimension' type='nominal' />
      <column caption='Area Name' datatype='string' name='[area_name]' role='dimension' type='nominal' />
      <column caption='Current Employment (Datajobs2020 Info)' datatype='integer' name='[current_employment (datajobs2020_info)]' role='measure' type='quantitative' />
      <column caption='Current Employment (Datajobs Info)' datatype='integer' name='[current_employment (datajobs_info)]' role='measure' type='quantitative' />
      <column caption='Current Employment (Restaurant2020 Info)' datatype='integer' name='[current_employment (restaurant2020_info)]' role='measure' type='quantitative' />
      <column caption='Current Employment (Restaurant Info)' datatype='integer' name='[current_employment (restaurant_info)]' role='measure' type='quantitative' />
      <column caption='Current Employment' datatype='integer' name='[current_employment]' role='measure' type='quantitative' />
      <column caption='Employment' datatype='integer' name='[employment]' role='measure' type='quantitative' />
      <column caption='Entry Level Education' datatype='string' hidden='true' name='[entry_level_education]' role='dimension' type='nominal' />
      <column caption='Industry Title (Datajobs)' datatype='string' name='[industry_title (datajobs)]' role='dimension' type='nominal' />
      <column caption='Industry Title (Datajobs2020)' datatype='string' name='[industry_title (datajobs2020)]' role='dimension' type='nominal' />
      <column caption='Industry Title (Datajobs2020 Info)' datatype='string' name='[industry_title (datajobs2020_info)]' role='dimension' type='nominal' />
      <column caption='Industry Title (Datajobs Info)' datatype='string' name='[industry_title (datajobs_info)]' role='dimension' type='nominal' />
      <column caption='Industry Title (Restaurant2020 Info)' datatype='string' name='[industry_title (restaurant2020_info)]' role='dimension' type='nominal' />
      <column caption='Industry Title (Restaurant Info)' datatype='string' name='[industry_title (restaurant_info)]' role='dimension' type='nominal' />
      <column caption='Industry Title (Restaurantjobs)' datatype='string' name='[industry_title (restaurantjobs)]' role='dimension' type='nominal' />
      <column caption='Industry Title (Restaurantjobs2020)' datatype='string' name='[industry_title (restaurantjobs2020)]' role='dimension' type='nominal' />
      <column caption='Industry Title' datatype='string' name='[industry_title]' role='dimension' type='nominal' />
      <column caption='Mean Wage' datatype='real' name='[mean_wage]' role='measure' type='quantitative' />
      <column caption='Median Annual Wage' datatype='real' hidden='true' name='[median_annual_wage]' role='measure' type='quantitative' />
      <column caption='Median Hourly Wage' datatype='real' hidden='true' name='[median_hourly_wage]' role='measure' type='quantitative' />
      <column caption='Month (Datajobs2020 Info)' datatype='string' name='[month (datajobs2020_info)]' role='dimension' type='nominal' />
      <column caption='Month (Datajobs Info)' datatype='string' name='[month (datajobs_info)]' role='dimension' type='nominal' />
      <column caption='Month (Restaurant2020 Info)' datatype='string' name='[month (restaurant2020_info)]' role='dimension' type='nominal' />
      <column caption='Month (Restaurant Info)' datatype='string' name='[month (restaurant_info)]' role='dimension' type='nominal' />
      <column caption='Occupational Title (Longterm Occupational Employment)' datatype='string' hidden='true' name='[occupational_title (longterm_occupational_employment)]' role='dimension' type='nominal' />
      <column caption='Occupational Title' datatype='string' name='[occupational_title]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Surgeons&quot;' value=' ' />
        </aliases>
      </column>
      <column caption='Percentage Change' datatype='real' hidden='true' name='[percentage_change]' role='measure' type='quantitative' />
      <column caption='Period' datatype='string' hidden='true' name='[period]' role='dimension' type='nominal' />
      <column datatype='real' name='[r_squared (datajobs)]' role='measure' type='quantitative' />
      <column datatype='real' name='[r_squared (restaurantjobs)]' role='measure' type='quantitative' />
      <column caption='Slope (Datajobs)' datatype='real' name='[slope (datajobs)]' role='measure' type='quantitative' />
      <column caption='Slope (Restaurantjobs)' datatype='real' name='[slope (restaurantjobs)]' role='measure' type='quantitative' />
      <column caption='Slope (Restaurantjobs2020)' datatype='real' name='[slope (restaurantjobs2020)]' role='measure' type='quantitative' />
      <column caption='Slope' datatype='real' name='[slope]' role='measure' type='quantitative' />
      <column caption='Testing Score (Datajobs)' datatype='real' name='[testing_score (datajobs)]' role='measure' type='quantitative' />
      <column caption='Testing Score (Restaurantjobs)' datatype='real' name='[testing_score (restaurantjobs)]' role='measure' type='quantitative' />
      <column caption='Testing Score (Restaurantjobs2020)' datatype='real' name='[testing_score (restaurantjobs2020)]' role='measure' type='quantitative' />
      <column caption='Testing Score' datatype='real' name='[testing_score]' role='measure' type='quantitative' />
      <column caption='Training Score (Datajobs)' datatype='real' name='[training_score (datajobs)]' role='measure' type='quantitative' />
      <column caption='Training Score (Restaurantjobs)' datatype='real' name='[training_score (restaurantjobs)]' role='measure' type='quantitative' />
      <column caption='Training Score (Restaurantjobs2020)' datatype='real' name='[training_score (restaurantjobs2020)]' role='measure' type='quantitative' />
      <column caption='Training Score' datatype='real' name='[training_score]' role='measure' type='quantitative' />
      <column caption='Unemployment' datatype='integer' name='[unemployment]' role='measure' type='quantitative' />
      <column caption='Unemployment Rate' datatype='real' name='[unemployment_rate]' role='measure' type='quantitative' />
      <column caption='Wage Type' datatype='string' name='[wage_type]' role='dimension' type='nominal' />
      <column caption='Y Intercept (Datajobs)' datatype='real' name='[y_intercept (datajobs)]' role='measure' type='quantitative' />
      <column caption='Y Intercept (Restaurantjobs)' datatype='real' name='[y_intercept (restaurantjobs)]' role='measure' type='quantitative' />
      <column caption='Y Intercept (Restaurantjobs2020)' datatype='real' name='[y_intercept (restaurantjobs2020)]' role='measure' type='quantitative' />
      <column caption='Y Intercept' datatype='real' name='[y_intercept]' role='measure' type='quantitative' />
      <column caption='Year (Current Employment Stats)' datatype='integer' name='[year (current_employment_stats)]' role='dimension' type='quantitative' />
      <column caption='Year (Datajobs2020 Info)' datatype='integer' name='[year (datajobs2020_info)]' role='dimension' type='quantitative' />
      <column caption='Year (Datajobs Info)' datatype='integer' name='[year (datajobs_info)]' role='dimension' type='quantitative' />
      <column caption='Year (Local Area Unemployment Stats)' datatype='integer' name='[year (local_area_unemployment_stats)]' role='dimension' type='quantitative' />
      <column caption='Year (Restaurant2020 Info)' datatype='integer' name='[year (restaurant2020_info)]' role='dimension' type='quantitative' />
      <column caption='Year (Restaurant Info)' datatype='integer' name='[year (restaurant_info)]' role='dimension' type='quantitative' />
      <column caption='Year (Unemployment Rate By Age)' datatype='integer' name='[year (unemployment_rate_by_age)]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_35_44]' derivation='Attribute' name='[attr:age_35_44:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_16_19]' derivation='Avg' name='[avg:age_16_19:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_20_24]' derivation='Avg' name='[avg:age_20_24:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_25_34]' derivation='Avg' name='[avg:age_25_34:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_35_44]' derivation='Avg' name='[avg:age_35_44:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_45_54]' derivation='Avg' name='[avg:age_45_54:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_55_64]' derivation='Avg' name='[avg:age_55_64:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_65]' derivation='Avg' name='[avg:age_65:qk]' pivot='key' type='quantitative' />
      <column-instance column='[area_name (local_area_unemployment_stats)]' derivation='None' name='[none:area_name (local_area_unemployment_stats):nk]' pivot='key' type='nominal' />
      <column-instance column='[industry_title]' derivation='None' name='[none:industry_title:nk]' pivot='key' type='nominal' />
      <column-instance column='[occupational_title]' derivation='None' name='[none:occupational_title:nk]' pivot='key' type='nominal' />
      <column-instance column='[year (local_area_unemployment_stats)]' derivation='None' name='[none:year (local_area_unemployment_stats):qk]' pivot='key' type='quantitative' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1394990044667486210]' derivation='Sum' name='[sum:Calculation_1394990044667486210:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1394990044667957251]' derivation='Sum' name='[sum:Calculation_1394990044667957251:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1394990044668985349]' derivation='Sum' name='[sum:Calculation_1394990044668985349:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1751900315142287360]' derivation='Sum' name='[sum:Calculation_1751900315142287360:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2123165808428621833]' derivation='Sum' name='[sum:Calculation_2123165808428621833:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_16_19]' derivation='Sum' name='[sum:age_16_19:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_20_24]' derivation='Sum' name='[sum:age_20_24:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_25_34]' derivation='Sum' name='[sum:age_25_34:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_35_44]' derivation='Sum' name='[sum:age_35_44:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_45_54]' derivation='Sum' name='[sum:age_45_54:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_55_64]' derivation='Sum' name='[sum:age_55_64:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age_65]' derivation='Sum' name='[sum:age_65:qk]' pivot='key' type='quantitative' />
      <column-instance column='[current_employment (datajobs2020_info)]' derivation='Sum' name='[sum:current_employment (datajobs2020_info):qk]' pivot='key' type='quantitative' />
      <column-instance column='[current_employment (datajobs_info)]' derivation='Sum' name='[sum:current_employment (datajobs_info):qk]' pivot='key' type='quantitative' />
      <column-instance column='[current_employment (restaurant2020_info)]' derivation='Sum' name='[sum:current_employment (restaurant2020_info):qk]' pivot='key' type='quantitative' />
      <column-instance column='[current_employment (restaurant_info)]' derivation='Sum' name='[sum:current_employment (restaurant_info):qk]' pivot='key' type='quantitative' />
      <column-instance column='[r_squared (datajobs)]' derivation='Sum' name='[sum:r_squared (datajobs):qk]' pivot='key' type='quantitative' />
      <column-instance column='[r_squared (restaurantjobs)]' derivation='Sum' name='[sum:r_squared (restaurantjobs):qk]' pivot='key' type='quantitative' />
      <column-instance column='[slope (datajobs)]' derivation='Sum' name='[sum:slope (datajobs):qk]' pivot='key' type='quantitative' />
      <column-instance column='[testing_score (datajobs)]' derivation='Sum' name='[sum:testing_score (datajobs):qk]' pivot='key' type='quantitative' />
      <column-instance column='[testing_score (restaurantjobs2020)]' derivation='Sum' name='[sum:testing_score (restaurantjobs2020):qk]' pivot='key' type='quantitative' />
      <column-instance column='[training_score (datajobs)]' derivation='Sum' name='[sum:training_score (datajobs):qk]' pivot='key' type='quantitative' />
      <column-instance column='[training_score (restaurantjobs2020)]' derivation='Sum' name='[sum:training_score (restaurantjobs2020):qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Area Name (Local Area Unemployment Stats),Year (Local Area Unemployment Stats))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:area_name (local_area_unemployment_stats):nk]' />
          <groupfilter function='level-members' level='[none:year (local_area_unemployment_stats):qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Occupational Title,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:occupational_title:nk]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/sakis/Desktop/occupational-trends-project/occupation-trends-db.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/23/2020 04:44:11 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1' table='[Extract].[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47' table='[Extract].[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]' type='table' />
            <relation name='current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1' table='[Extract].[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]' type='table' />
            <relation name='datajobs2020_info_CD7C90806F28440394DB2179E67D90D6' table='[Extract].[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]' type='table' />
            <relation name='datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B' table='[Extract].[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]' type='table' />
            <relation name='datajobs_info_A992A73F82A041C0A89A3401FAA326B0' table='[Extract].[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]' type='table' />
            <relation name='datajobs_0E331CD38B174374A578DAF6C81B6A33' table='[Extract].[datajobs_0E331CD38B174374A578DAF6C81B6A33]' type='table' />
            <relation name='restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3' table='[Extract].[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]' type='table' />
            <relation name='restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075' table='[Extract].[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]' type='table' />
            <relation name='restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA' table='[Extract].[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]' type='table' />
            <relation name='restaurantjobs_96ABED294C7C44E88661360AF16F5AA9' table='[Extract].[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]' type='table' />
            <relation name='local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800' table='[Extract].[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]' type='table' />
            <relation name='longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2' table='[Extract].[longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2]' type='table' />
            <relation name='unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4' table='[Extract].[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Area Type]' value='[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47].[Area Type]' />
            <map key='[age_16_19]' value='[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4].[age_16_19]' />
            <map key='[age_20_24]' value='[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4].[age_20_24]' />
            <map key='[age_25_34]' value='[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4].[age_25_34]' />
            <map key='[age_35_44]' value='[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4].[age_35_44]' />
            <map key='[age_45_54]' value='[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4].[age_45_54]' />
            <map key='[age_55_64]' value='[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4].[age_55_64]' />
            <map key='[age_65]' value='[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4].[age_65]' />
            <map key='[area_name (current_employment_stats)]' value='[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1].[area_name]' />
            <map key='[area_name (datajobs2020_info)]' value='[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6].[area_name]' />
            <map key='[area_name (datajobs_info)]' value='[datajobs_info_A992A73F82A041C0A89A3401FAA326B0].[area_name]' />
            <map key='[area_name (local_area_unemployment_stats)]' value='[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800].[area_name]' />
            <map key='[area_name (restaurant2020_info)]' value='[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3].[area_name]' />
            <map key='[area_name (restaurant_info)]' value='[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA].[area_name]' />
            <map key='[area_name]' value='[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4].[area_name]' />
            <map key='[current_employment (datajobs2020_info)]' value='[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6].[current_employment]' />
            <map key='[current_employment (datajobs_info)]' value='[datajobs_info_A992A73F82A041C0A89A3401FAA326B0].[current_employment]' />
            <map key='[current_employment (restaurant2020_info)]' value='[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3].[current_employment]' />
            <map key='[current_employment (restaurant_info)]' value='[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA].[current_employment]' />
            <map key='[current_employment]' value='[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1].[current_employment]' />
            <map key='[employment]' value='[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800].[employment]' />
            <map key='[industry_title (datajobs)]' value='[datajobs_0E331CD38B174374A578DAF6C81B6A33].[industry_title]' />
            <map key='[industry_title (datajobs2020)]' value='[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B].[industry_title]' />
            <map key='[industry_title (datajobs2020_info)]' value='[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6].[industry_title]' />
            <map key='[industry_title (datajobs_info)]' value='[datajobs_info_A992A73F82A041C0A89A3401FAA326B0].[industry_title]' />
            <map key='[industry_title (restaurant2020_info)]' value='[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3].[industry_title]' />
            <map key='[industry_title (restaurant_info)]' value='[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA].[industry_title]' />
            <map key='[industry_title (restaurantjobs)]' value='[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9].[industry_title]' />
            <map key='[industry_title (restaurantjobs2020)]' value='[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075].[industry_title]' />
            <map key='[industry_title]' value='[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1].[industry_title]' />
            <map key='[mean_wage]' value='[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47].[mean_wage]' />
            <map key='[month (current_employment_stats)]' value='[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1].[month]' />
            <map key='[month (datajobs2020_info)]' value='[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6].[month]' />
            <map key='[month (datajobs_info)]' value='[datajobs_info_A992A73F82A041C0A89A3401FAA326B0].[month]' />
            <map key='[month (restaurant2020_info)]' value='[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3].[month]' />
            <map key='[month (restaurant_info)]' value='[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA].[month]' />
            <map key='[month]' value='[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800].[month]' />
            <map key='[month_numeric (restaurant2020_info)]' value='[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3].[month_numeric]' />
            <map key='[month_numeric]' value='[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6].[month_numeric]' />
            <map key='[occupational_title (longterm_occupational_employment)]' value='[longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2].[occupational_title]' />
            <map key='[occupational_title]' value='[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47].[occupational_title]' />
            <map key='[r_squared (datajobs)]' value='[datajobs_0E331CD38B174374A578DAF6C81B6A33].[r_squared]' />
            <map key='[r_squared (restaurantjobs)]' value='[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9].[r_squared]' />
            <map key='[r_squared (restaurantjobs2020)]' value='[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075].[r_squared]' />
            <map key='[r_squared]' value='[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B].[r_squared]' />
            <map key='[slope (datajobs)]' value='[datajobs_0E331CD38B174374A578DAF6C81B6A33].[slope]' />
            <map key='[slope (restaurantjobs)]' value='[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9].[slope]' />
            <map key='[slope (restaurantjobs2020)]' value='[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075].[slope]' />
            <map key='[slope]' value='[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B].[slope]' />
            <map key='[testing_score (datajobs)]' value='[datajobs_0E331CD38B174374A578DAF6C81B6A33].[testing_score]' />
            <map key='[testing_score (restaurantjobs)]' value='[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9].[testing_score]' />
            <map key='[testing_score (restaurantjobs2020)]' value='[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075].[testing_score]' />
            <map key='[testing_score]' value='[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B].[testing_score]' />
            <map key='[training_score (datajobs)]' value='[datajobs_0E331CD38B174374A578DAF6C81B6A33].[training_score]' />
            <map key='[training_score (restaurantjobs)]' value='[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9].[training_score]' />
            <map key='[training_score (restaurantjobs2020)]' value='[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075].[training_score]' />
            <map key='[training_score]' value='[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B].[training_score]' />
            <map key='[unemployment]' value='[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800].[unemployment]' />
            <map key='[unemployment_rate]' value='[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800].[unemployment_rate]' />
            <map key='[wage_type]' value='[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47].[wage_type]' />
            <map key='[y_intercept (datajobs)]' value='[datajobs_0E331CD38B174374A578DAF6C81B6A33].[y_intercept]' />
            <map key='[y_intercept (restaurantjobs)]' value='[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9].[y_intercept]' />
            <map key='[y_intercept (restaurantjobs2020)]' value='[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075].[y_intercept]' />
            <map key='[y_intercept]' value='[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B].[y_intercept]' />
            <map key='[year (current_employment_stats)]' value='[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1].[year]' />
            <map key='[year (datajobs2020_info)]' value='[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6].[year]' />
            <map key='[year (datajobs_info)]' value='[datajobs_info_A992A73F82A041C0A89A3401FAA326B0].[year]' />
            <map key='[year (local_area_unemployment_stats)]' value='[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800].[year]' />
            <map key='[year (restaurant2020_info)]' value='[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3].[year]' />
            <map key='[year (restaurant_info)]' value='[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA].[year]' />
            <map key='[year (unemployment_rate_by_age)]' value='[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4].[year]' />
            <map key='[year]' value='[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47].[year]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='occupation-trends-db' increment-value='%null%' refresh-type='create' rows-inserted='1511485' timestamp-start='2020-12-23 04:44:11.327' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Area Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Area Type]</local-name>
              <parent-name>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</parent-name>
              <remote-alias>Area Type</remote-alias>
              <ordinal>0</ordinal>
              <family>occupational_employment_stat</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>occupational_employment_stat</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wage_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[wage_type]</local-name>
              <parent-name>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</parent-name>
              <remote-alias>wage_type</remote-alias>
              <ordinal>2</ordinal>
              <family>occupational_employment_stat</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>occupational_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[occupational_title]</local-name>
              <parent-name>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</parent-name>
              <remote-alias>occupational_title</remote-alias>
              <ordinal>3</ordinal>
              <family>occupational_employment_stat</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3068</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mean_wage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mean_wage]</local-name>
              <parent-name>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</parent-name>
              <remote-alias>mean_wage</remote-alias>
              <ordinal>4</ordinal>
              <family>occupational_employment_stat</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23377</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>area_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area_name (current_employment_stats)]</local-name>
              <parent-name>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</parent-name>
              <remote-alias>area_name</remote-alias>
              <ordinal>5</ordinal>
              <family>current_employment_stats</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year (current_employment_stats)]</local-name>
              <parent-name>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>6</ordinal>
              <family>current_employment_stats</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month (current_employment_stats)]</local-name>
              <parent-name>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>7</ordinal>
              <family>current_employment_stats</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry_title]</local-name>
              <parent-name>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</parent-name>
              <remote-alias>industry_title</remote-alias>
              <ordinal>8</ordinal>
              <family>current_employment_stats</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>465</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>current_employment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[current_employment]</local-name>
              <parent-name>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</parent-name>
              <remote-alias>current_employment</remote-alias>
              <ordinal>9</ordinal>
              <family>current_employment_stats</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11788</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>area_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area_name (datajobs2020_info)]</local-name>
              <parent-name>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</parent-name>
              <remote-alias>area_name</remote-alias>
              <ordinal>10</ordinal>
              <family>datajobs2020_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year (datajobs2020_info)]</local-name>
              <parent-name>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>11</ordinal>
              <family>datajobs2020_info</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month (datajobs2020_info)]</local-name>
              <parent-name>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>12</ordinal>
              <family>datajobs2020_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry_title (datajobs2020_info)]</local-name>
              <parent-name>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</parent-name>
              <remote-alias>industry_title</remote-alias>
              <ordinal>13</ordinal>
              <family>datajobs2020_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>current_employment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[current_employment (datajobs2020_info)]</local-name>
              <parent-name>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</parent-name>
              <remote-alias>current_employment</remote-alias>
              <ordinal>14</ordinal>
              <family>datajobs2020_info</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month_numeric</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month_numeric]</local-name>
              <parent-name>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</parent-name>
              <remote-alias>month_numeric</remote-alias>
              <ordinal>15</ordinal>
              <family>datajobs2020_info</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry_title (datajobs2020)]</local-name>
              <parent-name>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</parent-name>
              <remote-alias>industry_title</remote-alias>
              <ordinal>16</ordinal>
              <family>datajobs2020</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>y_intercept</remote-name>
              <remote-type>5</remote-type>
              <local-name>[y_intercept]</local-name>
              <parent-name>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</parent-name>
              <remote-alias>y_intercept</remote-alias>
              <ordinal>17</ordinal>
              <family>datajobs2020</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>slope</remote-name>
              <remote-type>5</remote-type>
              <local-name>[slope]</local-name>
              <parent-name>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</parent-name>
              <remote-alias>slope</remote-alias>
              <ordinal>18</ordinal>
              <family>datajobs2020</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>training_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[training_score]</local-name>
              <parent-name>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</parent-name>
              <remote-alias>training_score</remote-alias>
              <ordinal>19</ordinal>
              <family>datajobs2020</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>testing_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[testing_score]</local-name>
              <parent-name>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</parent-name>
              <remote-alias>testing_score</remote-alias>
              <ordinal>20</ordinal>
              <family>datajobs2020</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>r_squared</remote-name>
              <remote-type>5</remote-type>
              <local-name>[r_squared]</local-name>
              <parent-name>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</parent-name>
              <remote-alias>r_squared</remote-alias>
              <ordinal>21</ordinal>
              <family>datajobs2020</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>area_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area_name (datajobs_info)]</local-name>
              <parent-name>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</parent-name>
              <remote-alias>area_name</remote-alias>
              <ordinal>22</ordinal>
              <family>datajobs_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year (datajobs_info)]</local-name>
              <parent-name>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>23</ordinal>
              <family>datajobs_info</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month (datajobs_info)]</local-name>
              <parent-name>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>24</ordinal>
              <family>datajobs_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry_title (datajobs_info)]</local-name>
              <parent-name>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</parent-name>
              <remote-alias>industry_title</remote-alias>
              <ordinal>25</ordinal>
              <family>datajobs_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>current_employment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[current_employment (datajobs_info)]</local-name>
              <parent-name>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</parent-name>
              <remote-alias>current_employment</remote-alias>
              <ordinal>26</ordinal>
              <family>datajobs_info</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry_title (datajobs)]</local-name>
              <parent-name>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</parent-name>
              <remote-alias>industry_title</remote-alias>
              <ordinal>27</ordinal>
              <family>datajobs</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>y_intercept</remote-name>
              <remote-type>5</remote-type>
              <local-name>[y_intercept (datajobs)]</local-name>
              <parent-name>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</parent-name>
              <remote-alias>y_intercept</remote-alias>
              <ordinal>28</ordinal>
              <family>datajobs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>slope</remote-name>
              <remote-type>5</remote-type>
              <local-name>[slope (datajobs)]</local-name>
              <parent-name>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</parent-name>
              <remote-alias>slope</remote-alias>
              <ordinal>29</ordinal>
              <family>datajobs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>training_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[training_score (datajobs)]</local-name>
              <parent-name>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</parent-name>
              <remote-alias>training_score</remote-alias>
              <ordinal>30</ordinal>
              <family>datajobs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>testing_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[testing_score (datajobs)]</local-name>
              <parent-name>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</parent-name>
              <remote-alias>testing_score</remote-alias>
              <ordinal>31</ordinal>
              <family>datajobs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>r_squared</remote-name>
              <remote-type>5</remote-type>
              <local-name>[r_squared (datajobs)]</local-name>
              <parent-name>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</parent-name>
              <remote-alias>r_squared</remote-alias>
              <ordinal>32</ordinal>
              <family>datajobs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datajobs_0E331CD38B174374A578DAF6C81B6A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>area_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area_name (restaurant2020_info)]</local-name>
              <parent-name>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</parent-name>
              <remote-alias>area_name</remote-alias>
              <ordinal>33</ordinal>
              <family>restaurant2020_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year (restaurant2020_info)]</local-name>
              <parent-name>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>34</ordinal>
              <family>restaurant2020_info</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month (restaurant2020_info)]</local-name>
              <parent-name>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>35</ordinal>
              <family>restaurant2020_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry_title (restaurant2020_info)]</local-name>
              <parent-name>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</parent-name>
              <remote-alias>industry_title</remote-alias>
              <ordinal>36</ordinal>
              <family>restaurant2020_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>current_employment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[current_employment (restaurant2020_info)]</local-name>
              <parent-name>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</parent-name>
              <remote-alias>current_employment</remote-alias>
              <ordinal>37</ordinal>
              <family>restaurant2020_info</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month_numeric</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month_numeric (restaurant2020_info)]</local-name>
              <parent-name>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</parent-name>
              <remote-alias>month_numeric</remote-alias>
              <ordinal>38</ordinal>
              <family>restaurant2020_info</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry_title (restaurantjobs2020)]</local-name>
              <parent-name>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</parent-name>
              <remote-alias>industry_title</remote-alias>
              <ordinal>39</ordinal>
              <family>restaurantjobs2020</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>y_intercept</remote-name>
              <remote-type>5</remote-type>
              <local-name>[y_intercept (restaurantjobs2020)]</local-name>
              <parent-name>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</parent-name>
              <remote-alias>y_intercept</remote-alias>
              <ordinal>40</ordinal>
              <family>restaurantjobs2020</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>slope</remote-name>
              <remote-type>5</remote-type>
              <local-name>[slope (restaurantjobs2020)]</local-name>
              <parent-name>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</parent-name>
              <remote-alias>slope</remote-alias>
              <ordinal>41</ordinal>
              <family>restaurantjobs2020</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>training_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[training_score (restaurantjobs2020)]</local-name>
              <parent-name>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</parent-name>
              <remote-alias>training_score</remote-alias>
              <ordinal>42</ordinal>
              <family>restaurantjobs2020</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>testing_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[testing_score (restaurantjobs2020)]</local-name>
              <parent-name>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</parent-name>
              <remote-alias>testing_score</remote-alias>
              <ordinal>43</ordinal>
              <family>restaurantjobs2020</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>r_squared</remote-name>
              <remote-type>5</remote-type>
              <local-name>[r_squared (restaurantjobs2020)]</local-name>
              <parent-name>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</parent-name>
              <remote-alias>r_squared</remote-alias>
              <ordinal>44</ordinal>
              <family>restaurantjobs2020</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>area_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area_name (restaurant_info)]</local-name>
              <parent-name>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</parent-name>
              <remote-alias>area_name</remote-alias>
              <ordinal>45</ordinal>
              <family>restaurant_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year (restaurant_info)]</local-name>
              <parent-name>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>46</ordinal>
              <family>restaurant_info</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month (restaurant_info)]</local-name>
              <parent-name>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>47</ordinal>
              <family>restaurant_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry_title (restaurant_info)]</local-name>
              <parent-name>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</parent-name>
              <remote-alias>industry_title</remote-alias>
              <ordinal>48</ordinal>
              <family>restaurant_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>current_employment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[current_employment (restaurant_info)]</local-name>
              <parent-name>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</parent-name>
              <remote-alias>current_employment</remote-alias>
              <ordinal>49</ordinal>
              <family>restaurant_info</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry_title (restaurantjobs)]</local-name>
              <parent-name>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</parent-name>
              <remote-alias>industry_title</remote-alias>
              <ordinal>50</ordinal>
              <family>restaurantjobs</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>y_intercept</remote-name>
              <remote-type>5</remote-type>
              <local-name>[y_intercept (restaurantjobs)]</local-name>
              <parent-name>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</parent-name>
              <remote-alias>y_intercept</remote-alias>
              <ordinal>51</ordinal>
              <family>restaurantjobs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>slope</remote-name>
              <remote-type>5</remote-type>
              <local-name>[slope (restaurantjobs)]</local-name>
              <parent-name>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</parent-name>
              <remote-alias>slope</remote-alias>
              <ordinal>52</ordinal>
              <family>restaurantjobs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>training_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[training_score (restaurantjobs)]</local-name>
              <parent-name>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</parent-name>
              <remote-alias>training_score</remote-alias>
              <ordinal>53</ordinal>
              <family>restaurantjobs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>testing_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[testing_score (restaurantjobs)]</local-name>
              <parent-name>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</parent-name>
              <remote-alias>testing_score</remote-alias>
              <ordinal>54</ordinal>
              <family>restaurantjobs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>r_squared</remote-name>
              <remote-type>5</remote-type>
              <local-name>[r_squared (restaurantjobs)]</local-name>
              <parent-name>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</parent-name>
              <remote-alias>r_squared</remote-alias>
              <ordinal>55</ordinal>
              <family>restaurantjobs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>area_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area_name (local_area_unemployment_stats)]</local-name>
              <parent-name>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</parent-name>
              <remote-alias>area_name</remote-alias>
              <ordinal>56</ordinal>
              <family>local_area_unemployment_stats</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4922</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year (local_area_unemployment_stats)]</local-name>
              <parent-name>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>57</ordinal>
              <family>local_area_unemployment_stats</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>58</ordinal>
              <family>local_area_unemployment_stats</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>employment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[employment]</local-name>
              <parent-name>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</parent-name>
              <remote-alias>employment</remote-alias>
              <ordinal>59</ordinal>
              <family>local_area_unemployment_stats</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8316</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>unemployment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[unemployment]</local-name>
              <parent-name>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</parent-name>
              <remote-alias>unemployment</remote-alias>
              <ordinal>60</ordinal>
              <family>local_area_unemployment_stats</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3446</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>unemployment_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[unemployment_rate]</local-name>
              <parent-name>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</parent-name>
              <remote-alias>unemployment_rate</remote-alias>
              <ordinal>61</ordinal>
              <family>local_area_unemployment_stats</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1015</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>occupational_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[occupational_title (longterm_occupational_employment)]</local-name>
              <parent-name>[longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2]</parent-name>
              <remote-alias>occupational_title</remote-alias>
              <ordinal>62</ordinal>
              <family>longterm_occupational_employment</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>711</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>area_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area_name]</local-name>
              <parent-name>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</parent-name>
              <remote-alias>area_name</remote-alias>
              <ordinal>63</ordinal>
              <family>unemployment_rate_by_age</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year (unemployment_rate_by_age)]</local-name>
              <parent-name>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>64</ordinal>
              <family>unemployment_rate_by_age</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age_16_19</remote-name>
              <remote-type>5</remote-type>
              <local-name>[age_16_19]</local-name>
              <parent-name>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</parent-name>
              <remote-alias>age_16_19</remote-alias>
              <ordinal>65</ordinal>
              <family>unemployment_rate_by_age</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>106</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age_20_24</remote-name>
              <remote-type>5</remote-type>
              <local-name>[age_20_24]</local-name>
              <parent-name>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</parent-name>
              <remote-alias>age_20_24</remote-alias>
              <ordinal>66</ordinal>
              <family>unemployment_rate_by_age</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age_25_34</remote-name>
              <remote-type>5</remote-type>
              <local-name>[age_25_34]</local-name>
              <parent-name>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</parent-name>
              <remote-alias>age_25_34</remote-alias>
              <ordinal>67</ordinal>
              <family>unemployment_rate_by_age</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>67</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age_35_44</remote-name>
              <remote-type>5</remote-type>
              <local-name>[age_35_44]</local-name>
              <parent-name>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</parent-name>
              <remote-alias>age_35_44</remote-alias>
              <ordinal>68</ordinal>
              <family>unemployment_rate_by_age</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>70</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age_45_54</remote-name>
              <remote-type>5</remote-type>
              <local-name>[age_45_54]</local-name>
              <parent-name>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</parent-name>
              <remote-alias>age_45_54</remote-alias>
              <ordinal>69</ordinal>
              <family>unemployment_rate_by_age</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>67</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age_55_64</remote-name>
              <remote-type>5</remote-type>
              <local-name>[age_55_64]</local-name>
              <parent-name>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</parent-name>
              <remote-alias>age_55_64</remote-alias>
              <ordinal>70</ordinal>
              <family>unemployment_rate_by_age</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age_65</remote-name>
              <remote-type>5</remote-type>
              <local-name>[age_65]</local-name>
              <parent-name>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</parent-name>
              <remote-alias>age_65</remote-alias>
              <ordinal>71</ordinal>
              <family>unemployment_rate_by_age</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:occupational_title:nk]' palette='tableau-10-medium' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Administrative Law Judges, Adjudicators, and Hearing Officers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aircraft Structure, Surfaces, Rigging, and Systems Assemblers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Archivists&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Automotive and Watercraft Service Attendants&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Biomedical Engineers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Butchers and Meat Cutters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chemical Engineers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinical, Counseling, and School Psychologists&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Compliance Officers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Computer Software Engineers, Systems Software **&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cooks, All Other&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Credit Analysts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Demonstrators and Product Promoters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dredge Operators&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Educational Instruction and Library Workers, All Other&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Electromechanical Equipment Assemblers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Environmental Engineering Technicians&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Extruding, Forming, Pressing, and Compacting Machine Operators&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Farmworkers, Farm and Ranch Animals&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;First-Line Sup/Mgrs of Landscaping, Lawn Service, and Groundskeeping Wrkrs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;First-Line Supervisors of Production and Operating Workers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Flight Attendants&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Foresters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gaming Surveillance Officers and Gaming Investigators&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hazardous Materials Removal Workers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Helpers--Brickmasons, Blockmasons, Stonemasons, and Tile and Marble Setters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Human Resources Assistants, Except Payroll and Timekeeping&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Installation, Maintenance, and Repair Workers, All Other&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Laborers and Freight, Stock, and Material Movers, Hand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Library Technicians&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Logging Equipment Operators&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marketing Managers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Medical and Health Services Managers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Microbiologists&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Molding, Coremaking, and Casting Machine Operators, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Network Systems and Data Communications Analysts*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Occupational Therapists&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Packaging and Filling Machine Operators and Tenders&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Personal Care Aides&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Physical Therapist Assistants&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Postal Service Clerks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Production Occupations&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Public Relations Specialists&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Railroad Conductors and Yardmasters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Retail Salespersons&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;School Bus Monitors and Protective Service Workers, All Other&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Set and Exhibit Designers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Social Work Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stock Clerks and Order Fillers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tax Examiners and Collectors, and Revenue Agents&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Textile Knitting and Weaving Machine Setters, Operators, and Tenders&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Training and Development Specialists&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Urban and Regional Planners&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wind Turbine Service Technicians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Agricultural Equipment Operators&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anthropology and Archeology Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Atmospheric, Earth, Marine, and Space Sciences Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billing and Posting Clerks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Building Cleaning Workers, All Other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cargo and Freight Agents&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Civil Engineering Technicians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Community and Social Service Specialists, All Other*&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Computer Numerically Controlled Tool Operators&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Construction and Extraction Occupations&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Counter and Rental Clerks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cutting, Punching, and Press Machine Operators, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dietitians and Nutritionists&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Education Administrators, Kindergarten through Secondary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Electrical and Electronics Repairers, Commercial and Industrial Equipment&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Engine and Other Machine Assemblers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Exercise Physiologists&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Farm Labor Contractors&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Financial Managers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;First-Line Supervisors of Landscaping, Lawn Service, and Groundskeeping Workers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;First-Line Supervisors/Managers of Personal Service Workers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Food Scientists and Technologists&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambling Surveillance Officers and Gambling Investigators&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Graders and Sorters, Agricultural Products&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Healthcare Social Workers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;History Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Industrial Production Managers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Interviewers, Except Eligibility and Loan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Legal Secretaries&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Loan Interviewers and Clerks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Management Analysts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mechanical Drafters&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meeting and Convention Planners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miscellaneous First-Line Supervisors, Protective Service Workers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Multiple Machine Tool Setters, Operators, and Tenders, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nursing Aides, Orderlies, and Attendants*&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Opticians, Dispensing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Passenger Attendants&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philosophy and Religion Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plating and Coating Machine Setters, Operators, and Tenders, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pressers, Textile, Garment, and Related Materials&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Psychiatric Aides&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Radiologic Technologists and Technicians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rehabilitation Counselors&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sales Managers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Semiconductor Processing Technicians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Skincare Specialists&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Special Education Teachers, Middle School&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Surgeons&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Surgical Technologists&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Telecommunications Equipment Installers and Repairers, Except Line Installers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Total all occupations&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Travel Guides **&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Water and Wastewater Treatment Plant and System Operators&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Air Traffic Controllers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Architectural and Civil Drafters&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Audio-Visual Collections Specialists&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bioengineers and Biomedical Engineers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bus Drivers, Transit and Intercity&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cashiers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cleaners of Vehicles and Equipment&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Compensation and Benefits Managers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Computer Programmers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Construction Managers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Court Reporters and Simultaneous Captioners&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Data Scientists and Mathematical Science Occupations, All Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dispatchers, Except Police, Fire, and Ambulance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Education and Childcare Administrators, Preschool and Daycare&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Electrical, electronic, and electromechanical assemblers, except coil winders, tapers, and finishers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Engineers, All Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Extruding and Drawing Machine Operators, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Farmers and Ranchers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fire Inspectors and Investigators&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;First-Line Supervisors of Office and Administrative Support Workers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;First-Line Supervisors/Managers, Protective Service Workers, All Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forensic Science Technicians&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaming Dealers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grinding, Lapping, Polishing, and Buffing Machine Tool Setters, Operators, and Tenders, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hearing Aid Specialists&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Home Health Aides&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Information Security Analysts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Judges, Magistrate Judges, and Magistrates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Librarians&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Locomotive Engineers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manufactured Building and Mobile Home Installers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Media and Communication Equipment Workers, All Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Merchandise Displayers and Window Trimmers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Model Makers, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Musicians and Singers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Occupational Health and Safety Specialists&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Orderlies&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paving, Surfacing, and Tamping Equipment Operators&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Photographic Process Workers and Processing Machine Operators&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Police and Sheriff&apos;s Patrol Officers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Private Detectives and Investigators&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Psychology Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rail Yard Engineers, Dinkey Operators, and Hostlers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reservation and Transportation Ticket Agents and Travel Clerks&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sales Representatives, Services, All Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Septic Tank Servicers and Sewer Pipe Cleaners&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Social and Human Service Assistants&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Speech-Language Pathologists&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switchboard Operators, Including Answering Service&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tellers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tour Guides and Escorts **&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tutors and Teachers and Instructors, All Other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Welders, Cutters, Solderers, and Brazers&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Internists, General&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Surgeons, Except Ophthalmologists&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Family Medicine Physicians&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adult Basic and Secondary Education and Literacy Teachers and Ins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Advertising and Promotions Managers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Amusement and Recreation Attendants&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Artists and Related Workers, All Other&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Avionics Technicians&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brickmasons and Blockmasons&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Camera and Photographic Equipment Repairers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chemistry Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coin, Vending, and Amusement Machine Servicers and Repairers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Computer and Information Scientists, Research **&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Computer Systems Analysts&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cooks, Restaurant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Criminal Justice and Law Enforcement Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dentists, All Other Specialists&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Drywall and Ceiling Tile Installers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Electric Motor, Power Tool, and Related Repairers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elementary School Teachers, Except Special Education&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Environmental Science Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fallers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fence Erectors&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;First-Line Supervisors of Correctional Officers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;First-Line Supervisors of Transportation and Material Moving Workers, Except Aircraft Cargo Handling Supervisors&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Food and Tobacco Roasting, Baking, and Drying Machine Operators and Tenders&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fundraisers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Health Educators&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helpers--Installation, Maintenance, and Repair Workers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Human Resources Specialists*&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Insulation Workers, Mechanical&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lathe and Turning Machine Tool Setters, Operators, and Tenders, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Life, Physical, and Social Science Technicians, All Other&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Machinists&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Materials Engineers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Medical Dosimetrists, Medical Records Specialists, and Health Technologists and Technicians, All Other&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Milling and Planing Machine Setters, Operators, and Tenders, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Motion Picture Projectionists&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nuclear Engineers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Office and Administrative Support Workers, All Other&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Painting, Coating, and Decorating Workers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Personal Service Managers, All Other; Entertainment and Recreation Managers, Except Gambling; and Managers, All Other&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Plant and System Operators, All Other&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Postsecondary Teachers, All Other&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Production, Planning, and Expediting Clerks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Purchasing Agents, Except Wholesale, Retail, and Farm Products&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Recreation and Fitness Studies Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roofers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Secretaries and Administrative Assistants, Except Legal, Medical, and Executive&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sheet Metal Workers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Software Developers and Software Quality Assurance Analysts and Testers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Structural Metal Fabricators and Fitters&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Teacher Assistants&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Therapists, All Other&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Transportation Attendants, Except Flight Attendants&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Veterinary Technologists and Technicians&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Writers and Authors&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Administrative Services and Facilities Managers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Airfield Operations Specialists&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Area, Ethnic, and Cultural Studies Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Automotive Body and Related Repairers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boilermakers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Buyers and Purchasing Agents&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chemical Equipment Operators and Tenders&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coaches and Scouts&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Compliance Officers, Except Ag, Constr, Health-Safety, and Transportation&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Computer Specialists, All Other **&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cooks, Fast Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Credit Authorizers, Checkers, and Clerks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dental Assistants&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Drilling and Boring Machine Tool Operators, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Educational, Guidance, and Career Counselors and Advisors&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Electronic Equipment Installers and Repairers, Motor Vehicles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Environmental Engineering Technologists and Technicians&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Extruding, Forming, Pressing, and Compacting Machine Setters, Operators, and Tenders&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmworkers, Farm, Ranch, and Aquacultural Animals&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;First-Line Sup/Mgrs of Office and Administrative Support Workers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;First-Line Supervisors of Protective Service Workers, All Other&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Floor Layers, Except Carpet, Wood, and Hard Tiles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Forestry and Conservation Science Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gas Compressor and Gas Pumping Station Operators&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Health and Safety Engineers, Except Mining Safety Engineers and Inspectors&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Helpers--Carpenters&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Human Resources Managers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Installation, Maintenance, and Repair Workers, All Other*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Landscape Architects&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Licensed Practical and Licensed Vocational Nurses&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Logging Workers, All Other&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marriage and Family Therapists&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Medical and Public Health Social Workers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Middle School Teachers, Except Special and Career/Technical Educa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Molding, Coremaking, and Casting Machine Setters, Operators, and Tenders, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Accounts Clerks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Occupational Therapy Aides&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Packers and Packagers, Hand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Personal Care and Service Occupations&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Physical Therapists&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Postal Service Mail Carriers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Production Workers, All Other&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Public Safety Telecommunicators&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Real Estate Brokers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riggers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Secondary School Teachers, Except Special and Career/Technical Ed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sewers, Hand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Social Workers, All Other&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stockers and Order Fillers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tax Examiners, Collectors, and Revenue Agents&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Textile Winding, Twisting, and Drawing Out Machine Operators&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Training and Development Specialists **&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ushers, Lobby Attendants, and Ticket Takers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Woodworkers, All Other&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Actuaries&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aircraft Cargo Handling Supervisors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Architectural and Engineering Managers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Audiologists&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Biological Science Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Business and Financial Operations Occupations&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cement Masons and Concrete Finishers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cleaning, Washing, and Metal Pickling Equipment Operators and Tenders&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Compensation and Benefits Managers **&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Computer Programmers **&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Continuous Mining Machine Operators&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Court, Municipal, and License Clerks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Database Administrators&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Door-to-Door Sales Workers, News and Street Vendors, and Related Workers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Education Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Electricians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;English Language and Literature Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Extruding and Drawing Machine Setters, Operators, and Tenders, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Farmers, Ranchers, and Other Agricultural Managers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Firefighters&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;First-Line Supervisors of Personal Service and Entertainment and Recreation Workers, Except Gambling Services&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fish and Game Wardens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Forest and Conservation Technicians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gaming Managers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grinding, Lapping, Polishing, Buffing Machine Operators, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Heat Treating Equipment Setters, Operators, and Tenders, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Home Health and Personal Care Aides&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Information Security Analysts, Web Developers, and Computer Network Archite&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Judicial Law Clerks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Librarians and Media Collections Specialists&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Locomotive Firers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marine Engineers and Naval Architects&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Media and Communication Workers, All Other&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Metal Workers and Plastic Workers, All Other&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Model Makers, Wood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Natural Sciences Managers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Occupational Health and Safety Technicians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Orthodontists&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Payroll and Timekeeping Clerks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Photographic Processing Machine Operators&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Police, Fire, and Ambulance Dispatchers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Probation Officers and Correctional Treatment Specialists&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Public Address System and Other Announcers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rail-Track Laying and Maintenance Equipment Operators&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Residential Advisors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sales Representatives, Wholesale and Manufacturing, Except Technical and Scientific Products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Service Station Attendants&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Social Science Research Assistants&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stationary Engineers and Boiler Operators&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tailors, Dressmakers, and Custom Sewers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Terrazzo Workers and Finishers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Traffic Technicians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Umpires, Referees, and Other Sports Officials&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Welding, Soldering, and Brazing Machine Setters, Operators, and Tenders&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Agricultural and Food Science Technicians&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Animal Trainers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Athletic Trainers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bicycle Repairers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Budget Analysts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Career/Technical Education Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chiropractors&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Communications Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Computer Network Support Specialists&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conservation Scientists&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Costume Attendants&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cutters and Trimmers, Hand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Diagnostic Medical Sonographers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Education Administrators, All Other&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Electrical and Electronics Installers and Repairers, Transportation Equip&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emergency Management Specialists **&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Executive Secretaries and Administrative Assistants&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Farm Equipment Mechanics&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Financial Clerks, All Other&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;First-Line Supervisors of Housekeeping and Janitorial Workers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;First-Line Supervisors/Managers of Mechanics, Installers, and Repairers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Food Preparation Workers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Furniture Finishers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Geoscientists, Except Hydrologists and Geographers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Healthcare Practitioners and Technical Workers, All Other&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Highway Maintenance Workers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Industrial Engineers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Layout Workers, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Loading Machine Operators, Underground Mining&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maintenance Workers, Machinery&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meat, Poultry, and Fish Cutters and Trimmers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Medical Secretaries and Administrative Assistants&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Miscellaneous Construction and Related Workers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Multi-Media Artists and Animators&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nurse Midwives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ophthalmic Laboratory Technicians&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Parking Lot Attendants&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pharmacy Aides&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plasterers and Stucco Masons&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prepress Technicians and Workers **&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Protective Service Occupations&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Registered Nurses&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sales and Related Workers, All Other*&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Self-Enrichment Education Teachers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Signal and Track Switch Repairers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Special Education Teachers, All Other&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Subway and Streetcar Operators&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Technical Writers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tool and Die Makers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Travel Agents&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Watch Repairers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Accountants and Auditors&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Agricultural Inspectors&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appraisers and Assessors of Real Estate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Audio and Video Equipment Technicians&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Billing and Posting Clerks and Machine Operators&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bus and Truck Mechanics and Diesel Engine Specialists&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carpenters&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Civil Engineering Technologists and Technicians&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Community and Social Services Occupations&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Computer Numerically Controlled Tool Programmers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Construction and Related Workers, All Other&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Counter Attendants, Cafeteria, Food Concession, and Coffee Shop&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cutting, Punching, and Press Machine Setters, Operators, and Tenders, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dining Room and Cafeteria Attendants and Bartender Helpers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Education Administrators, Postsecondary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Electrical and Electronics Repairers, Powerhouse, Substation, and Relay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Engineering Managers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Exercise Trainers and Group Fitness Instructors&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Farm labor contractors&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Financial Specialists, All Other&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;First-Line Supervisors of Mechanics, Installers, and Repairers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;First-Line Supervisors/Managers of Police and Detectives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Food Servers, Nonrestaurant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaming and Sports Book Writers and Runners&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Graduate Teaching Assistants&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Healthcare Support Occupations&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hoist and Winch Operators&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Industrial Truck and Tractor Operators&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Janitors and Cleaners, Except Maids and Housekeeping Cleaners&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Legal Secretaries and Administrative Assistants&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Loan Officers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Management Occupations&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mechanical Engineering Technicians&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meeting, Convention, and Event Planners&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miscellaneous Mathematical Science Occupations&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Museum Technicians and Conservators&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nursing Assistants&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Optometrists&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Passenger Vehicle Drivers, Except Bus Drivers, Transit and Intercity&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phlebotomists&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Plating Machine Setters, Operators, and Tenders, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Print Binding and Finishing Workers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Psychiatric Technicians&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Radiologic Technologists and Technicians*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reinforcing Iron and Rebar Workers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sales Rep, Wholesale and Manuf, Except Technical and Scientific Products&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Semiconductor Processors&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slaughterers and Meat Packers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Special Education Teachers, Preschool&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Survey Researchers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Telecommunications Line Installers and Repairers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Total, All Occupations&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tree Trimmers and Pruners&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Web Developers&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Physicians, All Other; and Ophthalmologists, Except Pediatric&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Pediatricians, General&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Obstetricians and Gynecologists&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Aerospace Engineers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Animal Control Workers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Astronomers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadcast Technicians&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cardiovascular Technologists and Technicians&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Child, Family, and School Social Workers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Commercial Pilots&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Computer Network Architects&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Computer, Automated Teller, and Office Machine Repairers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Correspondence Clerks&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Curators&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Desktop Publishers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Economists&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Electrical and Electronics Drafters&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Embalmers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Excavating and Loading Machine and Dragline Operators&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Farm and Home Management Advisors&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Financial Analysts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;First-Line Supervisors of Gambling Services Workers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;First-Line Supervisors/Managers of Food Preparation and Serving Workers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Food Preparation and Serving Related Workers, All Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Funeral Service Managers, Directors, Morticians, and Undertakers*&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Geological and Hydrologic Technicians&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Health Technologists and Technicians, All Other*&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Helpers--Roofers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Industrial Engineering Technicians&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Insurance Underwriters&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lawyers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lighting Technicians and Media and Communication Equipment Workers, All Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maintenance and Repair Workers, General&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mathematical Technicians&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Medical Scientists, Except Epidemiologists&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mining Machine Operators, All Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Motorboat Operators&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Numerical Tool and Process Control Programmers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Operating Engineers and Other Construction Equipment Operators&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Parking Attendants&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Petroleum Pump System Operators, Refinery Operators, and Gaugers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Precision Instrument and Equipment Repairers, All Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Property, Real Estate, and Community Association Managers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Radio Mechanics&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Refractory Materials Repairers, Except Brickmasons&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sales and Related Occupations&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Security Guards&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shoe and Leather Workers and Repairers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Solar Photovoltaic Installers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Substitute teachers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Teaching Assistants, Postsecondary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tire Repairers and Changers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Transportation Workers, All Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waiters and Waitresses&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Acupuncturists and Healthcare Diagnosing or Treating Practitioners, All Other&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aircraft Mechanics and Service Technicians&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Architecture and Engineering Occupations&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Audiologists **&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Biological Scientists, All Other&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Business Operations Specialists, All Other&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cementing and Gluing Machine Operators and Tenders&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clergy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Compensation, Benefits, and Job Analysis Specialists&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Computer Science Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Control and Valve Installers and Repairers, Except Mechanical Door&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Craft Artists&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Database Administrators **&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Door-To-Door Sales Workers, News and Street Vendors, and Related Workers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Education, Training, and Library Occupations&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Electro-Mechanical and Mechatronics Technologists and Technicians&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Entertainers and Performers, Sports and Related Workers, All Other&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Extruding and Forming Machine Operators, Synthetic and Glass Fibers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Farming, Fishing, and Forestry Occupations&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;First-Line Sup/Mgrs of Construction Trades and Extraction Workers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;First-Line Supervisors of Personal Service Workers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fishers and Related Fishing Workers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Forest and Conservation Workers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gaming Service Workers, All Other&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grounds Maintenance Workers, All Other&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Heating, Air Conditioning, and Refrigeration Mechanics and Installers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hosts and Hostesses, Restaurant, Lounge, and Coffee Shop&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Inspectors, Testers, Sorters, Samplers, and Weighers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kindergarten Teachers, Except Special Education&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Library Assistants, Clerical&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lodging Managers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Market Research Analysts **&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medical and Clinical Laboratory Technicians&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Metal-Refining Furnace Operators and Tenders&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Models&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Network and Computer Systems Administrators&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Occupational Therapist Aides&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Orthotists and Prosthetists&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Petroleum Engineers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Physical Scientists, All Other&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Political Science Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Procurement Clerks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Public Relations and Fundraising Managers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Railroad Brake, Signal, and Switch Operators&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Respiratory Therapists&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sales Representatives, Wholesale and Manufacturing, Technical and Scientific Products&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Service Unit Operators, Oil and Gas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Social Sciences Teachers, Postsecondary, All Other&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Statistical Assistants&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tank Car, Truck, and Ship Loaders&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Textile Bleaching and Dyeing Machine Operators and Tenders&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Training and Development Managers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Underground Mining Machine Operators and Extraction Workers, All Other&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wellhead Pumpers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Advertising Sales Agents&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anesthesiologists&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arts, Design, Entertainment, Sports, and Media Occupations&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baggage Porters and Bellhops&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bridge and Lock Tenders&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Camera Operators, Television, Video, and Film&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chemists&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Combined Food Preparation and Serving Workers, Including Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Computer and Information Systems Managers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Computer Systems Analysts **&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cooks, Short Order&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crossing Guards&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dentists, General&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Earth Drillers, Except Oil and Gas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Electrical and Electronic Engineering Technicians&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elevator and Escalator Installers and Repairers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Environmental Scientists and Specialists, Including Health&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Family and Consumer Sciences Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiberglass Laminators and Fabricators&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;First-Line Supervisors of Farming, Fishing, and Forestry Workers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;First-Line Supervisors/Managers of Correctional Officers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Food Batchmakers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Funeral Attendants&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Genetic Counselors&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Health Information Technologists, Medical Registrars, Surgical Assistants, and Healthcare Practitioners and Technical Workers, All Other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Helpers--Painters, Paperhangers, Plasterers, and Stucco Masons&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Human resources, labor relations, and training specialists, all other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Insurance Appraisers, Auto Damage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laundry and Dry-Cleaning Workers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lifeguards, Ski Patrol, and Other Recreational Protective Service Workers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Magnetic Resonance Imaging Technologists&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Materials Scientists&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Medical Equipment Preparers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Millwrights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Motor Vehicle Operators, All Other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nuclear Medicine Technologists&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paper Goods Machine Setters, Operators, and Tenders&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pest Control Workers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Physicists&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pourers and Casters, Metal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Project Management Specialists and Business Operations Specialists, All Other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Purchasing Managers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Recreation Workers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rotary Drill Operators, Oil and Gas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Secretaries, Except Legal, Medical, and Executive&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ship Engineers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Software Developers, Applications&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Substance Abuse and Behavioral Disorder Counselors&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Teachers and Instructors, All Other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tile and Marble Setters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Transportation Attendants, Except Flight Attendants **&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vocational Education Teachers, Middle School&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zoologists and Wildlife Biologists&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Psychiatrists&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adult Basic Education, Adult Secondary Education, and English as a Second Language Instructors&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aerospace Engineering and Operations Technicians&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Animal Breeders&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Assemblers and Fabricators, All Other&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bailiffs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadcast Announcers and Radio Disc Jockeys&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Camera Operators, Television, Video, and Motion Picture&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chief Executives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Commercial and Industrial Designers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Computer and Mathematical Occupations&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Computer User Support Specialists&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cooling and Freezing Equipment Operators and Tenders&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crossing Guards and Flaggers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Derrick Operators, Oil and Gas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Earth Drillers, Except Oil and Gas; and Explosives Workers, Ordnance Handling Experts, and Blasters&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Electrical and Electronic Engineering Technologists and Technicians&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elevator Installers and Repairers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Epidemiologists&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Family and General Practitioners&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;File Clerks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;First-Line Supervisors of Fire Fighting and Prevention Workers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;First-Line Supervisors/Managers of Farming, Fishing, and Forestry Workers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Food Cooking Machine Operators and Tenders&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Funeral Home Managers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Geographers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Health Specialties Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Helpers--Pipelayers, Plumbers, Pipefitters, and Steamfitters&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Human Resources, Training, and Labor Relations Specialists, All Other&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Insurance Claims and Policy Processing Clerks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Law Clerks*&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Light Truck Drivers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maids and Housekeeping Cleaners&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mathematical Science Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Medical Equipment Repairers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mine Cutting and Channeling Machine Operators&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Motorboat Mechanics&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nuclear Power Reactor Operators&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paperhangers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pesticide Handlers, Sprayers, and Applicators, Vegetation&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Physics Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Power Distributors and Dispatchers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Proofreaders and Copy Markers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Radiation Therapists&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Recreational Therapists&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roustabouts, Oil and Gas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Securities, Commodities, and Financial Services Sales Agents&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shipping, Receiving, and Inventory Clerks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Software Developers, Systems Software&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Substance abuse, behavioral disorder, and mental health counselors&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Teachers and Instructors, All Other, Except Substitute Teachers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timing Device Assemblers, Adjusters, and Calibrators&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Transportation Inspectors&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vocational Education Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Agents and Business Managers of Artists, Performers, and Athletes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Animal Scientists&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Athletes and Sports Competitors&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bartenders&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brokerage Clerks&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Career/Technical Education Teachers, Middle School&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Childcare Workers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Communications Equipment Operators, All Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Computer Network Architects*&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Concierges&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cost Estimators&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Customer Service Representatives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Detectives and Criminal Investigators&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Editors&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Electrical and Electronics Engineering Technicians&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emergency Management Directors&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Excavating and Loading Machine and Dragline Operators, Surface Mining&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Farm and Home Management Educators&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Financial and Investment Analysts, Financial Risk Specialists, and Financial Specialists, All Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;First-line supervisors of gaming workers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;First-Line Supervisors/Managers of Housekeeping and Janitorial Workers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Food Preparation and Serving-Related Occupations&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Furnace, Kiln, Oven, Drier, and Kettle Operators and Tenders&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Geological and Petroleum Technicians&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Healthcare Practitioners and Technical Occupations&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Helpers, Construction Trades, All Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Industrial Engineering Technologists and Technicians&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Interior Designers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lay-Out Workers, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Loading and Moving Machine Operators, Underground Mining&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maintenance and Repair Workers, General **&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mathematicians&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Medical Secretaries&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Miscellaneous Assemblers and Fabricators&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Motorcycle Mechanics&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Office and Administrative Support Workers, All Other*&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Operations Research Analysts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Parking Enforcement Workers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pharmacists&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prepress Technicians and Workers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prosthodontists&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Radio Operators&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Refuse and Recyclable Material Collectors&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sales and Related Workers, All Other&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Segmental Pavers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shoe Machine Operators and Tenders&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sound Engineering Technicians&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Substitute Teachers, Short-Term&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Team Assemblers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Title Examiners, Abstractors, and Searchers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Transportation, Storage, and Distribution Managers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Watch and Clock Repairers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Agricultural Engineers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anthropologists and Archeologists&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atmospheric and Space Scientists&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bill and Account Collectors&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Building and Grounds Cleaning and Maintenance Occupations&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Career/Technical Education Teachers, Secondary School&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Choreographers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Community and Social Service Specialists, All Other&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Computer Numerically Controlled Machine Tool Programmers, Metal a&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Construction and Building Inspectors&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Counselors, All Other&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cutting and Slicing Machine Setters, Operators, and Tenders&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dietetic Technicians&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Education Administrators, Elementary and Secondary School&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Electrical and Electronics Installers and Repairers, Transportation Equipment&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emergency Medical Technicians and Paramedics&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Executive Secretaries and Executive Administrative Assistants&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Farm Equipment Mechanics and Service Technicians&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Financial Examiners&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;First-Line Supervisors of Landscaping, Lawn Service, and Groundsk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;First-Line Supervisors/Managers of Non-Retail Sales Workers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Food Processing Workers, All Other&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gambling Managers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glaziers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Healthcare Practitioners and Technical Workers, All Other*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Historians&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Industrial Machinery Mechanics&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Interpreters and Translators&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Legal Occupations&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Loan Counselors&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Makeup Artists, Theatrical and Performance&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mechanical Door Repairers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Medical Transcriptionists&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miscellaneous Entertainers and Performers, Sports and Related Workers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Multimedia Artists and Animators&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nurse Practitioners&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ophthalmic Medical Technicians&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Parts Salespersons&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pharmacy Technicians&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plating and Coating Machine Operators, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Preschool Teachers, Except Special Education&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Protective Service Workers, All Other&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Radiologic Technologists&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Registered Nurses*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sales Engineers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Self-Enrichment Teachers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Skin Care Specialists&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Special Education Teachers, Kindergarten and Elementary School&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Telecommunications Equip Installers and Repairers, Except Line Installers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tool Grinders, Filers, and Sharpeners&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Travel Guides&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Water and Liquid Waste Treatment Plant and System Operators&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Airline Pilots, Copilots, and Flight Engineers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Art Directors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Automotive Glass Installers and Repairers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bookbinders&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabinetmakers and Bench Carpenters&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chemical Plant and System Operators&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coating, Painting, and Spraying Machine Setters, Operators, and Tenders&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Compliance Officers, Except Agriculture, Construction, Health and Safety, and Transportation&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Computer Support Specialists&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cooks, Institution and Cafeteria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Credit Counselors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dental Hygienists&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Drilling and Boring Machine Tool Setters, Operators, and Tenders, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Educational, Guidance, School, and Vocational Counselors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Electronic Home Entertainment Equipment Installers and Repairers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Environmental Engineers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fabric and Apparel Patternmakers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fashion Designers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;First-Line Sup/Mgrs of Trans and Material-Moving Vehicle Operators&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;First-Line Supervisors of Retail Sales Workers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Floor Sanders and Finishers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Forging Machine Setters, Operators, and Tenders, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gas Plant Operators&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Health Diagnosing and Treating Practitioners, All Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Helpers--Electricians&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Human Resources Managers, All Other **&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Instructional Coordinators&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Landscaping and Groundskeeping Workers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Life Scientists, All Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Logisticians&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Massage Therapists&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medical Appliance Technicians&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Middle School Teachers, Except Special and Vocational Education&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morticians, Undertakers, and Funeral Arrangers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;News Analysts, Reporters, and Journalists&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Occupational Therapy Assistants&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Painters, Construction and Maintenance&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Personal Care and Service Workers, All Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Physician Assistants&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Postal Service Mail Sorters, Processors, and Processing Machine Operators&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Production Workers, All other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pump Operators, Except Wellhead Pumpers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Real Estate Sales Agents&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rock Splitters, Quarry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Secondary School Teachers, Except Special and Vocational Education&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sewing Machine Operators&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sociologists&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stonemasons&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tax Preparers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Textile Winding, Twisting, and Drawing Out Machine Setters, Operators, and Tenders&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Transit and Railroad Police&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Veterinarians&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Woodworking Machine Setters, Operators, and Tenders, Except Sawing&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Nurse Anesthetists&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Physicians and Surgeons, All Other&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adhesive Bonding Machine Operators and Tenders&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aircraft Service Attendants and Transportation Workers, All Other&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Architecture Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Audiovisual Equipment Installers and Repairers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Biological Technicians&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Business Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chefs and Head Cooks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clinical Laboratory Technologists and Technicians&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Compensation, Benefits, and Job Analysis Specialists **&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Computer Software Engineers, Applications **&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Conveyor Operators and Tenders&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crane and Tower Operators&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Database Administrators and Architects&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Drafters, All Other&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Education, Training, and Library Workers, All Other&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Electro-Mechanical Technicians&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Entertainment Attendants and Related Workers, All Other&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Extruding and Forming Machine Setters, Operators, and Tenders, Synthetic and Glass Fibers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Farmworkers and Laborers, Crop, Nursery, and Greenhouse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;First-Line Sup/Mgrs of Helpers, Laborers, and Material Movers, Hand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;First-Line Supervisors of Police and Detectives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fitness Trainers and Aerobics Instructors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Forest Fire Inspectors and Prevention Specialists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gaming Supervisors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hairdressers, Hairstylists, and Cosmetologists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Heavy and Tractor-Trailer Truck Drivers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hotel, Motel, and Resort Desk Clerks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Installation, Maintenance, and Repair Occupations&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Labor Relations Specialists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Library Science Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Log Graders and Scalers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Market Research Analysts and Marketing Specialists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medical and Clinical Laboratory Technologists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meter Readers, Utilities&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Molders, Shapers, and Casters, Except Metal and Plastic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Network and Computer Systems Administrators **&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Occupational Therapist Assistants&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Outdoor Power Equipment and Other Small Engine Mechanics&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Personal and Home Care Aides&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Physical Therapist Aides&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Political Scientists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Producers and Directors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Public Relations Managers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Railroad Brake, Signal, and Switch Operators and Locomotive Firers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Respiratory Therapy Technicians&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sawing Machine Setters, Operators, and Tenders, Wood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Service Unit Operators, Oil, Gas, and Mining&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Social Scientists and Related Workers, All Other&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Statisticians&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tapers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Textile Cutting Machine Setters, Operators, and Tenders&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Training and Development Managers **&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Upholsterers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wholesale and Retail Buyers, Except Farm Products&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Agricultural Sciences Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arbitrators, Mediators, and Conciliators&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Audio and Video Technicians&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bindery Workers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bus Drivers, School&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carpet Installers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Civil Engineers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Community Health Workers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Computer Occupations, All Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Construction and Related Workers, All Other*&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Couriers and Messengers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dancers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Directors, Religious Activities and Education&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Education Administrators, Preschool and Child Care Center/Program&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Electrical Engineers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Engineering Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Explosives Workers, Ordnance Handling Experts, and Blasters&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Farm Labor Contractors **&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fine Artists, Including Painters, Sculptors, and Illustrators&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;First-Line Supervisors of Non-Retail Sales Workers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;First-Line Supervisors/Managers of Production and Operating Workers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Food Service Managers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gaming Cage Workers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Graphic Designers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Healthcare Support Workers, All Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Home Appliance Repairers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Industrial-Organizational Psychologists&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jewelers and Precious Stone and Metal Workers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Legal Support Workers, All Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Locker Room, Coatroom, and Dressing Room Attendants&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Managers, All Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mechanical Engineering Technologists and Technicians&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mental Health and Substance Abuse Social Workers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mixing and Blending Machine Setters, Operators, and Tenders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Music Directors and Composers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nursing Instructors and Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oral and Maxillofacial Surgeons&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Patternmakers, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Photographers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Plumbers, Pipefitters, and Steamfitters&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Printing Machine Operators&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Radio, Cellular, and Tower Equipment Installers and Repairers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rail Car Repairers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Religious Workers, All Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sales Rep, Wholesale and Manuf, Technical and Scientific Products&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Separating, Filtering, Clarifying, Precipitating, and Still Machine Setters, Operators, and Tenders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slot Key Persons&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Special Education Teachers, Secondary School&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Surveying and Mapping Technicians&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Telemarketers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tour and travel guides&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Truck Drivers, Heavy and Tractor-Trailer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Web Developers and Digital Interface Designers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aerospace Engineering and Operations Technologists and Technicians&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Animal Caretakers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Assemblers and fabricators, all other, including team assemblers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bakers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadcast News Analysts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Captains, Mates, and Pilots of Water Vessels&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Child Care Workers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commercial Divers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Computer Hardware Engineers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Computer-Controlled Machine Tool Operators, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Correctional Officers and Jailers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crushing, Grinding, and Polishing Machine Setters, Operators, and Tenders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Designers, All Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Economics Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Electrical and Electronic Equipment Assemblers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eligibility Interviewers, Government Programs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Etchers and Engravers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fast Food and Counter Workers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Film and Video Editors&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;First-Line Supervisors of Food Preparation and Serving Workers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;First-Line Supervisors/Managers of Fire Fighting and Prevention Workers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Food Preparation and Serving Related Occupations&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Funeral Service Managers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Geography Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Health Technologists and Technicians, All Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Helpers--Production Workers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hydrologists&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Insurance Sales Agents&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Law Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Light Truck or Delivery Services Drivers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mail Clerks and Mail Machine Operators, Except Postal Service&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mathematical Scientists, All Other&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Medical Records and Health Information Technicians&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mining and Geological Engineers, Including Mining Safety Engineers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Motorboat Mechanics and Service Technicians&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nuclear Technicians&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Office Machine Operators, Except Computer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paralegals and Legal Assistants&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pile-Driver Operators&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Power Plant Operators&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Property Appraisers and Assessors&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Radio and Television Announcers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Recreational Vehicle Service Technicians&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sailors and Marine Oilers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Security and Fire Alarm Systems Installers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shipping, Receiving, and Traffic Clerks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Soil and Plant Scientists&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Substitute Teachers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Teaching Assistants, Except Postsecondary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tire Builders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Transportation Security Screeners&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vocational Education Teachers, Secondary School&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Administrative Services Managers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adult Literacy, Remedial Education, and GED Teachers and Instructors&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ambulance Drivers and Attendants, Except Emergency Medical Technicians&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Art, Drama, and Music Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Automotive Service Technicians and Mechanics&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bookkeeping, Accounting, and Auditing Clerks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Calibration Technologists and Technicians and Engineering Technologists and Technicians, Except Drafters, All Other&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chemical Technicians&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coil Winders, Tapers, and Finishers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Computer and Information Research Scientists&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Computer Support Specialists **&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cooks, Private Household&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crematory Operators and Personal Care and Service Workers, All Other&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dental Laboratory Technicians&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Driver/Sales Workers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Educational, Vocational, and School Counselors&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Electronics Engineers, Except Computer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Environmental Science and Protection Technicians, Including Health&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fabric Menders, Except Garment&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;First-Line Supervisors of Construction Trades and Extraction Work&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;First-line supervisors of transportation and material moving workers, except aircraft cargo handling supervisors&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Floral Designers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Foundry Mold and Coremakers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;General and Operations Managers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Health Education Specialists&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Helpers--Extraction Workers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Human Resources Specialists&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Insulation Workers, Floor, Ceiling, and Wall&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lathe and Turning Machine Tool Operators, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Life, Physical, and Social Science Occupations&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machine Feeders and Offbearers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Material Moving Workers, All Other&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Medical Assistants&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Milling and Planing Machine Operators, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morticians, Undertakers, and Funeral Directors&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nonfarm Animal Caretakers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Office and Administrative Support Occupations&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Painters, Transportation Equipment&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Personal Financial Advisors&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pipelayers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Postmasters and Mail Superintendents&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Production Workers, All other*&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Purchasing Agents and Buyers, Farm Products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Receptionists and Information Clerks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rolling Machine Setters, Operators, and Tenders, Metal and Plastic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Secretaries and Administrative Assistants, Except Legal, Medical,&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shampooers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sociology Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Structural Iron and Steel Workers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taxi Drivers and Chauffeurs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Textile, Apparel, and Furnishings Workers, All Other&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Transportation and Material Moving Occupations&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Veterinary Assistants and Laboratory Animal Caretakers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Word Processors and Typists&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;General Internal Medicine Physicians&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Actors&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Agricultural Workers, All Other&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Architects, Except Landscape and Naval&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Audio-Visual and Multimedia Collections Specialists&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Biochemists and Biophysicists&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bus Drivers, School or Special Client&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cartographers and Photogrammetrists&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Claims Adjusters, Examiners, and Investigators&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Community Health Workers*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Computer Operators&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Construction Laborers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Court Reporters&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Data Entry Keyers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dishwashers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Education Administrators, Preschool and Childcare Center/Program&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Electrical Power-Line Installers and Repairers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Engineering Technicians, Except Drafters, All Other&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Extraction Workers, All Other&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Farm, Ranch, and Other Agricultural Managers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fire Fighters&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;First-Line Supervisors of Office and Administrative Support Worke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;First-Line Supervisors/Managers of Retail Sales Workers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Foreign Language and Literature Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gaming Change Persons and Booth Cashiers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grinding and Polishing Workers, Hand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Healthcare Support Workers, All Other*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Home Economics Teachers, Postsecondary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Information and Record Clerks, All Other&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Job Printers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Legislators&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Locksmiths and Safe Repairers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manicurists and Pedicurists&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mechanical Engineers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mental Health Counselors&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mobile Heavy Equipment Mechanics, Except Engines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Musical Instrument Repairers and Tuners&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Office Clerks, General&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Order Clerks&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Patternmakers, Wood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Photographic Process Workers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Podiatrists&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Printing Press Operators&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Psychologists, All Other&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rail Transportation Workers, All Other&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reporters and Correspondents&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sales Representatives of Services, Except Advertising, Insurance, Financial Services, and Travel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Separating, Filtering, Machine Setters, Operators, and Tenders&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Social and Community Service Managers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Special Effects Artists and Animators&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Surveyors&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Telephone Operators&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tour Guides and Escorts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Truck Drivers, Light or Delivery Services&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Weighers, Measurers, Checkers, and Samplers, Recordkeeping&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:area_name (local_area_unemployment_stats):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aliso Viejo city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aptos Hills Larkin Valley CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avery CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ben Lomond CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bonadelle Ranchos Madera Ranchos CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burlingame city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Campbell city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cerritos city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Claremont city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Contra Costa County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cudahy city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Delleker CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Centro city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Escalon city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Florin CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fresno, CA MSA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grand Terrace city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hawaiian Gardens city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Homeland CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Inyokern CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kerman city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;La Puente city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lake of the Pines CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebec CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lodi city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower Lake CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mariposa CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mentone CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Modesto, CA MSA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morongo Valley CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Newark city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oakland-Hayward-Berkeley MD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oroville East CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Patterson city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Plumas Eureka CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rancho Cucamonga city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ridgemark CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rosedale CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Benito County&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Joaquin city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Pablo city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Maria-Santa Barbara, CA MSA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shaver Lake CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Gate city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stockton-Lodi MSA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tecopa CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Valinda CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Visalia-Porterville, CA MSA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Point CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Winchester CDP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yucaipa city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Acton CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anaheim-Santa Ana-Irvine MD&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Atascadero city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bear Valley Springs CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Biola CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brentwood city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;California City city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Caruthers CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese Camp CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colton city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Country Club CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Del Aire CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dollar Point CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Richmond Heights CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Sobrante CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Farmington CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fowler city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glendora city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gustine city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Highgrove CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indian Falls CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joshua Tree CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;La Canada Flintridge city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lake Almanor West CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Las Flores CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lindsay city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Los Angeles city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manhattan Beach city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meadow Vista CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Milpitas city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monterey city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Napa city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwalk city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palo Alto city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pixley CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prattville CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redondo Beach city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rocklin city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salida CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Fernando city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Luis Obispo-Paso Robles-Arroyo Grande MSA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santa Clarita city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Searles Valley CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solvang city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Springville CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sutter Creek city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tipton CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Twentynine Palms city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vernon city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Weldon CDP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wildomar city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yosemite Lakes CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alameda County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angwin CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auburn city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bell city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bluewater CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bucks Lake CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Calwa CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Castroville CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chualar CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Commerce city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crescent Mills CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Del Rey CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Duarte city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Easton CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elmira CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fetters Hot Springs Agua Caliente CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;French Camp CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Goleta City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hamilton City CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hollister city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Inglewood city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Keene CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;La Mesa city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lake Forest city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laton CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Live Oak city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Los Banos city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maricopa city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mendocino County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mission Hills CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morada CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;National City city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oak View CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Orcutt CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Parksdale CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Planada CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raisin City CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rialto city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rolling Hills Estates city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Andreas CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Francisco-Redwood City-South San Francisco MD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Martin CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Cruz-Watsonville, CA MSA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shafter city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Soquel CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stallion Springs CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tahoe Vista CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Torrance city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Upland city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vine Hill CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Covina city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Willow Creek CDP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yuba City city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alpine Village CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arden Arcade CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bakersfield MSA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bertsch Oceanview CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boronda CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Byron CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Capitola city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cherry Valley CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clio CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Corona city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cypress city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Desert View Highlands CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Hemet CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;El Cerrito city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Exeter city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ford City CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Galt city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Green Valley CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Healdsburg city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huntington Park city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Irwindale city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Keyes CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ladera Heights CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lakeport city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lemoore Station CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lompoc city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madera Acres CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marysville city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Merced, CA MSA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mokelumne Hill CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mountain Mesa CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nipomo CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oceano CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pacheco CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Petaluma city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pollock Pines CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rancho Santa Margarita city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rio Vista city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rossmoor CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Buenaventura (Ventura) city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Jose-Sunnyvale-Santa Clara, CA MSA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Ramon city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Rosa MSA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sierra County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South San Francisco city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suisun City city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Temecula city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tulare County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vallejo-Fairfield, CA MSA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Walnut Grove CDP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Westlake Village city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wofford Heights CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alondra Park CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arbuckle CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Avocado Heights CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benicia city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bonita CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burney CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cantua Creek CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Challenge Brownsville CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clayton city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Copperopolis CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Culver City city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denair CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dustin Acres CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;El Centro MSA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Escondido city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Folsom city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Friant CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Granite Bay CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hawthorne city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hughson city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ione city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kern County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Quinta city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lake of the Woods CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lemon Cove CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Loma Linda city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Loyalton city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mariposa County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Merced city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Modoc County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morro Bay city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Newman city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oakland-Hayward-Berkeley, CA Met Div&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oxnard city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paxton CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plymouth city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rancho Mirage city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rio del Mar CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rosemead city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Bernardino city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Joaquin County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Rafael city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Monica city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shingle Springs CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Lake Tahoe city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stockton-Lodi, CA MSA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tehachapi city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinity County&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Valle Vista CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vista city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Puente Valley CDP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Windsor town&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucca Valley town&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alamo CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antioch city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;August CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bell Gardens city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Blythe city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buellton city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Camarillo city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cathedral City city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chula Vista city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Compton city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crestline CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Del Rey Oaks city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dublin city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eastvale City city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Emeryville city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fillmore city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fresno city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gonzales city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hanford city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holtville city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Interlaken CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kelseyville CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;La Mirada city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lake Isabella CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lawndale city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Livermore city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Los Gatos town&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marin County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mendota city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mission Viejo city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moraga town&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Needles city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oakdale city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Orinda city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Parkwood CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pleasant Hill city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ramona CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Richgrove CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rollingwood CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Anselmo town&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Francisco-Redwood City-South San Francisco, CA Met Div&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Mateo city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santa Fe Springs city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shandon CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Soulsbyville CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stanislaus County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tamalpais Homestead Valley CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tracy city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Upper Lake CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vineyard CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Hollywood city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willowbrook CDP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuba City MSA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;American Canyon city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvin city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Beale AFB CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Big River CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brawley city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Calexico city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carson city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chilcoot Vinton CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cobb CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coto de Caza CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Day Valley CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dixon city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Porterville CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Rio CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fallbrook CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Foster City city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Glen Ellen CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guadalupe city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hidden Hills city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Imperial County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Johannesburg CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Klamath CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lake Almanor Country Club CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lancaster city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Linda CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Los Alamos CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malibu city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McKittrick CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mill Valley city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montebello city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murrieta city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Highlands CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ontario city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palm Springs city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pismo Beach city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portola city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding, CA MSA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Riverside-San Bernardino-Ontario MSA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sacramento--Roseville--Arden-Arcade MSA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Diego-Carlsbad, CA MSA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Luis Obispo city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Clara city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Scotts Valley city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solano County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spring Garden CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sutter CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thousand Palms CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Twain CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vandenberg Village CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Weed city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Whitehawk CDP&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yolo County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adelanto city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anaheim-Santa Ana-Irvine, CA Met Div&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atherton town&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beaumont city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bishop city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bret Harte CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Calimesa city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Casa Conejo CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chino city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Columbia CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Covelo CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Del Mar city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dorrington CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East San Gabriel CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Verano CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fellows CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frazier Park CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Glenn County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hacienda Heights CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Highland city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indian Wells city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jurupa Valley city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;La Crescenta Montrose CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Arrowhead CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Las Lomas CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Little Grass Valley CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Los Angeles County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manteca city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mecca CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mineral CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monterey County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Napa County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Novato city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orange County&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palos Verdes Estates city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Placentia city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prunedale CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redway CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rodeo CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salinas city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Francisco city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo-Paso Robles-Arroyo Grande, CA MSA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Cruz city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seaside city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sonoma city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Squaw Valley CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taft city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tobin CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Twin Lakes CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Victorville city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Athens CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilkerson CDP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yosemite Valley CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amador City city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arroyo Grande city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barstow city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Big Bear Lake city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bradbury city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Calabasas city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carmichael CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chico MSA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coachella city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Costa Mesa city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Darwin CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dinuba city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Palo Alto city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Monte city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fairview CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Bragg city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgetown CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gridley city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hermosa Beach city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Imperial Beach city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jackson city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kingsburg city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laguna Niguel city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lamont CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lincoln city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Loomis town&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madera, CA MSA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McFarland city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mi Wuk Village CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montclair city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mountain View city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North El Monte CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Olancha CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palermo CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pinole city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Hueneme city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Redding city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverside city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sacramento city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Diego County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Lorenzo CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Barbara city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saratoga city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Siskiyou County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Whittier CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sunol CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thermalito CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turlock city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Valley Springs CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Watsonville city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westwood CDP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodville CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Apple Valley town&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avalon city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bellflower city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bodega Bay CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Buena Park city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cambria CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cayucos CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Citrus CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Concord city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crockett CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delano city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ducor CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Edwards AFB CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Empire CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Firebaugh city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fresno County&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Goshen CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hanford-Corcoran MSA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Home Garden CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Inverness CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kennedy CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;La Palma city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lake Los Angeles CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laytonville CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Livingston city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Molinos CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marina city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Menifee City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Modesto city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moreno Valley city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada City city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oakhurst CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Orland city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Parlier city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pleasanton city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rancho Calaveras CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romoland CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Antonio Heights CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Gabriel city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Mateo County&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Maria city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shasta County&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Dos Palos CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stanton city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tara Hills CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tranquillity CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vacaville city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Visalia city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Menlo Park CDP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Willows city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yuba City, CA MSA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alta Sierra CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Armona CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bakersfield, CA MSA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bethel Island CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bostonia CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bystrom CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carlsbad city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cherryland CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cloverdale city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coronado city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daly City city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Diablo CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Los Angeles CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Dorado County&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fair Oaks CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Forest Meadows CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Garden Acres CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greenfield city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Heber CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huron city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Isla Vista CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;King City city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lakeside CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lennox CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;London CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Madera city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mayflower Village CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mono County&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mountain Ranch CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norco city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oceanside city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pacific Grove city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pico Rivera city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pomona city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rancho Tehama Reserve CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ripon city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Round Valley CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Carlos city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Juan Bautista city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sand City city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Rosa, CA MSA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Madre city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South San Gabriel CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Summerland CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Temple City city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tuolumne City CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Valley Acres CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Walnut Park CDP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Westminster city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Woodcrest CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Altadena CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arnold CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Baldwin Park city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beverly Hills city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boulder Creek CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;C Road CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carmel by the Sea city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chester CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clovis city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corralitos CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dana Point city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diamond Bar city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Oakdale CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Dorado Hills CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fairfax town&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Foresthill CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garden Grove city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenhorn CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hemet city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hydesville CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isleton city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kings Beach CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Beach city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lakeview CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lenwood CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lone Pine CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madera County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maywood city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesa Vista CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mono Vista CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mountain View Acres CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Auburn CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oildale CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pacifica city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Piedmont city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poplar Cotton Center CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Randsburg CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverbank city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rowland Heights CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Clemente city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Juan Capistrano city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sanger city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Ynez CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Signal Hill city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South San Jose Hills CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sunnyside Tahoe City CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Templeton CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuolumne County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valley Center CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wasco city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westmont CDP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodlake city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amador County&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Artesia city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bay Point CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Big Pine CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bradley CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Calaveras County&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carpinteria city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chico, CA MSA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Coalinga city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cotati city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Davis city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Discovery Bay CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Pasadena CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso de Robles (Paso Robles) city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fall River Mills CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fortuna city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gilroy city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grover Beach city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hesperia city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Imperial city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kirkwood CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laguna Woods city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lanare CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lincoln Village CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Los Alamitos city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Magalia CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;McKinleyville CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Middletown CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monte Rio CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murphys CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Fair Oaks CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Olivehurst CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palm Desert city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Piru CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Porterville city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Redding MSA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside County&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sacramento County&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego-Carlsbad MSA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Lucas CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Barbara County&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sausalito city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solana Beach city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spreckels CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Susanville city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thousand Oaks city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tustin city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vandenberg AFB CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Weaverville CDP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wheatland city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wrightwood CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anaheim city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ashland CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bear Valley CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Biggs city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brea city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cartago CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China Lake Acres CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colfax city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cottonwood CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deer Park CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dixon Lane Meadow Creek CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Quincy CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Segundo city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Farmersville city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fountain Valley city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glendale city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guerneville CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hidden Valley Lake CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Independence CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnsville CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Knightsen CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake Almanor Peninsula CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Larkspur city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Linden CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Los Altos city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mammoth Lakes town&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meadow Valley CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Millbrae city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montecito CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Muscoy CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Lakeport CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Onyx CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palmdale city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pittsburg city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poway city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Riverside-San Bernardino-Ontario, CA MSA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sacramento--Roseville--Arden-Arcade, CA MSA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Dimas city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Luis Obispo County&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Clara County&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seal Beach city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soledad city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spring Valley CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sutter County&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Three Rivers CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Twain Harte CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ventura County&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Weedpatch CDP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yorba Linda city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpaugh CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arcadia city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azusa city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Berkeley city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bootjack CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Butte County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canyon Lake city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Channel Islands Beach CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clearlake city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Corcoran city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cupertino city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Derby Acres CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Earlimart CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Centro, CA MSA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Esparto CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fontana city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fullerton city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grass Valley city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hayfork CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Humboldt County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iron Horse CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kernville CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Riviera CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lake Wildwood CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lemon Grove city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Loma Rica CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lucerne CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Markleeville CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Merced County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mohawk Vista CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moss Landing CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newport Beach city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oakley city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oxnard-Thousand Oaks-Ventura MSA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Penn Valley CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Point Arena city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rancho Murieta CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rio Dell city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rosemont CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Bernardino County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Jose city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Rafael MD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Paula city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shingletown CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Oroville CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stratford CDP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tehama city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Truckee town&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vallejo city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Walnut city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West Sacramento city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Winters city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alhambra city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aptos CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Avenal city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belmont city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bodfish CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burbank city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameron Park CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ceres city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Citrus Heights city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Concow CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cromberg CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delhi CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dunsmuir city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;El Cajon city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Encinitas city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Florence Graham CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fresno MSA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Graeagle CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hanford-Corcoran, CA MSA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Home Gardens CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inyo County&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kensington CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;La Porte CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lake Nacimiento CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Le Grand CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lockeford CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lost Hills CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marina del Rey CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Menlo Park city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto MSA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morgan Hill city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nevada County&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oakland city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oroville city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pasadena city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plumas County&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rancho Cordova City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ridgecrest city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rosamond CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Ardo CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Jacinto city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Miguel CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Maria-Santa Barbara MSA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shasta Lake city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South El Monte city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stockton city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taylorsville CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Traver CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Val Verde CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Visalia-Porterville MSA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Modesto CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wilton CDP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yuba County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Agoura Hills city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anderson city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atwater city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Beckwourth CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bloomington CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brisbane city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Calipatria city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Casa de Oro Mount Helix CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chino Hills city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colusa city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Covina city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Del Monte Forest CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dos Palos city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Shore CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elk Grove CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Felton CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Freedom CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gold River CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Half Moon Bay city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hillsborough town&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indio city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keddie CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Habra city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lake County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lassen County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Littlerock CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Los Angeles-Long Beach-Anaheim, CA MSA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manton CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Meiners Oaks CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mira Monte CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monterey Park city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Napa MSA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nuevo CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orange Cove city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paradise town&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Placer County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quartz Hill CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rohnert Park city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Salinas MSA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Francisco County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Cruz County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sebastopol city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sonoma County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Squirrel Mountain Valley CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taft Heights CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tomales CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukiah city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;View Park Windsor Hills CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Bishop CDP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Williams city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yountville town&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alturas city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aromas CDP (Monterey Co)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Banning city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Big Bear City CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boyes Hot Springs CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cabazon CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carmel Valley Village CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chico city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clyde CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corte Madera town&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Danville town&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Diamond Springs CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Orosi CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Granada CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fairfield city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Forestville CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gardena city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenville CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hercules city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Idyllwild Pine Cove CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ivanhoe CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kings County&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laguna Hills city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lakewood city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lewiston CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Long Beach city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madera MSA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;McCloud CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mettler CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monrovia city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mountain View CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Edwards CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ojai city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pajaro CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pine Mountain Club CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Costa CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Red Bluff city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverdale CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Running Springs CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Diego city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Leandro city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Ana city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santee city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Simi Valley city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Taft CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sunnyvale city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Terra Bella CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tupman CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valley Ranch CDP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Waterford city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westmorland city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodland city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alpine County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arcata city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bakersfield city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bermuda Dunes CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boron CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Buttonwillow CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canyondam CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charter Oak CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clearlake Oaks CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Corning city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cutler CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Desert Hot Springs city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Foothills CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Cerrito CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eureka city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Foothill Farms CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Furnace Creek CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Graton CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hayward city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Huntington Beach city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Irvine city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kettleman City CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Verne city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lakeland Village CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lemoore city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lomita city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lynwood city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinez city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Merced MSA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mojave CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mount Shasta city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nice CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Occidental CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oxnard-Thousand Oaks-Ventura, CA MSA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Perris city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Point Reyes Station CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rancho Palos Verdes city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rio Linda CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roseville city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Bruno city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Jose-Sunnyvale-Santa Clara MSA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Rafael, CA Met Div&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Rosa city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shoshone CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Pasadena city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Strathmore CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tehama County&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tulare city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vallejo-Fairfield MSA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Walnut Creek city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Whittier Los Nietos CDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Winton CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alameda city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angels City city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auberry CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belden CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Blue Lake city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadmoor CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Calistoga city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Castro Valley CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chowchilla city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colusa County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crescent City city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Del Norte County&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Downey city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Sonora CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elkhorn CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ferndale city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fremont city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Golden Hills CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hamilton Branch CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hilmar Irwin CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Industry city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Keeler CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;La Habra Heights city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lake Elsinore city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lathrop city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Live Oak CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Los Angeles-Long Beach-Glendale MD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;March AFB CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mendocino CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Canyon CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moorpark city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Napa, CA MSA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oak Park CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Orangevale CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paramount city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Placerville city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quincy CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reedley city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rolling Hills city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Salinas, CA MSA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Francisco-Oakland-Hayward, CA MSA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Cruz-Watsonville MSA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Selma city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sonora city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Helena city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taft Mosswood CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Toro Canyon CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Union City city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Villa Park city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Carson CDP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Willits city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yreka city&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:industry_title:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Professional, Scientific and Technical S&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accommodation and Food Service&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Goods Producing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Retail Trade&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Leisure and Hospitality&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Administrative and Support and Waste Ser&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Local Government&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trade, Transportation and Utilities&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Professional and Business Services&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Educational and Health Services&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[attr:age_35_44:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:age_45_54:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs_info):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs2020_info):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant_info):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant2020_info):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:age_25_34:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:age_35_44:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_2123165808428621833:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:age_20_24:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_2123165808428621833:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[__tableau_internal_object_id__].[cnt:unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:age_65:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044667486210:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044667957251:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:age_55_64:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044668985349:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1751900315142287360:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs2020_info):qk]:1&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:age_16_19:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='current_employment_stats' id='current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1'>
            <properties context=''>
              <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='current_employment_stats' table='[public].[current_employment_stats]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1' table='[Extract].[current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1]' type='table' />
            </properties>
          </object>
          <object caption='datajobs2020' id='datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B'>
            <properties context=''>
              <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='datajobs2020' table='[public].[datajobs2020]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B' table='[Extract].[datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B]' type='table' />
            </properties>
          </object>
          <object caption='datajobs2020_info' id='datajobs2020_info_CD7C90806F28440394DB2179E67D90D6'>
            <properties context=''>
              <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='datajobs2020_info' table='[public].[datajobs2020_info]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='datajobs2020_info_CD7C90806F28440394DB2179E67D90D6' table='[Extract].[datajobs2020_info_CD7C90806F28440394DB2179E67D90D6]' type='table' />
            </properties>
          </object>
          <object caption='datajobs' id='datajobs_0E331CD38B174374A578DAF6C81B6A33'>
            <properties context=''>
              <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='datajobs' table='[public].[datajobs]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='datajobs_0E331CD38B174374A578DAF6C81B6A33' table='[Extract].[datajobs_0E331CD38B174374A578DAF6C81B6A33]' type='table' />
            </properties>
          </object>
          <object caption='datajobs_info' id='datajobs_info_A992A73F82A041C0A89A3401FAA326B0'>
            <properties context=''>
              <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='datajobs_info' table='[public].[datajobs_info]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='datajobs_info_A992A73F82A041C0A89A3401FAA326B0' table='[Extract].[datajobs_info_A992A73F82A041C0A89A3401FAA326B0]' type='table' />
            </properties>
          </object>
          <object caption='local_area_unemployment_stats' id='local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800'>
            <properties context=''>
              <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='local_area_unemployment_stats' table='[public].[local_area_unemployment_stats]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800' table='[Extract].[local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800]' type='table' />
            </properties>
          </object>
          <object caption='longterm_occupational_employment' id='longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2'>
            <properties context=''>
              <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='longterm_occupational_employment' table='[public].[longterm_occupational_employment]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2' table='[Extract].[longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2]' type='table' />
            </properties>
          </object>
          <object caption='occupational_employment_stat' id='occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47'>
            <properties context=''>
              <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='occupational_employment_stat' table='[public].[occupational_employment_stat]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47' table='[Extract].[occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47]' type='table' />
            </properties>
          </object>
          <object caption='restaurant2020_info' id='restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3'>
            <properties context=''>
              <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='restaurant2020_info' table='[public].[restaurant2020_info]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3' table='[Extract].[restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3]' type='table' />
            </properties>
          </object>
          <object caption='restaurant_info' id='restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA'>
            <properties context=''>
              <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='restaurant_info' table='[public].[restaurant_info]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA' table='[Extract].[restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA]' type='table' />
            </properties>
          </object>
          <object caption='restaurantjobs2020' id='restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075'>
            <properties context=''>
              <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='restaurantjobs2020' table='[public].[restaurantjobs2020]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075' table='[Extract].[restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075]' type='table' />
            </properties>
          </object>
          <object caption='restaurantjobs' id='restaurantjobs_96ABED294C7C44E88661360AF16F5AA9'>
            <properties context=''>
              <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='restaurantjobs' table='[public].[restaurantjobs]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='restaurantjobs_96ABED294C7C44E88661360AF16F5AA9' table='[Extract].[restaurantjobs_96ABED294C7C44E88661360AF16F5AA9]' type='table' />
            </properties>
          </object>
          <object caption='unemployment_rate_by_age' id='unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4'>
            <properties context=''>
              <relation connection='postgres.0t41ogq1y6m07012d54u20ua2y6a' name='unemployment_rate_by_age' table='[public].[unemployment_rate_by_age]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4' table='[Extract].[unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[year]' />
              <expression op='[year (current_employment_stats)]' />
            </expression>
            <first-end-point object-id='occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47' />
            <second-end-point object-id='current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[industry_title (datajobs2020_info)]' />
              <expression op='[industry_title (datajobs2020)]' />
            </expression>
            <first-end-point object-id='datajobs2020_info_CD7C90806F28440394DB2179E67D90D6' />
            <second-end-point object-id='datajobs2020_3FAE75C72E3043F4A5CEB23CA57E5A2B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[area_name (current_employment_stats)]' />
              <expression op='[area_name (datajobs2020_info)]' />
            </expression>
            <first-end-point object-id='current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1' />
            <second-end-point object-id='datajobs2020_info_CD7C90806F28440394DB2179E67D90D6' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[industry_title (datajobs_info)]' />
              <expression op='[industry_title (datajobs)]' />
            </expression>
            <first-end-point object-id='datajobs_info_A992A73F82A041C0A89A3401FAA326B0' />
            <second-end-point object-id='datajobs_0E331CD38B174374A578DAF6C81B6A33' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[industry_title]' />
              <expression op='[industry_title (datajobs_info)]' />
            </expression>
            <first-end-point object-id='current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1' />
            <second-end-point object-id='datajobs_info_A992A73F82A041C0A89A3401FAA326B0' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[year]' />
              <expression op='[year (local_area_unemployment_stats)]' />
            </expression>
            <first-end-point object-id='occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47' />
            <second-end-point object-id='local_area_unemployment_stats_31D45E192A3A4A63A1F6E7EF27002800' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[occupational_title]' />
              <expression op='[occupational_title (longterm_occupational_employment)]' />
            </expression>
            <first-end-point object-id='occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47' />
            <second-end-point object-id='longterm_occupational_employment_5A210AE4ACA2491D97E0640B3A6D6DD2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[industry_title]' />
              <expression op='[industry_title (restaurant2020_info)]' />
            </expression>
            <first-end-point object-id='current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1' />
            <second-end-point object-id='restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[industry_title]' />
              <expression op='[industry_title (restaurant_info)]' />
            </expression>
            <first-end-point object-id='current_employment_stats_30B81381DB6545488D2AA3D4F420F4A1' />
            <second-end-point object-id='restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[industry_title (restaurant2020_info)]' />
              <expression op='[industry_title (restaurantjobs2020)]' />
            </expression>
            <first-end-point object-id='restaurant2020_info_A74FCAFA490349B790464CE44E3CC1E3' />
            <second-end-point object-id='restaurantjobs2020_2A1B0F8F1D064EA4A4E20F4276911075' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[industry_title (restaurant_info)]' />
              <expression op='[industry_title (restaurantjobs)]' />
            </expression>
            <first-end-point object-id='restaurant_info_DBEB12C0D48E4A21BE14955AC0FDEAFA' />
            <second-end-point object-id='restaurantjobs_96ABED294C7C44E88661360AF16F5AA9' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[year]' />
              <expression op='[year (unemployment_rate_by_age)]' />
            </expression>
            <first-end-point object-id='occupational_employment_stat_6A884355F2C7449C8E0A776ED8AE3F47' />
            <second-end-point object-id='unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Employment Number Since 2000'>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='Area Name (Current Employment Stats)' datatype='string' name='[area_name (current_employment_stats)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[current_employment]' derivation='Avg' name='[avg:current_employment:qk]' pivot='key' type='quantitative' />
            <column caption='Current Employment' datatype='integer' name='[current_employment]' role='measure' type='quantitative' />
            <column-instance column='[area_name (current_employment_stats)]' derivation='None' name='[none:area_name (current_employment_stats):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (current_employment_stats)]' derivation='None' name='[none:year (current_employment_stats):qk]' pivot='key' type='quantitative' />
            <column caption='Year (Current Employment Stats)' datatype='integer' name='[year (current_employment_stats)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (current_employment_stats):qk]' included-values='in-range'>
            <min>2000</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (current_employment_stats):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]' />
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]' />
              <geometry column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Latitude (generated)]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Current Employment: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Geometry (generated)]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Latitude (generated)]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>87177.186379928316</value>
                    <value>&quot;Sacramento County&quot;</value>
                    <value>&quot;POLYGON((-121.7373 38.0851,-121.7078 38.1048,-121.6658 38.1792,-121.6154 38.1957,-121.6024 38.2204,-121.6053 38.2954,-121.5929 38.3131,-121.5216 38.3601,-121.5165 38.4072,-121.5318 38.4282,-121.503 38.4407,-121.5089 38.4728,-121.5592 38.498,-121.5252 38.519,-121.5063 38.5863,-121.5499 38.5994,-121.5651 38.6423,-121.5941 38.6441,-121.6304 38.6976,-121.6029 38.7358,-121.4845 38.7346,-121.1409 38.712,-121.1188 38.7174,-121.0274 38.5081,-121.0262 38.2979,-121.0602 38.2973,-121.222 38.2441,-121.2685 38.2523,-121.3389 38.2288,-121.4205 38.2372,-121.4715 38.2597,-121.5292 38.1938,-121.5245 38.1718,-121.5835 38.1135,-121.5695 38.0969,-121.7373 38.0851))&quot;</value>
                    <value>38.383600000000001</value>
                    <value>-121.27290000000001</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-176' y='170' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{98907158-62B5-412C-853C-1CDD1D4270F5}' />
    </worksheet>
    <worksheet name='Cook Wage Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cook Mean Hourly Wage Trend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column-instance column='[mean_wage]' derivation='Avg' name='[avg:mean_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Mean Wage' datatype='real' name='[mean_wage]' role='measure' type='quantitative' />
            <column-instance column='[occupational_title]' derivation='None' name='[none:occupational_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Occupational Title' datatype='string' name='[occupational_title]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Surgeons&quot;' value=' ' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]'>
            <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Cooks, Fast Food&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:year:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:year:ok]' member='2009' />
                <groupfilter function='member' level='[none:year:ok]' member='2010' />
                <groupfilter function='member' level='[none:year:ok]' member='2020' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' scope='rows' value='Hourly Mean Wage ($/hr)' />
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' field-type='quantitative' max='120.0' min='0.0' minor-origin='0.0' minor-spacing='1.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#863ac8' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{197309D7-F39E-463D-AF5D-2E1FCC155EA3}' />
    </worksheet>
    <worksheet name='Current Employment Number 2019-2020'>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='Area Name (Current Employment Stats)' datatype='string' name='[area_name (current_employment_stats)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[current_employment]' derivation='Avg' name='[avg:current_employment:qk]' pivot='key' type='quantitative' />
            <column caption='Current Employment' datatype='integer' name='[current_employment]' role='measure' type='quantitative' />
            <column-instance column='[area_name (current_employment_stats)]' derivation='None' name='[none:area_name (current_employment_stats):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (current_employment_stats)]' derivation='None' name='[none:year (current_employment_stats):qk]' pivot='key' type='quantitative' />
            <column caption='Year (Current Employment Stats)' datatype='integer' name='[year (current_employment_stats)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (current_employment_stats):qk]' included-values='in-range'>
            <min>2019</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (current_employment_stats):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Longitude (generated)]' field-type='quantitative' max='-12068966.67700127' min='-14372921.985808369' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Latitude (generated)]' field-type='quantitative' max='5325199.209579532' min='3701170.5769421728' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]' />
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]' />
              <geometry column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Latitude (generated)]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Current Employment: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Geometry (generated)]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Latitude (generated)]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>102944.08602150537</value>
                    <value>&quot;Sacramento County&quot;</value>
                    <value>&quot;POLYGON((-121.7373 38.0851,-121.7078 38.1048,-121.6658 38.1792,-121.6154 38.1957,-121.6024 38.2204,-121.6053 38.2954,-121.5929 38.3131,-121.5216 38.3601,-121.5165 38.4072,-121.5318 38.4282,-121.503 38.4407,-121.5089 38.4728,-121.5592 38.498,-121.5252 38.519,-121.5063 38.5863,-121.5499 38.5994,-121.5651 38.6423,-121.5941 38.6441,-121.6304 38.6976,-121.6029 38.7358,-121.4845 38.7346,-121.1409 38.712,-121.1188 38.7174,-121.0274 38.5081,-121.0262 38.2979,-121.0602 38.2973,-121.222 38.2441,-121.2685 38.2523,-121.3389 38.2288,-121.4205 38.2372,-121.4715 38.2597,-121.5292 38.1938,-121.5245 38.1718,-121.5835 38.1135,-121.5695 38.0969,-121.7373 38.0851))&quot;</value>
                    <value>38.383600000000001</value>
                    <value>-121.27290000000001</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-121' y='169' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0089EAC6-EC5C-4634-BF2B-82C820E3FD7D}' />
    </worksheet>
    <worksheet name='Data Science Mean Wage'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Book'>Data Science Mean Hourly Wage </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column-instance column='[mean_wage]' derivation='Avg' name='[avg:mean_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Mean Wage' datatype='real' name='[mean_wage]' role='measure' type='quantitative' />
            <column-instance column='[occupational_title]' derivation='None' name='[none:occupational_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Occupational Title' datatype='string' name='[occupational_title]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Surgeons&quot;' value=' ' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Data Entry Keyers&quot;' />
              <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Data Scientists and Mathematical Science Occupations, All Other&quot;' />
              <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Database Administrators and Architects&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2010' />
              <groupfilter function='member' level='[none:year:ok]' member='2011' />
              <groupfilter function='member' level='[none:year:ok]' member='2012' />
              <groupfilter function='member' level='[none:year:ok]' member='2013' />
              <groupfilter function='member' level='[none:year:ok]' member='2014' />
              <groupfilter function='member' level='[none:year:ok]' member='2015' />
              <groupfilter function='member' level='[none:year:ok]' member='2016' />
              <groupfilter function='member' level='[none:year:ok]' member='2017' />
              <groupfilter function='member' level='[none:year:ok]' member='2018' />
              <groupfilter function='member' level='[none:year:ok]' member='2019' />
              <groupfilter function='member' level='[none:year:ok]' member='2020' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' scope='rows' value='Hourly Mean Wage ($/hr)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</cols>
      </table>
      <simple-id uuid='{65B35D8D-FE43-4ADB-81F0-583AB7099CA9}' />
    </worksheet>
    <worksheet name='Data Science Mean Wage in 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Book'>Data Science Mean Hourly Wage in 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column-instance column='[mean_wage]' derivation='Avg' name='[avg:mean_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Mean Wage' datatype='real' name='[mean_wage]' role='measure' type='quantitative' />
            <column-instance column='[occupational_title]' derivation='None' name='[none:occupational_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Occupational Title' datatype='string' name='[occupational_title]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Surgeons&quot;' value=' ' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Data Entry Keyers&quot;' />
              <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Data Scientists and Mathematical Science Occupations, All Other&quot;' />
              <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Database Administrators&quot;' />
              <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Database Administrators **&quot;' />
              <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Database Administrators and Architects&quot;' />
              <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Network Systems and Data Communications Analysts*&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' scope='rows' value='Hourly Mean Wage ($/hr)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</cols>
      </table>
      <simple-id uuid='{1BEBF69E-72FE-40F9-852A-0BA476A54ECC}' />
    </worksheet>
    <worksheet name='Data Science Wage Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Database Administrators Mean Hourly Wage Trend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column-instance column='[mean_wage]' derivation='Avg' name='[avg:mean_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Mean Wage' datatype='real' name='[mean_wage]' role='measure' type='quantitative' />
            <column-instance column='[occupational_title]' derivation='None' name='[none:occupational_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Occupational Title' datatype='string' name='[occupational_title]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Surgeons&quot;' value=' ' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]'>
            <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Database Administrators&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' scope='rows' value='Hourly Mean Wage ($/hr)' />
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' field-type='quantitative' max='120.0' min='0.0' minor-origin='0.0' minor-spacing='1.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ff55ff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{0B5F94E2-4307-4A7A-8E33-DEC1AC552DD8}' />
    </worksheet>
    <worksheet name='Industry Employment in 2000-2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Employment Number by Industry in Sacramento 2000-2010</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='Area Name (Current Employment Stats)' datatype='string' name='[area_name (current_employment_stats)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[current_employment]' derivation='Avg' name='[avg:current_employment:qk]' pivot='key' type='quantitative' />
            <column caption='Current Employment' datatype='integer' name='[current_employment]' role='measure' type='quantitative' />
            <column caption='Industry Title' datatype='string' name='[industry_title]' role='dimension' type='nominal' />
            <column-instance column='[area_name (current_employment_stats)]' derivation='None' name='[none:area_name (current_employment_stats):nk]' pivot='key' type='nominal' />
            <column-instance column='[industry_title]' derivation='None' name='[none:industry_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[year (current_employment_stats)]' derivation='None' name='[none:year (current_employment_stats):qk]' pivot='key' type='quantitative' />
            <column-instance column='[current_employment]' derivation='Sum' name='[sum:current_employment:qk]' pivot='key' type='quantitative' />
            <column caption='Year (Current Employment Stats)' datatype='integer' name='[year (current_employment_stats)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]'>
            <groupfilter expression='CONTAINS(LOWER([area_name (current_employment_stats)]), LOWER(&apos;Sacramento&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='Sacramento' user:ui-pattern_type='contains'>
              <groupfilter function='level-members' level='[none:area_name (current_employment_stats):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Accommodation and Food Service&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Administrative and Support and Waste Ser&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Educational and Health Services&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Goods Producing&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Leisure and Hospitality&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Local Government&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Professional and Business Services&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Professional, Scientific and Technical S&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Retail Trade&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Trade, Transportation and Utilities&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:industry_title:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Total Nonfarm&quot;' />
                <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Total Wage and Salary&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (current_employment_stats):qk]' included-values='in-range'>
            <min>2000</min>
            <max>2010</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (current_employment_stats):qk]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]' field-type='quantitative' max='120000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]</cols>
      </table>
      <simple-id uuid='{85225971-8BDE-46A5-8AE0-BD43B331EB3D}' />
    </worksheet>
    <worksheet name='Industry Employment in 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Employment Number by Industry in Sacramento 2010-2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='Area Name (Current Employment Stats)' datatype='string' name='[area_name (current_employment_stats)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[current_employment]' derivation='Avg' name='[avg:current_employment:qk]' pivot='key' type='quantitative' />
            <column caption='Current Employment' datatype='integer' name='[current_employment]' role='measure' type='quantitative' />
            <column caption='Industry Title' datatype='string' name='[industry_title]' role='dimension' type='nominal' />
            <column-instance column='[area_name (current_employment_stats)]' derivation='None' name='[none:area_name (current_employment_stats):nk]' pivot='key' type='nominal' />
            <column-instance column='[industry_title]' derivation='None' name='[none:industry_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[year (current_employment_stats)]' derivation='None' name='[none:year (current_employment_stats):qk]' pivot='key' type='quantitative' />
            <column-instance column='[current_employment]' derivation='Sum' name='[sum:current_employment:qk]' pivot='key' type='quantitative' />
            <column caption='Year (Current Employment Stats)' datatype='integer' name='[year (current_employment_stats)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]'>
            <groupfilter expression='CONTAINS(LOWER([area_name (current_employment_stats)]), LOWER(&apos;Sacramento&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='Sacramento' user:ui-pattern_type='contains'>
              <groupfilter function='level-members' level='[none:area_name (current_employment_stats):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Accommodation and Food Service&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Administrative and Support and Waste Ser&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Educational and Health Services&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Goods Producing&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Leisure and Hospitality&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Local Government&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Professional and Business Services&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Professional, Scientific and Technical S&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Retail Trade&quot;' />
              <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Trade, Transportation and Utilities&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:industry_title:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Total Nonfarm&quot;' />
                <groupfilter function='member' level='[none:industry_title:nk]' member='&quot;Total Wage and Salary&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (current_employment_stats):qk]' included-values='in-range'>
            <min>2010</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (current_employment_stats):qk]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]' field-type='quantitative' max='120000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]</cols>
      </table>
      <simple-id uuid='{AF2EB883-E97D-41E8-93C0-E230808752BF}' />
    </worksheet>
    <worksheet name='Introduction'>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column-instance column='[mean_wage]' derivation='Avg' name='[avg:mean_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Mean Wage' datatype='real' name='[mean_wage]' role='measure' type='quantitative' />
            <column-instance column='[occupational_title]' derivation='None' name='[none:occupational_title:nk]' pivot='key' type='nominal' />
            <column caption='Occupational Title' datatype='string' name='[occupational_title]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Surgeons&quot;' value=' ' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]'>
            <groupfilter expression='AVG([mean_wage]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:occupational_title:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' field-type='quantitative' max='137.01858327500148' min='-2.6147567165680434' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' scope='rows' value='Hourly Mean Wage ($/hr)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Occupational Title: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Mean Wage: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>119.68571428571431</value>
                    <value>&quot;Surgeons, Except Ophthalmologists&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Occupational Title: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Mean Wage: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>10.406044226044228</value>
                    <value>&quot;Cooks, Fast Food&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-81' y='-102' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Occupational Title: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Mean Wage: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>33.093298429319361</value>
                    <value>&quot;Web Developers&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='74' y='-196' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Occupational Title: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Mean Wage: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>51.850630252100849</value>
                    <value>&quot;Software Developers, Systems Software&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='89' y='-156' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{846329C9-1412-4725-AB34-A823D6835923}' />
    </worksheet>
    <worksheet name='ML - Data Info'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Machine Learning</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column datatype='real' name='[r_squared (datajobs)]' role='measure' type='quantitative' />
            <column caption='Slope (Datajobs)' datatype='real' name='[slope (datajobs)]' role='measure' type='quantitative' />
            <column-instance column='[r_squared (datajobs)]' derivation='Sum' name='[sum:r_squared (datajobs):qk]' pivot='key' type='quantitative' />
            <column-instance column='[slope (datajobs)]' derivation='Sum' name='[sum:slope (datajobs):qk]' pivot='key' type='quantitative' />
            <column-instance column='[testing_score (datajobs)]' derivation='Sum' name='[sum:testing_score (datajobs):qk]' pivot='key' type='quantitative' />
            <column-instance column='[training_score (datajobs)]' derivation='Sum' name='[sum:training_score (datajobs):qk]' pivot='key' type='quantitative' />
            <column caption='Testing Score (Datajobs)' datatype='real' name='[testing_score (datajobs)]' role='measure' type='quantitative' />
            <column caption='Training Score (Datajobs)' datatype='real' name='[training_score (datajobs)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:testing_score (datajobs):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:training_score (datajobs):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:r_squared (datajobs):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:testing_score (datajobs):qk]&quot;</bucket>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:training_score (datajobs):qk]&quot;</bucket>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:slope (datajobs):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' value='98' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2CE2A003-23CE-4D80-9A44-29EEC61D861C}' />
    </worksheet>
    <worksheet name='ML - Data Info 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Machine Learning</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column datatype='real' name='[r_squared]' role='measure' type='quantitative' />
            <column-instance column='[r_squared]' derivation='Sum' name='[sum:r_squared:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:r_squared:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5392B20C-644E-41BE-806A-D6D3889F2F67}' />
    </worksheet>
    <worksheet name='ML - Data Jobs 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Machine Learning - Data Jobs in 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='ML Data 2020' datatype='real' name='[Calculation_1394990044667957251]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[slope]*[month_numeric] + [y_intercept]' />
            </column>
            <column caption='Current Employment (Datajobs2020 Info)' datatype='integer' name='[current_employment (datajobs2020_info)]' role='measure' type='quantitative' />
            <column caption='Month (Datajobs2020 Info)' datatype='string' name='[month (datajobs2020_info)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[month_numeric]' role='measure' type='quantitative' />
            <column-instance column='[month (datajobs2020_info)]' derivation='None' name='[none:month (datajobs2020_info):nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[r_squared]' role='measure' type='quantitative' />
            <column caption='Slope' datatype='real' name='[slope]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1394990044667957251]' derivation='Sum' name='[sum:Calculation_1394990044667957251:qk]' pivot='key' type='quantitative' />
            <column-instance column='[current_employment (datajobs2020_info)]' derivation='Sum' name='[sum:current_employment (datajobs2020_info):qk]' pivot='key' type='quantitative' />
            <column-instance column='[r_squared]' derivation='Sum' name='[sum:r_squared:qk]' pivot='key' type='quantitative' />
            <column caption='Y Intercept' datatype='real' name='[y_intercept]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:r_squared:qk]&quot;' user:op='manual' />
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044667957251:qk]' field-type='quantitative' fold='true' max='24000.0' min='18000.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs2020_info):qk]' field-type='quantitative' max='24000' min='18000' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044667957251:qk]' scope='rows' value='' />
            <format attr='width' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs2020_info):qk]' value='64' />
            <format attr='width' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044667957251:qk]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (datajobs2020_info):nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs2020_info):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044667957251:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs2020_info):qk] + [federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044667957251:qk])</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (datajobs2020_info):nk]</cols>
        <annotations>
          <annotation class='area' id='6' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontsize='18'>R Squared = 0.175300</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.166667'>
                  <node-reference>
                    <fields>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (datajobs2020_info):nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;May&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='23493.074792243766'>
                  <node-reference>
                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs2020_info):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.5'>
                  <node-reference>
                    <fields>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (datajobs2020_info):nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;October&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='23019.390581717453'>
                  <node-reference>
                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs2020_info):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{DE00B9DA-86E6-43FF-B8C9-ECE4D9E326AB}' />
    </worksheet>
    <worksheet name='ML - Data Jobs Throughout the years'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Machine Learning - Data Jobs Throughout the Years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='ML Data' datatype='real' name='[Calculation_1394990044667486210]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[slope (datajobs)]*[year (datajobs_info)] + [y_intercept (datajobs)]' />
            </column>
            <column caption='Current Employment (Datajobs Info)' datatype='integer' name='[current_employment (datajobs_info)]' role='measure' type='quantitative' />
            <column-instance column='[year (datajobs_info)]' derivation='None' name='[none:year (datajobs_info):qk]' pivot='key' type='quantitative' />
            <column caption='Slope (Datajobs)' datatype='real' name='[slope (datajobs)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1394990044667486210]' derivation='Sum' name='[sum:Calculation_1394990044667486210:qk]' pivot='key' type='quantitative' />
            <column-instance column='[current_employment (datajobs_info)]' derivation='Sum' name='[sum:current_employment (datajobs_info):qk]' pivot='key' type='quantitative' />
            <column caption='Y Intercept (Datajobs)' datatype='real' name='[y_intercept (datajobs)]' role='measure' type='quantitative' />
            <column caption='Year (Datajobs Info)' datatype='integer' name='[year (datajobs_info)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044667486210:qk]' field-type='quantitative' fold='true' max='140000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (datajobs_info):qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs_info):qk]' scope='rows' value='Current Employment Number' />
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs_info):qk]' field-type='quantitative' max='140000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044667486210:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs_info):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044667486210:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs_info):qk] + [federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044667486210:qk])</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (datajobs_info):qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontsize='18'>R Squared = 0.920200</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2010.8073022312374'>
                  <node-reference>
                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (datajobs_info):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='119971.94950911641'>
                  <node-reference>
                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs_info):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2014.5780933062881'>
                  <node-reference>
                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (datajobs_info):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='109761.57082748947'>
                  <node-reference>
                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs_info):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{50170BB4-8012-44E1-9C8D-402BB8728AED}' />
    </worksheet>
    <worksheet name='ML - Restaurant Info'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Machine Learning</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column datatype='real' name='[r_squared (restaurantjobs)]' role='measure' type='quantitative' />
            <column-instance column='[r_squared (restaurantjobs)]' derivation='Sum' name='[sum:r_squared (restaurantjobs):qk]' pivot='key' type='quantitative' />
            <column-instance column='[testing_score (restaurantjobs2020)]' derivation='Sum' name='[sum:testing_score (restaurantjobs2020):qk]' pivot='key' type='quantitative' />
            <column-instance column='[training_score (restaurantjobs2020)]' derivation='Sum' name='[sum:training_score (restaurantjobs2020):qk]' pivot='key' type='quantitative' />
            <column caption='Testing Score (Restaurantjobs2020)' datatype='real' name='[testing_score (restaurantjobs2020)]' role='measure' type='quantitative' />
            <column caption='Training Score (Restaurantjobs2020)' datatype='real' name='[training_score (restaurantjobs2020)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:testing_score (restaurantjobs2020):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:training_score (restaurantjobs2020):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:r_squared (restaurantjobs):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:testing_score (restaurantjobs2020):qk]&quot;</bucket>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:training_score (restaurantjobs2020):qk]&quot;</bucket>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:r_squared (restaurantjobs):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' value='97' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A7DBE37E-70C0-4775-94D9-CBA1EBE96B45}' />
    </worksheet>
    <worksheet name='ML - Restaurant Jobs 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Machine Learning - Restaurant Jobs in 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='ML Restaurant 2020' datatype='real' name='[Calculation_1751900315142287360]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[slope (restaurantjobs2020)]*[month_numeric (restaurant2020_info)] + [y_intercept (restaurantjobs2020)]' />
            </column>
            <column caption='Current Employment (Restaurant2020 Info)' datatype='integer' name='[current_employment (restaurant2020_info)]' role='measure' type='quantitative' />
            <column caption='Month (Restaurant2020 Info)' datatype='string' name='[month (restaurant2020_info)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[month_numeric (restaurant2020_info)]' role='measure' type='quantitative' />
            <column-instance column='[month (restaurant2020_info)]' derivation='None' name='[none:month (restaurant2020_info):nk]' pivot='key' type='nominal' />
            <column caption='Slope (Restaurantjobs2020)' datatype='real' name='[slope (restaurantjobs2020)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1751900315142287360]' derivation='Sum' name='[sum:Calculation_1751900315142287360:qk]' pivot='key' type='quantitative' />
            <column-instance column='[current_employment (restaurant2020_info)]' derivation='Sum' name='[sum:current_employment (restaurant2020_info):qk]' pivot='key' type='quantitative' />
            <column caption='Y Intercept (Restaurantjobs2020)' datatype='real' name='[y_intercept (restaurantjobs2020)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1751900315142287360:qk]' field-type='quantitative' fold='true' max='200000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant2020_info):qk]' scope='rows' value='Current Employment Number' />
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant2020_info):qk]' field-type='quantitative' max='200000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1751900315142287360:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (restaurant2020_info):nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant2020_info):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1751900315142287360:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant2020_info):qk] + [federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1751900315142287360:qk])</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (restaurant2020_info):nk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontsize='18'>R Squared = 0.261900</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0'>
                  <node-reference>
                    <fields>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (restaurant2020_info):nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;May&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='189473.68421052632'>
                  <node-reference>
                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant2020_info):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.3'>
                  <node-reference>
                    <fields>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (restaurant2020_info):nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;September&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='161495.84487534626'>
                  <node-reference>
                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant2020_info):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{3701D2F7-E4D6-4D77-B341-DCA8CDBC6B43}' />
    </worksheet>
    <worksheet name='ML - Restaurant Jobs Throughout the Years'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Machine Learning - Restaurant Jobs Throughout the Years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='ML Restaurant' datatype='real' name='[Calculation_1394990044668985349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[slope (restaurantjobs)]*[year (restaurant_info)] + [y_intercept (restaurantjobs)]' />
            </column>
            <column caption='Current Employment (Restaurant Info)' datatype='integer' name='[current_employment (restaurant_info)]' role='measure' type='quantitative' />
            <column-instance column='[year (restaurant_info)]' derivation='None' name='[none:year (restaurant_info):qk]' pivot='key' type='quantitative' />
            <column caption='Slope (Restaurantjobs)' datatype='real' name='[slope (restaurantjobs)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1394990044668985349]' derivation='Sum' name='[sum:Calculation_1394990044668985349:qk]' pivot='key' type='quantitative' />
            <column-instance column='[current_employment (restaurant_info)]' derivation='Sum' name='[sum:current_employment (restaurant_info):qk]' pivot='key' type='quantitative' />
            <column caption='Y Intercept (Restaurantjobs)' datatype='real' name='[y_intercept (restaurantjobs)]' role='measure' type='quantitative' />
            <column caption='Year (Restaurant Info)' datatype='integer' name='[year (restaurant_info)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (restaurant_info):qk]' field-type='quantitative' max='2020' min='2009' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (restaurant_info):qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044668985349:qk]' field-type='quantitative' fold='true' max='4800000.0' min='2000000.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant_info):qk]' field-type='quantitative' max='4800000' min='2000000' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044668985349:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant_info):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044668985349:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant_info):qk] + [federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044668985349:qk])</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (restaurant_info):qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontsize='18'>R Squared = 0.905200</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2009.99793814433'>
                  <node-reference>
                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (restaurant_info):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='4584011.2201963533'>
                  <node-reference>
                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant_info):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2013.4000000000001'>
                  <node-reference>
                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (restaurant_info):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='4195231.4165497888'>
                  <node-reference>
                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant_info):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{9E25CB27-2EC8-40ED-90D4-6D53C07B92BB}' />
    </worksheet>
    <worksheet name='Rate by Age'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Unemployment Rate Trend Throughout the Years by Age Range</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='Age 16 19' datatype='real' name='[age_16_19]' role='measure' type='quantitative' />
            <column caption='Age 20 24' datatype='real' name='[age_20_24]' role='measure' type='quantitative' />
            <column caption='Age 25 34' datatype='real' name='[age_25_34]' role='measure' type='quantitative' />
            <column caption='Age 35 44' datatype='real' name='[age_35_44]' role='measure' type='quantitative' />
            <column caption='Age 45 54' datatype='real' name='[age_45_54]' role='measure' type='quantitative' />
            <column caption='Age 55 64' datatype='real' name='[age_55_64]' role='measure' type='quantitative' />
            <column caption='Age 65' datatype='real' name='[age_65]' role='measure' type='quantitative' />
            <column-instance column='[age_16_19]' derivation='Avg' name='[avg:age_16_19:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_20_24]' derivation='Avg' name='[avg:age_20_24:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_25_34]' derivation='Avg' name='[avg:age_25_34:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_35_44]' derivation='Avg' name='[avg:age_35_44:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_45_54]' derivation='Avg' name='[avg:age_45_54:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_55_64]' derivation='Avg' name='[avg:age_55_64:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_65]' derivation='Avg' name='[avg:age_65:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year (unemployment_rate_by_age)]' derivation='None' name='[none:year (unemployment_rate_by_age):ok]' pivot='key' type='ordinal' />
            <column caption='Year (Unemployment Rate By Age)' datatype='integer' name='[year (unemployment_rate_by_age)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]' scope='rows' value='Average Unemployment Rate (%)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]' value='p0%' />
            <format attr='text-orientation' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' value='Age Range'>
              <formatted-text>
                <run>Age Range</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[__tableau_internal_object_id__].[cnt:unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4:ok]</column>
          </partitionable-measures>
        </table-calculations>
        <annotations>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 16-19: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.34324999999999989</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-4' y='51' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{2AF1B185-569C-4B95-B93F-8CBDA6B354D9}' />
    </worksheet>
    <worksheet name='Rate by Age Throughout the Years'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Unemployment Rate Throughout the Years by Age Range</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='Age 20 24 (copy)' datatype='real' name='[Age 20 24 (copy)_1484780561636306945]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[age_20_24]' />
            </column>
            <column caption='Age 25 34 (copy)' datatype='real' name='[Age 25 34 (copy)_1484780561636372482]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[age_25_34]' />
            </column>
            <column caption='Age 35 44 (copy)' datatype='real' name='[Age 35 44 (copy)_1484780561636388867]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[age_35_44]' />
            </column>
            <column caption='Age 45 54 (copy)' datatype='real' name='[Age 45 54 (copy)_1484780561636397060]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[age_45_54]' />
            </column>
            <column caption='Age 55 64 (copy)' datatype='real' name='[Age 55 64 (copy)_1484780561636405253]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[age_55_64]' />
            </column>
            <column caption='Age 65 (copy)' datatype='real' name='[Age 65 (copy)_1484780561636413446]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[age_65]' />
            </column>
            <column caption='Age 16 19' datatype='real' name='[age_16_19]' role='measure' type='quantitative' />
            <column caption='Age 20 24' datatype='real' name='[age_20_24]' role='measure' type='quantitative' />
            <column caption='Age 25 34' datatype='real' name='[age_25_34]' role='measure' type='quantitative' />
            <column caption='Age 35 44' datatype='real' name='[age_35_44]' role='measure' type='quantitative' />
            <column caption='Age 45 54' datatype='real' name='[age_45_54]' role='measure' type='quantitative' />
            <column caption='Age 55 64' datatype='real' name='[age_55_64]' role='measure' type='quantitative' />
            <column caption='Age 65' datatype='real' name='[age_65]' role='measure' type='quantitative' />
            <column-instance column='[age_16_19]' derivation='Avg' name='[avg:age_16_19:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_20_24]' derivation='Avg' name='[avg:age_20_24:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_25_34]' derivation='Avg' name='[avg:age_25_34:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_35_44]' derivation='Avg' name='[avg:age_35_44:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_45_54]' derivation='Avg' name='[avg:age_45_54:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_55_64]' derivation='Avg' name='[avg:age_55_64:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_65]' derivation='Avg' name='[avg:age_65:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year (unemployment_rate_by_age)]' derivation='None' name='[none:year (unemployment_rate_by_age):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Age 20 24 (copy)_1484780561636306945]' derivation='Sum' name='[sum:Age 20 24 (copy)_1484780561636306945:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Age 25 34 (copy)_1484780561636372482]' derivation='Sum' name='[sum:Age 25 34 (copy)_1484780561636372482:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Age 35 44 (copy)_1484780561636388867]' derivation='Sum' name='[sum:Age 35 44 (copy)_1484780561636388867:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Age 45 54 (copy)_1484780561636397060]' derivation='Sum' name='[sum:Age 45 54 (copy)_1484780561636397060:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Age 55 64 (copy)_1484780561636405253]' derivation='Sum' name='[sum:Age 55 64 (copy)_1484780561636405253:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Age 65 (copy)_1484780561636413446]' derivation='Sum' name='[sum:Age 65 (copy)_1484780561636413446:ok]' pivot='key' type='ordinal' />
            <column caption='Year (Unemployment Rate By Age)' datatype='integer' name='[year (unemployment_rate_by_age)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]' scope='rows' value='Average Unemployment Rate (%)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 20 24 (copy)_1484780561636306945:ok]' />
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 25 34 (copy)_1484780561636372482:ok]' />
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 35 44 (copy)_1484780561636388867:ok]' />
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 45 54 (copy)_1484780561636397060:ok]' />
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 55 64 (copy)_1484780561636405253:ok]' />
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 65 (copy)_1484780561636413446:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 45-54: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.10249999999999987</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-3' y='55' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 65+: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]> ]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.098749999999999907</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-2' y='58' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 55-64: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.094500000000000015</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-1' y='56' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 35-44: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.10016666666666653</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-3' y='56' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 25-34: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.11758333333333305</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-3' y='56' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 20-24: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.18075000000000005</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-3' y='52' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 16-19: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.34324999999999989</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-4' y='51' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{3683A5D7-C713-4054-8426-7FB66396F14E}' />
    </worksheet>
    <worksheet name='Rate by Age in 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Unemployment Rate in 2020 by Age Range</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='Age 20 24 (copy)' datatype='real' name='[Age 20 24 (copy)_1484780561636306945]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[age_20_24]' />
            </column>
            <column caption='Age 25 34 (copy)' datatype='real' name='[Age 25 34 (copy)_1484780561636372482]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[age_25_34]' />
            </column>
            <column caption='Age 35 44 (copy)' datatype='real' name='[Age 35 44 (copy)_1484780561636388867]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[age_35_44]' />
            </column>
            <column caption='Age 45 54 (copy)' datatype='real' name='[Age 45 54 (copy)_1484780561636397060]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[age_45_54]' />
            </column>
            <column caption='Age 55 64 (copy)' datatype='real' name='[Age 55 64 (copy)_1484780561636405253]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[age_55_64]' />
            </column>
            <column caption='Age 65 (copy)' datatype='real' name='[Age 65 (copy)_1484780561636413446]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[age_65]' />
            </column>
            <column caption='Age 16 19' datatype='real' name='[age_16_19]' role='measure' type='quantitative' />
            <column caption='Age 20 24' datatype='real' name='[age_20_24]' role='measure' type='quantitative' />
            <column caption='Age 25 34' datatype='real' name='[age_25_34]' role='measure' type='quantitative' />
            <column caption='Age 35 44' datatype='real' name='[age_35_44]' role='measure' type='quantitative' />
            <column caption='Age 45 54' datatype='real' name='[age_45_54]' role='measure' type='quantitative' />
            <column caption='Age 55 64' datatype='real' name='[age_55_64]' role='measure' type='quantitative' />
            <column caption='Age 65' datatype='real' name='[age_65]' role='measure' type='quantitative' />
            <column-instance column='[age_16_19]' derivation='Avg' name='[avg:age_16_19:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_20_24]' derivation='Avg' name='[avg:age_20_24:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_25_34]' derivation='Avg' name='[avg:age_25_34:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_35_44]' derivation='Avg' name='[avg:age_35_44:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_45_54]' derivation='Avg' name='[avg:age_45_54:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_55_64]' derivation='Avg' name='[avg:age_55_64:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age_65]' derivation='Avg' name='[avg:age_65:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year (unemployment_rate_by_age)]' derivation='None' name='[none:year (unemployment_rate_by_age):ok]' pivot='key' type='ordinal' />
            <column-instance column='[year (unemployment_rate_by_age)]' derivation='None' name='[none:year (unemployment_rate_by_age):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age 20 24 (copy)_1484780561636306945]' derivation='Sum' name='[sum:Age 20 24 (copy)_1484780561636306945:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Age 25 34 (copy)_1484780561636372482]' derivation='Sum' name='[sum:Age 25 34 (copy)_1484780561636372482:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Age 35 44 (copy)_1484780561636388867]' derivation='Sum' name='[sum:Age 35 44 (copy)_1484780561636388867:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Age 45 54 (copy)_1484780561636397060]' derivation='Sum' name='[sum:Age 45 54 (copy)_1484780561636397060:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Age 55 64 (copy)_1484780561636405253]' derivation='Sum' name='[sum:Age 55 64 (copy)_1484780561636405253:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Age 65 (copy)_1484780561636413446]' derivation='Sum' name='[sum:Age 65 (copy)_1484780561636413446:ok]' pivot='key' type='ordinal' />
            <column caption='Year (Unemployment Rate By Age)' datatype='integer' name='[year (unemployment_rate_by_age)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):qk]' included-values='in-range'>
            <min>2020</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):qk]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]' scope='cols' value='Age 16-19' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]' scope='cols' value='Age 20-24' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]' scope='cols' value='Age 25-34' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]' scope='cols' value='Age 35-44' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]' scope='cols' value='Age 45-54' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]' scope='cols' value='Age 55-64' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]' scope='cols' value='Age 65+' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]' scope='rows' value='Average Jnemployment Rate (%)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' />
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 20 24 (copy)_1484780561636306945:ok]' />
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 25 34 (copy)_1484780561636372482:ok]' />
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 35 44 (copy)_1484780561636388867:ok]' />
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 45 54 (copy)_1484780561636397060:ok]' />
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 55 64 (copy)_1484780561636405253:ok]' />
              <lod column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 65 (copy)_1484780561636413446:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 45-54: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.10249999999999987</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-3' y='55' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 65+: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]> ]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.098749999999999907</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_65:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-2' y='58' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 55-64: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.094500000000000015</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_55_64:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-1' y='56' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 35-44: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.10016666666666653</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_35_44:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-3' y='56' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 25-34: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.11758333333333305</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-3' y='56' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 20-24: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.18075000000000005</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_20_24:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-3' y='52' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Age 16-19: </run>
              <run bold='true'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):ok]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.34324999999999989</value>
                    <value>2011</value>
                    <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_16_19:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-4' y='51' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{05BFC6AB-0D90-4BDC-95F7-E2152C6BEE93}' />
    </worksheet>
    <worksheet name='Surgeon Wage Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Surgeon Mean Hourly Wage Trend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column-instance column='[mean_wage]' derivation='Avg' name='[avg:mean_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Mean Wage' datatype='real' name='[mean_wage]' role='measure' type='quantitative' />
            <column-instance column='[occupational_title]' derivation='None' name='[none:occupational_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Occupational Title' datatype='string' name='[occupational_title]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Surgeons&quot;' value=' ' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Exclusions (Occupational Title,Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:occupational_title:nk]' />
                <groupfilter function='level-members' level='[none:year:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Surgeons&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:year:ok]' member='2009' />
                  <groupfilter function='member' level='[none:year:ok]' member='2010' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([mean_wage])' function='order' user:ui-marker='order'>
                <groupfilter expression='AVG([mean_wage]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Surgeons&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Exclusions (Occupational Title,Year)]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' scope='rows' value='Hourly Mean Wage ($/hr)' />
            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' field-type='quantitative' max='120.0' min='0.0' minor-origin='0.0' minor-spacing='1.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#6dccda' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{9391903F-40AE-407D-A70D-A782D2B60941}' />
    </worksheet>
    <worksheet name='Top 10 Occupations with Highest Mean Wage'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Occupations with Highest Mean Hourly Wage Throughout the Years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column-instance column='[mean_wage]' derivation='Avg' name='[avg:mean_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Mean Wage' datatype='real' name='[mean_wage]' role='measure' type='quantitative' />
            <column-instance column='[occupational_title]' derivation='None' name='[none:occupational_title:nk]' pivot='key' type='nominal' />
            <column caption='Occupational Title' datatype='string' name='[occupational_title]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Surgeons&quot;' value=' ' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([mean_wage])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:occupational_title:nk]' />
                  <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Surgeons&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' scope='rows' value='Hourly Mean Wage ($/hr)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</cols>
      </table>
      <simple-id uuid='{D28E4B6B-14B7-46CD-9618-828D1596425A}' />
    </worksheet>
    <worksheet name='Top 10 Occupations with Highest Mean Wage 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Occupations with Highest Mean Hourly Wage in 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column-instance column='[mean_wage]' derivation='Avg' name='[avg:mean_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Mean Wage' datatype='real' name='[mean_wage]' role='measure' type='quantitative' />
            <column-instance column='[occupational_title]' derivation='None' name='[none:occupational_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[year (local_area_unemployment_stats)]' derivation='None' name='[none:year (local_area_unemployment_stats):qk]' pivot='key' type='quantitative' />
            <column caption='Occupational Title' datatype='string' name='[occupational_title]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Surgeons&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Year (Local Area Unemployment Stats)' datatype='integer' name='[year (local_area_unemployment_stats)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([mean_wage])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Anesthesiologists&quot;' />
                  <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Family Medicine Physicians&quot;' />
                  <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;General Internal Medicine Physicians&quot;' />
                  <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Nurse Anesthetists&quot;' />
                  <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Obstetricians and Gynecologists&quot;' />
                  <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Oral and Maxillofacial Surgeons&quot;' />
                  <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Orthodontists&quot;' />
                  <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Physicians, All Other; and Ophthalmologists, Except Pediatric&quot;' />
                  <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Psychiatrists&quot;' />
                  <groupfilter function='member' level='[none:occupational_title:nk]' member='&quot;Surgeons, Except Ophthalmologists&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]' included-values='in-range'>
            <min>2020</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]' scope='rows' value='Hourly Mean Wage ($/hr)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</cols>
      </table>
      <simple-id uuid='{3C4A6165-6009-4E65-A25A-A30C3C589DD3}' />
    </worksheet>
    <worksheet name='Unemployment Number 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Unemployment in 2020 for Top 10 Counties in California</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='Area Name (Local Area Unemployment Stats)' datatype='string' name='[area_name (local_area_unemployment_stats)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[unemployment]' derivation='Avg' name='[avg:unemployment:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[area_name (local_area_unemployment_stats)]' derivation='None' name='[none:area_name (local_area_unemployment_stats):nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[year (local_area_unemployment_stats)]' derivation='None' name='[none:year (local_area_unemployment_stats):qk]' pivot='key' type='quantitative' />
            <column caption='Unemployment' datatype='integer' name='[unemployment]' role='measure' type='quantitative' />
            <column caption='Year (Local Area Unemployment Stats)' datatype='integer' name='[year (local_area_unemployment_stats)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([unemployment])' function='order' user:ui-marker='order'>
                <groupfilter expression='CONTAINS(LOWER([area_name (local_area_unemployment_stats)]), LOWER(&apos;County&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='County' user:ui-pattern_type='contains'>
                  <groupfilter function='level-members' level='[none:area_name (local_area_unemployment_stats):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]' included-values='in-range'>
            <min>2020</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]' scope='rows' value='Avg. Unemployment Number' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month:nk]</cols>
      </table>
      <simple-id uuid='{4CF401E5-FDE9-49CF-BFE6-2A9866D6D893}' />
    </worksheet>
    <worksheet name='Unemployment Rate Since 1990 Top 10 Counties'>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='Area Name (Local Area Unemployment Stats)' datatype='string' name='[area_name (local_area_unemployment_stats)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[unemployment_rate]' derivation='Avg' name='[avg:unemployment_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area_name (local_area_unemployment_stats)]' derivation='None' name='[none:area_name (local_area_unemployment_stats):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (local_area_unemployment_stats)]' derivation='None' name='[none:year (local_area_unemployment_stats):qk]' pivot='key' type='quantitative' />
            <column caption='Unemployment' datatype='integer' name='[unemployment]' role='measure' type='quantitative' />
            <column caption='Unemployment Rate' datatype='real' name='[unemployment_rate]' role='measure' type='quantitative' />
            <column caption='Year (Local Area Unemployment Stats)' datatype='integer' name='[year (local_area_unemployment_stats)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Exclusions (Area Name (Local Area Unemployment Stats),Year (Local Area Unemployment Stats))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:area_name (local_area_unemployment_stats):nk]' />
                <groupfilter function='level-members' level='[none:year (local_area_unemployment_stats):qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:area_name (local_area_unemployment_stats):nk]' member='&quot;California&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1976' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1977' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1978' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1979' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1980' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1981' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1982' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1983' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1984' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1985' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1986' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1987' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1988' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1989' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([unemployment])' function='order' user:ui-marker='order'>
                <groupfilter expression='CONTAINS(LOWER([area_name (local_area_unemployment_stats)]), LOWER(&apos;County&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='County' user:ui-pattern_type='contains'>
                  <groupfilter function='level-members' level='[none:area_name (local_area_unemployment_stats):nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Exclusions (Area Name (Local Area Unemployment Stats),Year (Local Area Unemployment Stats))]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment_rate:qk]' />
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment_rate:qk]' />
              <text column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F97C1AB0-FCAC-4871-A04F-1AE086C347EE}' />
    </worksheet>
    <worksheet name='Unemployment Rate Since 1990 Top 10 Counties (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='Area Name (Local Area Unemployment Stats)' datatype='string' name='[area_name (local_area_unemployment_stats)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[unemployment_rate]' derivation='Avg' name='[avg:unemployment_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area_name (local_area_unemployment_stats)]' derivation='None' name='[none:area_name (local_area_unemployment_stats):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (local_area_unemployment_stats)]' derivation='None' name='[none:year (local_area_unemployment_stats):qk]' pivot='key' type='quantitative' />
            <column caption='Unemployment' datatype='integer' name='[unemployment]' role='measure' type='quantitative' />
            <column caption='Unemployment Rate' datatype='real' name='[unemployment_rate]' role='measure' type='quantitative' />
            <column caption='Year (Local Area Unemployment Stats)' datatype='integer' name='[year (local_area_unemployment_stats)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Exclusions (Area Name (Local Area Unemployment Stats),Year (Local Area Unemployment Stats))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:area_name (local_area_unemployment_stats):nk]' />
                <groupfilter function='level-members' level='[none:year (local_area_unemployment_stats):qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:area_name (local_area_unemployment_stats):nk]' member='&quot;California&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1976' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1977' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1978' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1979' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1980' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1981' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1982' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1983' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1984' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1985' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1986' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1987' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1988' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1989' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([unemployment])' function='order' user:ui-marker='order'>
                <groupfilter expression='CONTAINS(LOWER([area_name (local_area_unemployment_stats)]), LOWER(&apos;County&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='County' user:ui-pattern_type='contains'>
                  <groupfilter function='level-members' level='[none:area_name (local_area_unemployment_stats):nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Exclusions (Area Name (Local Area Unemployment Stats),Year (Local Area Unemployment Stats))]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment_rate:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{8DC951CC-96C5-40B3-B8FA-815D998A83CA}' />
    </worksheet>
    <worksheet name='Unemployment Rate Since 1990 Top 10 Counties (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='Area Name (Local Area Unemployment Stats)' datatype='string' name='[area_name (local_area_unemployment_stats)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[unemployment_rate]' derivation='Avg' name='[avg:unemployment_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area_name (local_area_unemployment_stats)]' derivation='None' name='[none:area_name (local_area_unemployment_stats):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (local_area_unemployment_stats)]' derivation='None' name='[none:year (local_area_unemployment_stats):qk]' pivot='key' type='quantitative' />
            <column caption='Unemployment' datatype='integer' name='[unemployment]' role='measure' type='quantitative' />
            <column caption='Unemployment Rate' datatype='real' name='[unemployment_rate]' role='measure' type='quantitative' />
            <column caption='Year (Local Area Unemployment Stats)' datatype='integer' name='[year (local_area_unemployment_stats)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Exclusions (Area Name (Local Area Unemployment Stats),Year (Local Area Unemployment Stats))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:area_name (local_area_unemployment_stats):nk]' />
                <groupfilter function='level-members' level='[none:year (local_area_unemployment_stats):qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:area_name (local_area_unemployment_stats):nk]' member='&quot;California&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1976' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1977' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1978' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1979' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1980' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1981' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1982' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1983' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1984' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1985' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1986' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1987' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1988' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1989' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([unemployment])' function='order' user:ui-marker='order'>
                <groupfilter expression='CONTAINS(LOWER([area_name (local_area_unemployment_stats)]), LOWER(&apos;County&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='County' user:ui-pattern_type='contains'>
                  <groupfilter function='level-members' level='[none:area_name (local_area_unemployment_stats):nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Exclusions (Area Name (Local Area Unemployment Stats),Year (Local Area Unemployment Stats))]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment_rate:qk]' />
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment_rate:qk]' />
              <text column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F2B30B01-2069-466D-94B7-B4BFC52F96C7}' />
    </worksheet>
    <worksheet name='Unemployment Throughout the Years'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Unemployment Throughout the Years for Top 10 Counties in California</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='Area Name (Local Area Unemployment Stats)' datatype='string' name='[area_name (local_area_unemployment_stats)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[unemployment]' derivation='Avg' name='[avg:unemployment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area_name (local_area_unemployment_stats)]' derivation='None' name='[none:area_name (local_area_unemployment_stats):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (local_area_unemployment_stats)]' derivation='None' name='[none:year (local_area_unemployment_stats):qk]' pivot='key' type='quantitative' />
            <column caption='Unemployment' datatype='integer' name='[unemployment]' role='measure' type='quantitative' />
            <column caption='Year (Local Area Unemployment Stats)' datatype='integer' name='[year (local_area_unemployment_stats)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Exclusions (Area Name (Local Area Unemployment Stats),Year (Local Area Unemployment Stats))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:area_name (local_area_unemployment_stats):nk]' />
                <groupfilter function='level-members' level='[none:year (local_area_unemployment_stats):qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:area_name (local_area_unemployment_stats):nk]' member='&quot;California&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1976' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1977' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1978' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1979' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1980' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1981' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1982' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1983' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1984' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1985' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1986' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1987' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1988' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1989' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([unemployment])' function='order' user:ui-marker='order'>
                <groupfilter expression='CONTAINS(LOWER([area_name (local_area_unemployment_stats)]), LOWER(&apos;County&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='County' user:ui-pattern_type='contains'>
                  <groupfilter function='level-members' level='[none:area_name (local_area_unemployment_stats):nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Exclusions (Area Name (Local Area Unemployment Stats),Year (Local Area Unemployment Stats))]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]' scope='cols' value='Year' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]' scope='rows' value='Avg. Unemployment Number' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='316'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Year: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>Avg. Unemployment: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='8'>By the elections in November 1992, the economy had clearly begun to recover from the recession in 1991. </run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>438566.66666666669</value>
                    <value>&quot;Los Angeles County&quot;</value>
                    <value>1992</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='27' y='-116' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='357'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Year: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>Avg. Unemployment: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#1d1c1d' fontsize='8'>The 2001 recession lingered and the unemployment reached 6% in 2003.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>329616.66666666669</value>
                    <value>&quot;Los Angeles County&quot;</value>
                    <value>2003</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-62' y='163' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='264'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Year: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>Avg. Unemployment: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='8'>The Great Recession was the worst economic disaster since the Great Depression of 1929.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>614325.0</value>
                    <value>&quot;Los Angeles County&quot;</value>
                    <value>2010</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-192' y='169' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='227'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#787878' fontsize='8'>Year: </run>
              <run bold='true' fontalignment='1' fontsize='8'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]>]]></run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#787878' fontsize='8'>Avg. Unemployment: </run>
              <run bold='true' fontalignment='1' fontsize='8'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]>]]></run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontsize='8'>The pandemic COVID-19 in 2020 did even more damage than the Great Recession to the economy.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</field>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>681825.0</value>
                    <value>&quot;Los Angeles County&quot;</value>
                    <value>2020</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-130' y='25' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{F5EAFC9A-7895-4E12-9A63-B4019A77FA10}' />
    </worksheet>
    <worksheet name='Unemployment Throughout the Years (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Unemployment Throughout the Years for Top 10 Counties in California</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='occupation-trends-db' name='federated.11nivlt1kgd50i17goo4k1ev9abh' />
          </datasources>
          <datasource-dependencies datasource='federated.11nivlt1kgd50i17goo4k1ev9abh'>
            <column caption='Area Name (Local Area Unemployment Stats)' datatype='string' name='[area_name (local_area_unemployment_stats)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[unemployment]' derivation='Avg' name='[avg:unemployment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area_name (local_area_unemployment_stats)]' derivation='None' name='[none:area_name (local_area_unemployment_stats):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (local_area_unemployment_stats)]' derivation='None' name='[none:year (local_area_unemployment_stats):qk]' pivot='key' type='quantitative' />
            <column caption='Unemployment' datatype='integer' name='[unemployment]' role='measure' type='quantitative' />
            <column caption='Year (Local Area Unemployment Stats)' datatype='integer' name='[year (local_area_unemployment_stats)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Exclusions (Area Name (Local Area Unemployment Stats),Year (Local Area Unemployment Stats))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:area_name (local_area_unemployment_stats):nk]' />
                <groupfilter function='level-members' level='[none:year (local_area_unemployment_stats):qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:area_name (local_area_unemployment_stats):nk]' member='&quot;California&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1976' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1977' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1978' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1979' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1980' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1981' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1982' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1983' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1984' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1985' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1986' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1987' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1988' />
                  <groupfilter function='member' level='[none:year (local_area_unemployment_stats):qk]' member='1989' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([unemployment])' function='order' user:ui-marker='order'>
                <groupfilter expression='CONTAINS(LOWER([area_name (local_area_unemployment_stats)]), LOWER(&apos;County&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='County' user:ui-pattern_type='contains'>
                  <groupfilter function='level-members' level='[none:area_name (local_area_unemployment_stats):nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Alameda County&quot;</bucket>
              <bucket>&quot;Fresno County&quot;</bucket>
              <bucket>&quot;Kern County&quot;</bucket>
              <bucket>&quot;Los Angeles County&quot;</bucket>
              <bucket>&quot;Orange County&quot;</bucket>
              <bucket>&quot;Riverside County&quot;</bucket>
              <bucket>&quot;Sacramento County&quot;</bucket>
              <bucket>&quot;San Bernardino County&quot;</bucket>
              <bucket>&quot;Santa Clara County&quot;</bucket>
              <bucket>&quot;San Diego County&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Exclusions (Area Name (Local Area Unemployment Stats),Year (Local Area Unemployment Stats))]</column>
            <column>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]' scope='rows' value='Avg. Unemployment Number' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]' value='County Name'>
              <formatted-text>
                <run>County Name</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</rows>
        <cols>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</cols>
      </table>
      <simple-id uuid='{3BB77FD5-4B45-4646-BCB4-52E5577B0272}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='3423' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='4253' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='84440' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='14730'>
              <flipboard active-id='11' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Mean Hourly Wage for Occupations' captured-sheet='page 1' id='1'>
                    <capturedDeltas>
                      <worksheet name='Data Science Mean Wage'>
                        <selection-collection />
                      </worksheet>
                      <worksheet name='Top 10 Occupations with Highest Mean Wage'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Mean Hourly Wage Trends for Three Occupations' captured-sheet='pg 3' id='2'>
                    <capturedDeltas>
                      <worksheet name='Surgeon Wage Trend'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='horizontal'>
                              <node-reference>
                                <fields>
                                  <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
                                </fields>
                                <multibucket>
                                  <bucket>&quot;Surgeons&quot;</bucket>
                                </multibucket>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Unemployment Rate by Age Groups' captured-sheet='pg 4' id='9'>
                    <capturedDeltas>
                      <worksheet name='Rate by Age in 2020'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Unemployment Rate Trend by Age Groups' captured-sheet='pg 7' id='4'>
                    <capturedDeltas>
                      <worksheet name='Rate by Age'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Employment Number by County' captured-sheet='pg 6' id='10'>
                    <capturedDeltas>
                      <worksheet name='Average Employment Number Since 2000'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Latitude (generated)]' field-type='quantitative' max='5275593.0702982638' min='3769226.7101572682' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Longitude (generated)]' field-type='quantitative' max='-12449979.236075127' min='-14028899.911621518' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Current Employment Number 2019-2020'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Latitude (generated)]' field-type='quantitative' max='5343719.6300755562' min='3719690.997438197' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[Longitude (generated)]' field-type='quantitative' max='-12406641.915814973' min='-14202802.670762589' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption=' Unemployment Numbers Since 1990 for Top 10 Counties in CA' captured-sheet='pg 8' id='5'>
                    <capturedDeltas>
                      <worksheet name='Unemployment Throughout the Years'>
                        <annotations>
                          <annotation class='point' delta-type='edited' id='1' mark-position='1' pullback='12' text-width='214'>
                            <formatted-text>
                              <run fontcolor='#787878' fontsize='8'>Year: </run>
                              <run bold='true' fontsize='8'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]>]]></run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#787878' fontsize='8'>Avg. Unemployment: </run>
                              <run bold='true' fontsize='8'><![CDATA[<[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]>]]></run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#1d1c1d' fontsize='8'>The 2001 recession lingered and the unemployment reached 6% in 2003.</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</field>
                                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</field>
                                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>329616.66666666669</value>
                                    <value>&quot;Los Angeles County&quot;</value>
                                    <value>2003</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='-34' y='162' />
                          </annotation>
                        </annotations>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Unemployment Numbers Comparison for Top 10 Counties in CA' captured-sheet='pg 9' id='6'>
                    <capturedDeltas>
                      <worksheet name='Unemployment Throughout the Years (2)'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Top 10 Industry Employment  in Sacramento' captured-sheet='pg 10' id='7' />
                  <story-point caption='ML - Data' captured-sheet='pg 11' id='11'>
                    <capturedDeltas>
                      <worksheet name='ML - Data Jobs 2020'>
                        <annotations>
                          <annotation class='area' delta-type='edited' id='6' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
                            <formatted-text>
                              <run bold='true' fontalignment='0' fontsize='18'>R Squared = 0.175300</run>
                            </formatted-text>
                            <top-left>
                              <visual-coordinate class='axis'>
                                <x-coord cell-offset='0.4329'>
                                  <node-reference>
                                    <fields>
                                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (datajobs2020_info):nk]</field>
                                    </fields>
                                    <multibucket>
                                      <bucket>&quot;January&quot;</bucket>
                                    </multibucket>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='23536.679536679538'>
                                  <node-reference>
                                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs2020_info):qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </top-left>
                            <bottom-right>
                              <visual-coordinate class='axis'>
                                <x-coord cell-offset='0.380952'>
                                  <node-reference>
                                    <fields>
                                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (datajobs2020_info):nk]</field>
                                    </fields>
                                    <multibucket>
                                      <bucket>&quot;August&quot;</bucket>
                                    </multibucket>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='23050.193050193051'>
                                  <node-reference>
                                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs2020_info):qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </bottom-right>
                            <text x='0.5' y='0.5' />
                          </annotation>
                        </annotations>
                        <selection-collection />
                      </worksheet>
                      <worksheet name='ML - Data Jobs Throughout the years'>
                        <annotations>
                          <annotation class='area' delta-type='edited' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
                            <formatted-text>
                              <run bold='true' fontalignment='0' fontsize='18'>R Squared = 0.920200</run>
                            </formatted-text>
                            <top-left>
                              <visual-coordinate class='axis'>
                                <x-coord axis-value='2009.9084821428571'>
                                  <node-reference>
                                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (datajobs_info):qk]</axis>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='120378.78787878789'>
                                  <node-reference>
                                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs_info):qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </top-left>
                            <bottom-right>
                              <visual-coordinate class='axis'>
                                <x-coord axis-value='2017.0290178571429'>
                                  <node-reference>
                                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (datajobs_info):qk]</axis>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='109772.72727272726'>
                                  <node-reference>
                                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (datajobs_info):qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </bottom-right>
                            <text x='0.5' y='0.5' />
                          </annotation>
                        </annotations>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='ML - Restaurant' captured-sheet='pg 12' id='12'>
                    <capturedDeltas>
                      <worksheet name='ML - Restaurant Info'>
                        <selection-collection />
                      </worksheet>
                      <worksheet name='ML - Restaurant Jobs 2020'>
                        <annotations>
                          <annotation class='area' delta-type='edited' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
                            <formatted-text>
                              <run bold='true' fontsize='18'>R Squared = 0.261900</run>
                            </formatted-text>
                            <top-left>
                              <visual-coordinate class='axis'>
                                <x-coord cell-offset='0.153846'>
                                  <node-reference>
                                    <fields>
                                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (restaurant2020_info):nk]</field>
                                    </fields>
                                    <multibucket>
                                      <bucket>&quot;February&quot;</bucket>
                                    </multibucket>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='51041.666666666672'>
                                  <node-reference>
                                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant2020_info):qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </top-left>
                            <bottom-right>
                              <visual-coordinate class='axis'>
                                <x-coord cell-offset='0.319838'>
                                  <node-reference>
                                    <fields>
                                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (restaurant2020_info):nk]</field>
                                    </fields>
                                    <multibucket>
                                      <bucket>&quot;September&quot;</bucket>
                                    </multibucket>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='11458.333333333327'>
                                  <node-reference>
                                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant2020_info):qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </bottom-right>
                            <text x='0.5' y='0.5' />
                          </annotation>
                        </annotations>
                      </worksheet>
                      <worksheet name='ML - Restaurant Jobs Throughout the Years'>
                        <annotations>
                          <annotation class='area' delta-type='edited' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
                            <formatted-text>
                              <run bold='true' fontsize='18'>R Squared = 0.905200</run>
                            </formatted-text>
                            <top-left>
                              <visual-coordinate class='axis'>
                                <x-coord axis-value='2010.1591928251121'>
                                  <node-reference>
                                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (restaurant_info):qk]</axis>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='2862195.1219512196'>
                                  <node-reference>
                                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant_info):qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </top-left>
                            <bottom-right>
                              <visual-coordinate class='axis'>
                                <x-coord axis-value='2018.7174887892377'>
                                  <node-reference>
                                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (restaurant_info):qk]</axis>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='2486585.3658536589'>
                                  <node-reference>
                                    <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:current_employment (restaurant_info):qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </bottom-right>
                            <text x='0.5' y='0.5' />
                          </annotation>
                        </annotations>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Summary' captured-sheet='Summary' id='13' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{DBD10363-29A8-41F7-BF75-09FF59E9A9C2}' />
    </dashboard>
    <dashboard name='Summary'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='42500' id='3' w='57000' x='3300' y='36375'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='10'>FEATURES:</run>
            <run fontalignment='1'>Æ&#10;&#10;</run>
            <run fontalignment='1' fontsize='10'>    Tableau</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='10'>    Postgres (AWS)</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='10'>Æ    </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontsize='10'>LANGUAGES/INSTALLATONS: </run>
            <run fontalignment='1' fontsize='10'>Æ </run>
            <run fontalignment='1'>Æ&#10;&#10;</run>
            <run fontalignment='1' fontsize='10'>    Python Pandas</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='10'>    Python Matplotlib </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='10'>PySpark</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='10'>    Scikit-Learn</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='10'>    SQLAlchemy</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='92000' id='4' is-centered='0' is-scaled='1' param='C:/Users/sakis/Desktop/occupational-trends-project/image.png' w='50300' x='7600' y='-8000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='26' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='25' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='280' h='92000' id='4' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/sakis/Desktop/occupational-trends-project/image.png' w='50300' x='7600' y='-8000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='42500' id='3' w='57000' x='3300' y='36375'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='10'>FEATURES:</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run fontalignment='1' fontsize='10'>    Tableau</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run fontalignment='1' fontsize='10'>    Postgres (AWS)</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run fontalignment='1' fontsize='10'>Æ    </run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontsize='10'>LANGUAGES/INSTALLATONS: </run>
                    <run fontalignment='1' fontsize='10'>Æ </run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run fontalignment='1' fontsize='10'>    Python Pandas</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run fontalignment='1' fontsize='10'>    Python Matplotlib </run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run fontalignment='1' fontsize='10'>PySpark</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run fontalignment='1' fontsize='10'>    Scikit-Learn</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run fontalignment='1' fontsize='10'>    SQLAlchemy</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{25E468EA-22CD-40FD-812D-FDBEC3825DBE}' />
    </dashboard>
    <dashboard name='page 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='45625' id='3' name='Top 10 Occupations with Highest Mean Wage' w='80000' x='3300' y='4125' />
        <zone h='40500' id='27' name='Top 10 Occupations with Highest Mean Wage 2020' w='80300' x='3600' y='53000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='87' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='86' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='45625' id='3' is-fixed='true' name='Top 10 Occupations with Highest Mean Wage' w='80000' x='3300' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40500' id='27' is-fixed='true' name='Top 10 Occupations with Highest Mean Wage 2020' w='80300' x='3600' y='53000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{71C6C850-AE44-4700-946E-F50A306157C8}' />
    </dashboard>
    <dashboard name='pg 10'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='47625' id='3' name='Industry Employment in 2020' w='80300' x='6000' y='49500' />
        <zone h='47750' id='4' name='Industry Employment in 2000-2020' w='81600' x='4500' y='1375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='64' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='63' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='47750' id='4' is-fixed='true' name='Industry Employment in 2000-2020' w='81600' x='4500' y='1375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47625' id='3' is-fixed='true' name='Industry Employment in 2020' w='80300' x='6000' y='49500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7BC1D5FC-4665-4DEF-8BC6-D03FAAC8F8D6}' />
    </dashboard>
    <dashboard name='pg 11'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='42250' id='3' name='ML - Data Jobs Throughout the years' w='58100' x='3600' y='5000' />
        <zone h='47875' id='9' name='ML - Data Jobs 2020' w='57500' x='3500' y='47125'>
          <layout-cache minheight='185' type-h='scalable' type-w='fixed' />
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='7875' id='8' name='ML - Data Jobs Throughout the years' pane-specification-id='1' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' w='28700' x='63400' y='2875' />
        <zone h='35625' id='10' name='ML - Data Info' w='35600' x='60800' y='11375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='49' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='48' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='42250' id='3' is-fixed='true' name='ML - Data Jobs Throughout the years' w='58100' x='3600' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='7875' id='8' name='ML - Data Jobs Throughout the years' pane-specification-id='1' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' w='28700' x='63400' y='2875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35625' id='10' is-fixed='true' name='ML - Data Info' w='35600' x='60800' y='11375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47875' id='9' is-fixed='true' name='ML - Data Jobs 2020' w='57500' x='3500' y='47125'>
                  <layout-cache minheight='185' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{99AC4217-7627-4D88-B088-F99A5476F9E4}' />
    </dashboard>
    <dashboard name='pg 12'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='50250' id='3' name='ML - Restaurant Jobs Throughout the Years' w='59500' x='3800' y='4125' />
        <zone h='39500' id='9' name='ML - Restaurant Jobs 2020' w='59900' x='2700' y='55250'>
          <layout-cache minheight='185' type-h='scalable' type-w='fixed' />
        </zone>
        <zone h='60750' id='10' name='ML - Restaurant Info' w='31400' x='67000' y='11125'>
          <layout-cache type-h='fixed' type-w='fixed' />
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='15250' id='8' name='ML - Restaurant Jobs Throughout the Years' pane-specification-id='3' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' w='31400' x='64700' y='2375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='48' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='47' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='50250' id='3' is-fixed='true' name='ML - Restaurant Jobs Throughout the Years' w='59500' x='3800' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='15250' id='8' name='ML - Restaurant Jobs Throughout the Years' pane-specification-id='3' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' w='31400' x='64700' y='2375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60750' id='10' is-fixed='true' name='ML - Restaurant Info' w='31400' x='67000' y='11125'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39500' id='9' is-fixed='true' name='ML - Restaurant Jobs 2020' w='59900' x='2700' y='55250'>
                  <layout-cache minheight='185' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C299DEDA-A362-4C38-A0C6-C9A645C28BA1}' />
    </dashboard>
    <dashboard name='pg 2 '>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='43000' id='32' name='Data Science Mean Wage in 2020' w='49800' x='3100' y='50875' />
        <zone h='44625' id='3' name='Data Science Mean Wage' w='51100' x='3300' y='4125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='64' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='63' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='44625' id='3' is-fixed='true' name='Data Science Mean Wage' w='51100' x='3300' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43000' id='32' is-fixed='true' name='Data Science Mean Wage in 2020' w='49800' x='3100' y='50875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{763D3154-B79D-41F5-84C5-69F566C31ACA}' />
    </dashboard>
    <dashboard name='pg 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='30375' id='3' name='Surgeon Wage Trend' w='86100' x='3300' y='4125' />
        <zone h='30125' id='4' name='Data Science Wage Trend' w='86800' x='2800' y='35250' />
        <zone h='30250' id='5' name='Cook Wage Trend' w='87000' x='3500' y='66250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='87' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='86' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='243' h='30375' id='3' is-fixed='true' name='Surgeon Wage Trend' w='86100' x='3300' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='241' h='30125' id='4' is-fixed='true' name='Data Science Wage Trend' w='86800' x='2800' y='35250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='242' h='30250' id='5' is-fixed='true' name='Cook Wage Trend' w='87000' x='3500' y='66250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7DE25DEE-5E19-4729-8112-D9DCCE8490D8}' />
    </dashboard>
    <dashboard name='pg 4'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='46500' id='27' name='Rate by Age Throughout the Years' w='65800' x='3300' y='4125' />
        <zone h='42000' id='28' name='Rate by Age in 2020' w='65600' x='3800' y='52125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='88' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='87' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='46500' id='27' is-fixed='true' name='Rate by Age Throughout the Years' w='65800' x='3300' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42000' id='28' is-fixed='true' name='Rate by Age in 2020' w='65600' x='3800' y='52125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A7160136-1743-41B6-9F41-3FEE019D9D31}' />
    </dashboard>
    <dashboard name='pg 5'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Average Employment Number Since 2000' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='Average Employment Number Since 2000' pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='90' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='89' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Average Employment Number Since 2000' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='Average Employment Number Since 2000' pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8DD931CA-F685-4FDE-8BCB-00C6F74AF736}' />
    </dashboard>
    <dashboard name='pg 6'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='98400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='Average Employment Number Since 2000' pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='60000' id='3' name='Average Employment Number Since 2000' w='45800' x='2300' y='10625' />
        <zone h='59750' id='9' name='Current Employment Number 2019-2020' w='48100' x='49200' y='10625'>
          <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='91' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='90' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='60000' id='3' is-fixed='true' name='Average Employment Number Since 2000' w='45800' x='2300' y='10625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='Average Employment Number Since 2000' pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59750' id='9' is-fixed='true' name='Current Employment Number 2019-2020' w='48100' x='49200' y='10625'>
                  <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{59765267-D0DF-4019-97A4-FEA76A5F1F15}' />
    </dashboard>
    <dashboard name='pg 7'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='63000' id='3' name='Rate by Age' w='63300' x='4000' y='9875' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='19750' id='57' name='Rate by Age' pane-specification-id='12' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' w='14000' x='67900' y='11375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='89' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='88' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='63000' id='3' is-fixed='true' name='Rate by Age' w='63300' x='4000' y='9875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='19750' id='57' name='Rate by Age' pane-specification-id='12' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' w='14000' x='67900' y='11375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BC4892E9-C450-40CF-88B0-800CFCDC2EF1}' />
    </dashboard>
    <dashboard name='pg 8'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='Unemployment Throughout the Years' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='81' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='80' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Unemployment Throughout the Years' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5F8F32FA-21E4-43AB-A3E0-A63B92D8FAC3}' />
    </dashboard>
    <dashboard name='pg 9'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='51000' id='3' name='Unemployment Throughout the Years (2)' w='76900' x='3300' y='4125' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='29000' id='8' name='Unemployment Throughout the Years (2)' pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]' w='18900' x='80900' y='6750' />
        <zone h='39625' id='9' name='Unemployment Number 2020' w='79200' x='2700' y='60000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='77' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='76' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='51000' id='3' is-fixed='true' name='Unemployment Throughout the Years (2)' w='76900' x='3300' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='29000' id='8' name='Unemployment Throughout the Years (2)' pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]' w='18900' x='80900' y='6750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39625' id='9' is-fixed='true' name='Unemployment Number 2020' w='79200' x='2700' y='60000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4886D201-37B8-40A5-979B-5B18727FDA44}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Top 10 Occupations with Highest Mean Wage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE6B5750-4087-4118-BD18-277CD3B4A468}' />
    </window>
    <window class='worksheet' name='Top 10 Occupations with Highest Mean Wage 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE236FCF-4238-426D-AA99-7529F22EDE30}' />
    </window>
    <window class='worksheet' name='Data Science Mean Wage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01B9DE54-CF2E-41FC-BABB-DD448119342E}' />
    </window>
    <window class='worksheet' name='Data Science Mean Wage in 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8199015F-43F6-4598-9617-B572C8079D9B}' />
    </window>
    <window class='worksheet' name='Surgeon Wage Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B4626132-D50B-48C5-B546-92AE98CF86B3}' />
    </window>
    <window class='worksheet' name='Cook Wage Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0ECE8921-4D4F-4D17-9656-F77F0637F525}' />
    </window>
    <window class='worksheet' name='Data Science Wage Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA23BAE9-62A1-4854-991F-9C8769155CCB}' />
    </window>
    <window class='worksheet' name='Average Employment Number Since 2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (longterm_occupational_employment):nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (current_employment_stats):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C0B50EBD-760B-4EF4-8C2E-DC7684893D35}' />
    </window>
    <window class='worksheet' name='Current Employment Number 2019-2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:current_employment:qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (longterm_occupational_employment):nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (current_employment_stats):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D86788C1-2519-42C8-848A-B7F2903EABA7}' />
    </window>
    <window class='worksheet' name='Rate by Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='12' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[__tableau_internal_object_id__].[cnt:unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:Calculation_2123165808419983360:qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:Calculation_2123165808421486597:qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B2E3ACCE-6ED7-49A8-85F5-55AB2150CCF9}' />
    </window>
    <window class='worksheet' name='Rate by Age Throughout the Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[__tableau_internal_object_id__].[cnt:unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:Calculation_2123165808419983360:qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:Calculation_2123165808421486597:qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 16 19 (copy)_1484780561636216832:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 20 24 (copy)_1484780561636306945:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 25 34 (copy)_1484780561636372482:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 35 44 (copy)_1484780561636388867:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 45 54 (copy)_1484780561636397060:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 55 64 (copy)_1484780561636405253:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 65 (copy)_1484780561636413446:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F28EDA23-3C75-4EFA-98CA-DAFC995DFC7F}' />
    </window>
    <window class='worksheet' name='Rate by Age in 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[__tableau_internal_object_id__].[cnt:unemployment_rate_by_age_A8A5BB3E1DB543969D113C4E08B795B4:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:Calculation_2123165808419983360:qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:Calculation_2123165808421486597:qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (unemployment_rate_by_age):qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 16 19 (copy)_1484780561636216832:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 20 24 (copy)_1484780561636306945:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 25 34 (copy)_1484780561636372482:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 35 44 (copy)_1484780561636388867:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 45 54 (copy)_1484780561636397060:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 55 64 (copy)_1484780561636405253:ok]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 65 (copy)_1484780561636413446:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8527C8EE-E564-4248-BBE3-13E80212FBAE}' />
    </window>
    <window class='worksheet' name='Unemployment Throughout the Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52C39507-CAA5-47BB-A7A0-747DF07D6B8D}' />
    </window>
    <window class='worksheet' name='Unemployment Throughout the Years (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ADF85647-F98E-492D-98E2-0068BA58230E}' />
    </window>
    <window class='worksheet' name='Unemployment Rate Since 1990 Top 10 Counties'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment_rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment_rate:qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95015251-D843-46D9-A02D-2334204C8ADD}' />
    </window>
    <window class='worksheet' name='Unemployment Rate Since 1990 Top 10 Counties (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment_rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment_rate:qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B84953EF-FBA7-47BD-B5AC-6C6E51ADE5EF}' />
    </window>
    <window class='worksheet' name='Unemployment Rate Since 1990 Top 10 Counties (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9B9F2B74-0892-4FE3-B1A1-86A4C35C20B5}' />
    </window>
    <window class='worksheet' name='Unemployment Number 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:unemployment:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month:nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64E4E48C-70F5-4A53-9208-2D26DA8EA9B4}' />
    </window>
    <window class='worksheet' name='Industry Employment in 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (current_employment_stats):qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7665C530-DBBB-4FC0-B1DD-5C894B68B536}' />
    </window>
    <window class='worksheet' name='Industry Employment in 2000-2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (current_employment_stats):nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title:nk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (current_employment_stats):qk]</field>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (local_area_unemployment_stats):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56BA1718-B350-4660-B110-C9593E5F63FB}' />
    </window>
    <window class='worksheet' name='ML - Data Jobs Throughout the years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (datajobs_info):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (datajobs_info):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE710E98-CE4C-4FD9-82A0-A2464FC9AC76}' />
    </window>
    <window class='worksheet' name='ML - Data Jobs 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (datajobs2020_info):nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;January&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (datajobs2020_info):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{937CC47F-BA76-497A-98B0-FEEFD8270ED9}' />
    </window>
    <window class='worksheet' name='ML - Data Info'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title (datajobs2020):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB4AD9C1-5FDF-4A9A-9161-230161697DF9}' />
    </window>
    <window class='worksheet' name='ML - Data Info 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title (datajobs2020):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C926FC7F-2705-41B6-91B7-C1E7BD323FD8}' />
    </window>
    <window class='worksheet' name='ML - Restaurant Jobs Throughout the Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044668985349:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:year (restaurant_info):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B636499-D73D-413D-AA23-255FEA3664C1}' />
    </window>
    <window class='worksheet' name='ML - Restaurant Jobs 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (restaurant2020_info):nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;July&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:month (restaurant2020_info):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{743CA483-8345-4BD3-B27A-3AC665502E41}' />
    </window>
    <window class='worksheet' name='ML - Restaurant Info'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:industry_title (restaurant2020_info):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01BEB00F-3A21-4C8F-A0E5-3499D1BE81EC}' />
    </window>
    <window class='dashboard' name='page 1'>
      <viewpoints>
        <viewpoint name='Top 10 Occupations with Highest Mean Wage'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:mean_wage:qk]</field>
                    <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>89.32854460093894</value>
                  <value>&quot;Pediatricians, General&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Top 10 Occupations with Highest Mean Wage 2020'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A2F3C323-D1A5-4BFD-BABB-56CED6250741}' />
    </window>
    <window class='dashboard' name='pg 2 '>
      <viewpoints>
        <viewpoint name='Data Science Mean Wage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Data Science Mean Wage in 2020'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{60DA6F3A-D328-44F7-8A83-D2F22E96ED98}' />
    </window>
    <window class='dashboard' name='pg 3'>
      <viewpoints>
        <viewpoint name='Cook Wage Trend'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Data Science Wage Trend'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Surgeon Wage Trend'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E0CA0727-EF03-46AB-930D-5FFDCC5A0C5A}' />
    </window>
    <window class='dashboard' name='pg 4'>
      <viewpoints>
        <viewpoint name='Rate by Age Throughout the Years'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rate by Age in 2020'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 20 24 (copy)_1484780561636306945:ok]</field>
                    <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 25 34 (copy)_1484780561636372482:ok]</field>
                    <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 35 44 (copy)_1484780561636388867:ok]</field>
                    <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 45 54 (copy)_1484780561636397060:ok]</field>
                    <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 55 64 (copy)_1484780561636405253:ok]</field>
                    <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Age 65 (copy)_1484780561636413446:ok]</field>
                    <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
                    <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[Multiple Values]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>5.5000000000000009</value>
                  <value>3.3350000000000009</value>
                  <value>2.4649999999999994</value>
                  <value>2.6050000000000004</value>
                  <value>2.6849999999999996</value>
                  <value>3.0649999999999991</value>
                  <value>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_45_54:qk]&quot;</value>
                  <value>0.052100000000000007</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{30367065-F14F-4232-BBBD-078607B878E0}' />
    </window>
    <window class='dashboard' name='pg 5'>
      <viewpoints>
        <viewpoint name='Average Employment Number Since 2000'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1C8B5BCD-D0F7-4156-BD5C-6C8211EBEDF1}' />
    </window>
    <window class='dashboard' name='pg 6'>
      <viewpoints>
        <viewpoint name='Average Employment Number Since 2000'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Current Employment Number 2019-2020'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{058079D2-C183-48F8-920F-DD2D811368A4}' />
    </window>
    <window class='dashboard' name='pg 7'>
      <viewpoints>
        <viewpoint name='Rate by Age'>
          <zoom type='entire-view' />
          <highlight field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]'>
            <color-one-way>
              <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]</field>
            </color-one-way>
            <bucket-selection>
              <bucket>&quot;[federated.11nivlt1kgd50i17goo4k1ev9abh].[avg:age_25_34:qk]&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{31745F1E-EFB1-40F0-A21F-210C62473E72}' />
    </window>
    <window class='dashboard' name='pg 8'>
      <viewpoints>
        <viewpoint name='Unemployment Throughout the Years'>
          <zoom type='entire-view' />
          <highlight field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0520AC78-BCDA-4A02-8DB3-80396C46DC86}' />
    </window>
    <window class='dashboard' name='pg 9'>
      <viewpoints>
        <viewpoint name='Unemployment Number 2020'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Unemployment Throughout the Years (2)'>
          <zoom type='entire-view' />
          <highlight field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]'>
            <color-one-way>
              <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:area_name (local_area_unemployment_stats):nk]</field>
            </color-one-way>
            <bucket-selection>
              <bucket>&quot;Alameda County&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{011844A0-0FFD-47AE-8760-763A16F99817}' />
    </window>
    <window class='dashboard' name='pg 10'>
      <viewpoints>
        <viewpoint name='Industry Employment in 2000-2020'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Industry Employment in 2020'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{65D15D6C-9A8D-4737-B446-6DF755E068FF}' />
    </window>
    <window class='dashboard' name='pg 11'>
      <viewpoints>
        <viewpoint name='ML - Data Info' />
        <viewpoint name='ML - Data Jobs 2020'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.11nivlt1kgd50i17goo4k1ev9abh].[sum:Calculation_1394990044667957251:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='ML - Data Jobs Throughout the years'>
          <zoom type='entire-view' />
          <highlight field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B7B30DCC-634C-4BC0-9267-AE8DD90C3801}' />
    </window>
    <window class='dashboard' name='pg 12'>
      <viewpoints>
        <viewpoint name='ML - Restaurant Info' />
        <viewpoint name='ML - Restaurant Jobs 2020'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='ML - Restaurant Jobs Throughout the Years'>
          <zoom type='entire-view' />
          <highlight field='[federated.11nivlt1kgd50i17goo4k1ev9abh].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{57E76B34-2CFF-440D-B361-E051604C6E7F}' />
    </window>
    <window class='dashboard' name='Summary'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{D60E942B-9AAD-4214-A26A-B826DB8491EC}' />
    </window>
    <window class='worksheet' name='Introduction'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11nivlt1kgd50i17goo4k1ev9abh].[none:occupational_title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8789CB5A-D3AB-43D4-8AAC-6103CF4625FA}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{543D1186-7D25-40D0-8866-DF16BA6C72DB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Employment Number Since 2000' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cook Wage Trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Current Employment Number 2019-2020' width='192'>
      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
      C7QjhOD/B6sgYGnpOKQJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Data Science Mean Wage' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Data Science Mean Wage in 2020' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Data Science Wage Trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Industry Employment in 2000-2020' width='192'>
      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
      gdzix18AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Industry Employment in 2020' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAeZklEQVR4nO2d2XMkWZaXP3cP93CPfVGE9pRyr6ysrKyumqKanmmaAR7AwGzgBcOseYOB
      h2HMeOZP4R0bHmYeMMYwaKPa6KF76L2y9qxctYcU+x7h4RsPUkopKSIz3LVkSnE/s7aulOQn
      jnv47957zj33XsnzPA+BYAKRJEmS37QTAsGbJHSaxjzPw3VdXNdFkqTTNC0QnAk+BODRrJbQ
      Enm61S366EQVi75kkDA0cG00I4qiKAD7/y8QvM34EoDbqVBV88TCEdrFMl088Jo0PAuUCDdv
      xM7OU4HgDPARA0jE4jHAo1GrsXDlCt5Lv3NdF0Q8Lbhg+OgBXNaKHVxtg5A9YHNzm3w2yUAy
      iBsqnmvjuBASIx/BBUI6izSo4zgiBhC89Yg0qGDiEQIQTDRCAIKJRghAMNEIAQgmGiEAwUTj
      ax5g/dGXRBbvY5YfEYos0qmu0EdnKhXDGphMz86jyKIGSHBx8CEAmbnpDDs25GfzFIs2smoQ
      82Br4zlGap5ZaXcOwHEcRJW14CLgQwAOz1c2aegSA7lMqWmQiJgMMMjPXGHQ7+7NBItiOMHF
      QcwECyYWMRMsmHiEAAQTjRCAYKIRAhBMNEIAgolGCEAw0QgBCCYaIQDBRCMEIJhofG2L0qgU
      CSen6dUK2KEYmtuhj0EiouG5DmEjKorhBBcKXwLwejWq2hTdeg+PNkgguS3qpQGSGuXmtej+
      znACwUXAhwAkohGDtuvieS4eIOHhAbKs4DjOwV9K0u7WiO0C9Bv+PEotQ0j3d41AEBBf6wE2
      qyauViKfjWOHYqhul4GkE9NVcB0cD0KyjOd5yLIMm7+C7Qf+PPro30Ni3t81AkFAfAhAYfnG
      rSM/i56qMwLBeSOyQIKJRghAMNEIAQgmGiEAwUQjBCCYaIQABBONEIBgohECEEw0gU6JbDVq
      SFoExTWxUDG0EJ7nElI1ZHE6pOACEUAAFisrm8iqSkiycQlhGBqW5XL9xjU8z9v/H4BfOXhw
      6Kyx1n//a1r/6ye+bGT+3Z+iv3/P5ycLJpEAAlDJ5xI8Xisym0sjuR7tZo1QJAtwqBpU9jzf
      AnBdB++lwjq708GpVHzZcPr9Q8V5AsEoAg2BbMvi1q1byIMmpmSQn53Fcyzco1sjBhgOKbIC
      oQO3ggypZEUm9JINz3PB8ykISUHsG3b5CSSA+aXre/+VOEVXzg6r/DP6G//F1zX6wo/Rcn98
      Rh4J3hZEEyeYaIQABBONEIBgohECEEw0QgCCiUYIQDDRCAEIJhohAMFEE2gizHFsQN7bF2hv
      DyC8g/2ABIILQgABuHz9+WfYahQDExOdTDKKaZpcu34DRbz/ggvESAE8X9tgeipLJGIc+Y2H
      ooRwkdBjKSKeR72yg5aYRj5yTrDseb7HWI7j4Nn2/r9d1/8hlq7jYh+y4X+rRtc9bENwOTkm
      ANd12SlV+B//+//S65n82b/5Vxj6y1sVykSjESwlQlixMCWDK1dv4dqD4+cEBymGU44UwwXY
      bPdoMZwr+w91ZPmwDcHlZMg3LPE/f/oLVtY2+Q//9seox14CieUbt8/FOYHgrDkmAMuy+PD9
      O9y+vsTSwuyb8EkgODeOCSAc1rh/V7TwgslgxCDXo1yqoAJGbgrtXF0SCM6PodFhs7TJX/3l
      X/Hz337he0mjQHCRGNoDJHLz3L21jBOK4D8JKRBcHEbmBxVF3jv/RSC4vIwUgGuagII47Utw
      mRkpAElyeLq2gXKe3ggE58xIAfQsuLY4IwZBgkvNyLl+D9DD4SFZIIen3z1ip9EnE5UwMcil
      45j9PleWr4pzggUXipECyGTTtAbWkB5A4criLGrSweu3iHpQ2tlAT86KYjjBhWOkAKKRCNVO
      k0a9Qy51+DTIettkYXqa9WdluhgsXLmONeiLYjjBhWPkN2yaJun8PM1KkVzq6qHf5fLTACxd
      FyUTgovNyKax3miy/ugx89evjvoTgeDCM7QHMPt9wmENT3OCrZkUCC4IQ9/v0tYatqyTz4ZF
      GlRwqRkqgIVrt1hdWaXW7YiZ4D0ss0W3teHrmrAxhR7NnZFHgtPgFSMcl16rzqMn69y7sXh+
      Hr2lVAu/4fc/+Y++rrn+vT/l1sd/fkYeCU6DkUFwv2+Sm1vitnj5BZeYkQLwPAhrmlgPILjU
      DBWAbTukkgl6vb6IAQSXmqEC+Oy3n6HKUaZ0ld55eyQQnCNDg+CY7vF8o4gkGdwc8vvS1hpd
      L4zu9ehhkEkYOPaARCoriuFeQcvs88WWv0xSPpbgZi5/Rh4Jhgrg9r2PSE+XUJGGrAdwqbVM
      pqcTlKttFLpUa11M0yWVmTpzhy8ybbPP3zx77Ouae7PzQgBnyNAhUKe+w6effsqDx8+HCEBG
      lW3WNou4gx4dy8XQI0TCCo4jps0EF4uhPUA8O8tsNo4qybhwTARXb945e88EgnNg5ERYOp2m
      OXBFKcRbRs/u0Bw0fF0TUxNE1dgZeXSxGSmA4vo6ljGDDWJjrLeIJ82H/GTjv/m65u/P/mM+
      yv3gjDy62IycCEvnp7Bk0Ef9gUBwCRgpgFqtRsIwEIsCBZeZkUOgpZt3uXrzHdTz9EYgOGdG
      F8M1K/z0pz/HOk9vBIJzZqQAstOzmI2aEIDgUjNUAI1Gg16vi5ZKiiBYcKkZGgN8/eABH/7g
      h5QKP2MAHD0mT3Cx2WkV+MWzv/F1zc3cbe7NfXBGHr05hgrgww/f59d/+3OyS9eHvvzPHn0D
      eoqQ3aaPzlQqhjUwmcrPiGK4C8B2s8Bffv4Xvq75p+/+yeQIQI9n+Hs/+hFW38TheClEp9sh
      qqdwZQ3dc1hffYKRmid/iXeGc5w3Y8NzvcP3cip+OAFseJdyp7yRRyR1Wk1KW0Wmrl0lpr78
      Zy7xWIJqvY4hmwyIkM3PY/a6l3pnOEV5MzYkWTpkQz4VP/zv+S0f8WO92OA//edPfdn4/t1F
      /uxffOz7s8+SkfMAv/jZ/6HT7KJvV/knP/rkpd/ILN+4zfLZ+yZ4i3Fcj2Z34Ouanvn25RRH
      NicRTUbNL/LhnWvn6Y9AcK6MFMDs3Ayr3z0mmRf72gguL0MF4LounhLm9s1rYlcIwaVmqAB+
      +elf87Nf/w5HjhI+b48EgnNkaBD8d//hP+OdSpFvv11hgFgPILi8DBWAJCtkcrP8YW72vP0R
      CM4V/0llgeASIQQgmGiEAAQTTaADYJxBh9VCg4hi7u4MF4/g2AOSabEznGB8bNfjq+2Or2ti
      msKNqdOrTw4gAI+NjQIDW0ZSQXK7rJbX0ZOzpDOiGO60bbytxXBBbHjeYRum7fL5lj8B5KMh
      llOnt1DXvwAci0azRaXRI5+J4shhUplp+r0OjieK4U7bxttaDBfEhiQdtuEE2Hv8qA2Av/j9
      b3F8NHLxcJg/uXcfCCIAReP9Dz7AcVw818FFJqTIuy2+GP0I3gD/9fe/xfLRI80mEicQAADS
      bgsQoBUQCN4mRBZIMNEIAQgmGiEAwUQjBCCYaIQABBONEIBgohECEEw0QgCCiSZQLdDm6jO8
      cJKIPKCPTjIaxnNsjFhCFMMJLhSBZoJ1XWerUsUMy0hul3qxTSiS4WY8geM4+8VnUpBiONeF
      l6a1PS9AMZzrHirWClQM552CjSN+BCqG87wjfgR4HqdxL0f9OIV7OY3nEQjvoJgvgABcPEnF
      tS1sRcbzFPRIDMse4LFbeOV5HrIsByqGk2UJXipek4LYkOTdz39hI0CvJEnSYRtSgEK2Izbk
      AEV5EkdsBHge0tHnEciGdOrPNMDjOGYjENLBdxFAADJ4DotLS4RlGwuNSDiE5zp43u4LLElS
      oIe865sUSDhHjBz6fCnA5i4Sh+8hiEtHn0Og2zpyL0H2qZE48jyCCOAUbBy97jRsBOWFjQAC
      kJiaFovlBZcDkQUSTDRCAIKJRghAMNEIAQgmGiEAwUQjBCCYaIQABBONEIBgohECEEw0gYrh
      Vp9+R6XjEJFM+hhMpWMM+n2Wrl0X1aCCC0UgAcTiSYxkmG67QcTzqJS20BOzyOKc4FO3cZm3
      RrTtYNWgJz2v2PPYtxGoGnS7sIkaz6EzwJQMFpduYFumOCf4DGyIrRFfbSMIksS+jUDVoHfv
      f3QiBwSCtwURBAsmGiEAwUQjBCCYaIQABBONEIBgohECEEw0QgCCiUYIQDDRCAEIJppAc8qb
      aw9RjCu0K093i+FScSyzx9zikiiGE1woAglgem6GYtFB1eOEPdgprGIk50Qx3BnYEMVwr7YR
      hBMWw8HGyhqVtk4yYjHAYHZ+Gcvsi2K4M7AhiuFebSMIJyyGg+Ub77N8IhcEgrcDEQQLJhoh
      AMFEIwQgmGiEAAQTjRCAYKIRAhBMNCdKqLbqZQboxAwVz3VQw4aYCRZcKE4gAI/tYgXPk6jJ
      Hq6kcfP68qk5JhCcBycaAkmygiJL2LaF63Hys70EgnPmBD2AxFQqhikZxA0NXBvH8QgpQgSC
      i8OJYoDU1Myhf784w3W/+Cx7B8KZY9d5vOKww1AU9orpJElCfe894uHwcRuet9fhHLckz87u
      F+RJkgT6MqHpf+7r3tCXD9kwEsvc+OjPh/6phzf0JMrU9P1DNiIhjR9evTH88zxvaA+aj8YP
      2chpM/wg9w983cqMvnDIRj46w7+8/+MRbnhDT2G8NnXzkI1EROXH/+i9EZ84/BtezCcOfy+e
      xwczxggLw59pRFMO2wD+9Ycf43jH64pG3UtMC+8X80lekJOoX4PjOK8slhrlmF8b8OojMy+K
      jRd23rQfb8u9jGtDluVX/s3rbEhSkNOfx+B1BxkXttb5/PMvsJzR2jtuw6W0XWBzc5NStb5/
      Bm+/26Vc2qHVNcf0w6VeLbNdrMCeDcvsUy4Vqbc6vu+lWq2C3afa7Pq4l8P02w0ePXlKuVoP
      bKNZr7BdqvKq9mwcP549e8ZGoeTLRqtRY2Njg83NbVz2BOTZfPnVtxSLxbFsdFuNPRtbWO7e
      i+va7JQqY/vR77bZ2Nhga3OTvuUgSRKtVoteu8Hmdolhj+ZMBPC61r3XqqMZsVd+WcdtSEQN
      mWbHorC5uf/T0s4mK6urFIrlMf0Y8LtffcbWzsGX3K4X+ebpBjuFLX/34to8evQdz1c38F7d
      0oy2AbSaddbXnlNpHhfguDZCsky9tM0XD58EtrG5sUksEuKXn33py0Y0HqdarlAr7mC9+KFt
      8mx1jc3t42IaZkOPxqlVKnTrVbqDF/X+EpsrT3iysj7UxlE7YT1Cs1rBtTpUGj0A1lZXePRk
      hWq1iMfx9+1khdUB6XeadEIq/ta6SOixDGw8JP1S7GEYOh4S6tg14gpLywuY8kFcoWo6ihyg
      zlwOMZvLIIUNdNV/fTyAY/WpNbssL10lEhk+Hn4tnsdWqcrVuTRFJxXMBjA/N82j1W1++Im/
      vV9lOUQ+m6DS8zh4qhIfffQxkne8Zx5uQyafTVJuDYhoe8/Ss9nYKTOvRYDF19qQZJmZ6Sxb
      5TbX53af5fVrV7E8BUUaHlO8kZngkBqm1+36Xuxi9RpY6KSTsf2faZqOY9vouj62nXK5iqoe
      fHZI1VA8k1A44ssfgJhh0B8MAq1cA1BUnWwyige0u71ANnBter0uxbbHbCagiICtzW1mFhZI
      xaN+HaBUaeK1m+y/7opKt16iPxh/9VaxXGN+dhp5r2X3ZI2P3r9DNpsb28Z2scLc3Mx+NrLb
      aVMp7VCs1GFID/BGBNB3FdIRxfdLoxoJpEGTze29caHrYHswMzNLRNfGtOJQLtRo9w7G7L1O
      i+vvvM+g1/LlD4DtOHTqFaqtgC8vEIknqFcrRIxgL6/rueSmctiWyWDgf6nirhGHWCrB5spz
      mkPiqVcjM5WJ4UXi+z1At9fHiOgY+vj3NJ1L8913TxjsLft88uQJnU6PRqM2to25mRyPHz2m
      tye8TG4GBh2K5eE2zl0Atm1zdfkq03OLaCF/PcCg22C90KDXaez+QJLY3i4Q1TVKrwggDxPm
      /h/cZnpqevefnkcik6Nd2SI3s+DLHwAtrFGvN1DV4KPJerWO47m0O6NjgFcxGAywBn16vR5O
      wJ4ISSakGtx99xay5NeGS7naRuq29nuAiK7jOg59czC2la3NNdr11n5yJBwCLZYhm4yPbWO7
      tEWv3qTd3Y9GqFRKNFrtIe3/G4kBPCrlHTwtwfgd2y7haIYf/tFHePKB2/F4AldWuTJ3fL5h
      OAOK5TaLian9n9QrJfo2eK7/1rNRb3Pn3vukosfnKsZF1zVu3LlPNh6sB9AjcfrNR2xvbaPn
      lkhEVP9GJAnP6rG6ViGWmfN16c52iVQ8SjiTO4gBXJu+DTNTybHt3Hn/Y9qdLrG9GODK1RuU
      y2V0PTG2jWvX7zE90yKWPHiW8al5EkNf/zfQA4RCKvF4gk6r4bu1ss0Oa+vbDKzdF9V1LFzX
      pVwq0myPNwTxPAVNBXOw10JIEuncDPKgTb01OpU50p5r0TMHuAGnU2yzC6pBvbhF/QTDqNkr
      17n9zh3yieAxgB6NYvV72D53fKhVipQqNfq9HvtXSlApFWl3xnumjm3x8NvvaBSLtF8M45wB
      f/v/fsXX3z0e25ftQgFV9qi3+sDuXEA6HiUcSQydfH0jWaBas8Pdd+/gu3BUgoFlvrQthkQs
      niASjY8dA/T7JulM+lB70K6ViOaXWcj7z6Cks1nK7X7gILhf3+aLlRYzKT3Q9i0AOBYPvvyK
      xak4tY5JXPcfzL9AUZQRbeVo3rl7b4ghlVgigSqPa83Dsi2y8zeIv8gCSTJ3776LO2Y77Xke
      UV1lc6fGlau7I4J+v7+b/hzRQL2RIFhXXB4+fort86WRZAVdU2nvTVjJSoh+r0uv26ExZutt
      GDLfffWQ1fXCgT9GhMr2BpW6/yC4Ui4TUrVA27fA7hj3/nvvcvv2bbKp2OsvGIrH7MwMjhoj
      Gxs3GXAYy+zy5Nk6uqHvZ2HGpVkr8+CzB3z5xdfs53xsk+dr60PnAYahhDSmM3EKOyXsvZe1
      Xa9QKJbHTpe363WavQHRaHS/cTUMg7W19ZHbybwRAexsPKNQrjPwuzGS5+3WG70Yq3se62ur
      mL6GICpTMzlyUwet/WAwoG1aNGrHJ9NeRyQaxT5JGlTTaVYKrK2t0RhzGDfECKmojm1ZuKOr
      rF6JGo6wOJPF8STfRb2JdJZ41ECWpN3ew3MplFt8cPsqydT4vao5cLB7bQZ7QXAsmSaCzXa1
      Mdb1rm2ytraB47qHJr2mshkG1vB07LkLYGCaLN24Q9zQ0VV/H28OHKIRg1RqN7CyLZPp2QUk
      3NdO8x8gs7i0RKe5+1A9z0NRNSS7hxL2m/8G2bXp9K3X/+Go60Ma2UyaaDSKFgo2mQZQq9WQ
      nQ7fPDk+azoukiRh26+v0xmGbdukMpm9F8qjvLNJx1Gxeu2xbRgRg5AWRn3RfMsqyWyWpZmp
      V1+4Ryyd4c7tG3iue2jEU65U0UZk6c5dAE+ePKFUaRDRPEzLXw8geRYhPUV7Py+8W33quQ7d
      /ni561p5h3KpRCKzl4Ma1FnfaRGNxjD7fV/+AMRSGaKazMAOln+XkJBwWF9dodb2H4S/IJnJ
      IUkK1674y+C8jOPu9h/BtqO0GVgvEgsK793/kDs3l7l165Y/Q5J80Ie5Ft88fMTqxvESlWHI
      ikqn0yMVU2l1dt+HSrGAEY1jjkjHnrsArizMkp5ZZGlhAc1nD9DtdChsrmAk0gAomsHy8jJX
      b7zDtflxkqoDNrcatLpd+s29yTQ1gtmqcuXqDSJh/+nDWq3G+tozmt3x892HkCQqxRLNbpdG
      fbyufhiO1QNZCzwUA7DMPkZyilzSfxAtuxbrm9v7A48XtTqvqz96mVqtTq9eZm1vorPbM/nk
      Dz7i2tKVsa53HYtGrcJOrUdqL6Wczc/iug6ddv3tmAeIJTMMSju0+xLROK9YGDDk2niMwua3
      oCjM5dJIkkwo5EdECqmkgWmraPrucEeSw9z74D4A6bj/Lz6VneKWnmB+evx891Gi8QR376To
      BR9JYVkWnufgBEzHep7LwPFQPTfYZJokoyoE2O3zgHQ6RavvcGUmC+wOq3a2NxmoSRbnpl97
      vRLS0MIauansoTgmk4hhSvrbUQtk9ro8XVnbrd3xGWwpoTDv3X+XtI/A6jAy2dwU+XyeTDr4
      C/syqqLQqpUoNQIOXzyX9fUVypU6mhYsgwMQMSK4UohoOFibVtlaIZTMU6tVMXz3hBK33/+Q
      73/yPYLfAdTrdXr1yn4PsL7yFMVIsjQ/85orD8hPpSkUtg8NSZ8++ponqxtDq0HPXQCOYxNP
      JKhVyq9cDzCMUmGN7eLwrmzsz7fbfPvNcx4+fHQCKweUizuEQiHMEVmG1yLJLC4sUG826QQs
      heh3mlRrNRw5jM9R5T6xZAan18YIa7R7fodzLl89+Iytwg4BK5EAyOVyoBnMT+/2AFP5aSK6
      Rs3H0LBa36ZaqFBr7sZzK6urfPjJH/G9d28N7QHOfQikyBLlcpn89IzvLVSmpucod3aYm8kH
      /HSJWCLPVKaGYgQvG36ZWDxOp9r0UYx3HE3TwbFQtfErWl9GDetEdYV+OInma0h4gB5LkRq4
      tNqNAAG9hK5r9PsB46CXsM0+luOih2Tys4u+YgjXdcikZ6k2dsjsxTGl7c3d5EYozFQmydFh
      x7kLoNfrsTA/D3LId8Y6FI4gOx1KtRZLRrCXBQbU6ia3ZsevLxlFu17GkyT6poUd4OAKAKtb
      5+naNrpuYAQUket6RDNzRBk54TkW7XaDZrOFoyXI+KxLsh2XQbOBCwRJ5ha3C2iaip5IE94T
      sZ+X/wWOF+L61YW9Nb8KH3z4Mao6ekh37kOgVDZPZf0hv/ni4f6Ex7hYvRaynqZePr7MbnxC
      GJo79gzlqxj0u1RaAzIxjW7AuQDb7IJm0Ov3UQPOA7i2xcrz59R2Nih3gvlhmV16pk00Hifm
      c2GO54Guh1HC4cAvVK/d5PHaDmlDwQxwcgyALCt0mjWq1Qr9vXqiV7388IZqga7cuke03j2Y
      8BgTLZLE6T0nO3PtBJ8+4Mm3q2RvSsDSCexAZnoRpV7DJkEmFSyoNtJz3E8DBL+ncCTGzFSa
      Tq/rv75qDzUcQcXBczwqjTbZxPgZMavfR1E1dG9YmDkeSzducWX/4mA3US9tk8nlWNksjh3I
      v5FSiLVHX1Gotn0HwWanhqSlKaw/DzzkAJ0f/PHf4eqC/9r/owz6HWqNJq1GPUDgeLpoehjV
      SJDQg88mT89O0zM9Zqb8xUeuO+DJk1XazVbgNGi7WefBgwd8+9XX9AJOKprd3ZnwhXyCdme8
      idE30gPML10n1PZ8L4hR9RhhuYySTAUsP3bZ2Spg2g6qHrx+/wWaESOb6PHt46dEUjnikZPb
      DEqxUEBNZE8UA2xvFQhrCtvlBonF8Vdr6NEEC/kkNTPY+B8glkiTSZTp9oMfgDe9dI38/pzZ
      eO/WufcAjWqJlUKFdMJ/3Y096LFWqILrBKybkcjNzGB1WzTbwVKORylXaiiSFWAZ4emSTiVZ
      e/qYphn8BZqZnaXbd3wtYtnFo9tu0213T5QGtWyLeDKJGnh3wd2ZZ8fqU9gujTUcO/ceQFYU
      XNclFPKfBVJCYRbm8mRzwdOgsjzg8TfPSSwtAuNNsb8KIxrj/cUZyp03uyWk5UI2FcW2g3cB
      24UCEd1/D9CsVQnF0+QTocA9AOwe5zoYBJ8O77bqe4vfJabn5sd6v869B4glUnz/k0+YyU/5
      Lrt1nQHNVtv3iqXDaNx87xbLC/MnsHGAoUo8WdkkrAVYhniKLCxf596H32c+HSw9bHZaZHN5
      6i2TbNJf75xIZ1HwsM3+iXqAfrvKg999SddnkeQLIvEUeshi5ekK3TE3Bzh3AbQaNX79m9/w
      +eefY/psrRQtgio5NFvjl9gex2K74L/ufxTtToeQDO0xq1HPio2n3/Dg979hveq/ohWg06xQ
      69osTGco1/0/32jUQI3ETjSkmF++xXv3bqIHOAv5BbarEI9quGOmUs99CJRIZVmYadKzXEI+
      c3a22aHRMpHDJxm/ayws5gKd2j6MaDRK26yjn2BXiNMgpIbpDxrEgyyIB9IzS5ib63QtmRsL
      frcrgHarw8DysCFwPVAikcKIpdBOsMO4PbDIL1whER3PizezJrheJ52b9Z2zlhWV5evXubLw
      +srA0ViUy20ktc/CXNBY4oBUbpZULMy3O23yKf+B/WnRabdJZvOEAzaekiQxuxA8JkqmEvQd
      5UQxwNcPfkmjrXH/Dz8mpQcTsuftxhHjZgnfyDxAxNAZWJbPSRObbs/BMdvsjNjkaBx6XYtM
      OsrU9ElEtIvV77KxscFGpcvidPrE9k5CJj+N22/7X2Z6SpRKZcKvmXV9HensNInpDImAFa0A
      mqphDXpjL7b6/4aTgnSQV1yLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Introduction' width='192'>
      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
    </thumbnail>
    <thumbnail height='44' name='ML - Data Info' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='24' name='ML - Data Info 2020' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACfUlEQVRYhe1YTUiTcRx+lF3KDh2CHToUHSKCiHpfRGmZHjzGok3JFYvykHgabR2dYJAh
      RAcVtoPwGgaLlD6mF29bKMyvmtmhqJwtdTM/moyZbvB0eLc5yzkT13vY+8D/8H+e/++D5/3/
      3hfeIpJEAaNY6QaUhmqA0g0oDdUApRtQGqoBSjegNFQDlG5AaagGKN2A0lAN+C9VVifhbKhC
      uSji4hUb+r4msh7dWJiC22FD90wG6W2GKIp/rZtPZ2V9phvX/9CavbK04H2MRqNcWyyvgtHW
      hy3lmXdE6bEbee/1N64zzqWJDpprHPy47VkPH1xroms0TCmQK6eFrlByO9TC2z3ftzm3xncv
      XRwNRrhOkusRvu8ys8axWT3/BkQHeLfexVCaiNPXamLHh53DdjQg5KKl1cd4crvY20C7Z5f9
      fOlifdtYepv/EVj8AZw7A22a0OB86XHMhbKPwc5IYPzJIE5dLYUmyYRDB3HiWK6wGOan3Lj/
      cBKXa4U0nX8Dfq2h+FDJFkqj0SAQnN1bvtVBPFupxY2Tm9TP5WG0G+TZL68yotExgtWMEG+z
      CLGsAnVtn3DB3gZ9plm7vDh7x36OQNRDuyUzVxYEJJpbhrKIHtrNPUy9MfJ/A0ouQX+0F4/c
      QWwggeW3TnROVKD69L+nCve/wIE6Q8Y4AcAw2i3dGJuPIQEgEZuGu/M5tKVnAfjxyvkGn1dk
      DYkYpt39GNceweFUeC4z9wURPx13KlkmCNTpmzgwF09LAclEU+pxBySaBIFCxkprcR9bzdt9
      PeJcmpBoNcj5BZ2eVsnPCEkyzBGpibeqdXK+skoarBL9kc3oIlL9KVrQKHgDfgN87idU+Vy2
      DwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='ML - Data Jobs 2020' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='ML - Data Jobs Throughout the years' width='192'>
      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
    </thumbnail>
    <thumbnail height='44' name='ML - Restaurant Info' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAsCAYAAAAzWrf+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAKI0lEQVR4nO2cfVCU1R7HP9m2FZrT1TuakaUNqTl6U/fJWRxRzHGtlNQrXXJRmNC5kIao
      wb11G5eREszxraEXuJMGjU54U/ONclBsdk0qQTNLDfUi+MKLAV2IRZfdmd/9Y3cFZEUx3prn
      +czsP+ftd873PL89v7N7znOXiAgaGiqlR1d3QEOjK9EcQEPVaA6goWo0B9BQNZoDaKgazQE0
      VI3mABqqRnMADVWjOYCGqtEcQEPVaA6goWo0B9BQNZoDaKgaXUcbKMkMZ3ZqYcuMaesoWDGh
      o83fObUnyExKIuNwMb/xAINGv8DC5bE8M6DDJfud2EhUlpHdIn0osdu3EPlYF3TpTugs/aXT
      sIrFYJaM4t/bTrFkmA1isbZMM//+xj3Uyb4Eo8xalSdVThFx1MjZnGRZntVe7XcOxRlmMTQX
      qu1YLWIwWOTWrbTnHHSe/t396+w2eYzILQVEtlt7lzh/1snI6YH00QH0JmDKGyS1W/t/ICas
      oKDgdgq25xx0nv5dvgeoPbKeeZMCURSFoJnxbC9yeTNYP28SgYqCEjiJ0BUHqMJGojKb1ELI
      XqagKArhmSVACZnhCok2d9WSzHCUuHfJjA9lUqCCEjSH1KN2r0VOZMYzM0hBUYIwRS1kfmwm
      Jc169QjD/9KbnNS32H++HteNnXaVcTBlnrttJYiZKw5QBbiKthMf6u5z4KR5pBws89T19q+W
      I+vnEKQkYrtxjEEzid9e1NJWO1OSGY6SaKP2yHrmBHk0qzrAipdMBCkeTRZt5JRXLlsiSrhX
      HxuJShgrN6UQZQpCUQKZvmSXJ6/1Oeiu+ndtCFS+TWJeXCV5VU4RcUpVrkVMs9KkUEQK02bJ
      9LXHxCHiXgKPnZRKEWktBPKmFWeYxbDg3/JjqV2c4pBja6dfDwXq9iWI0ZQguy84RETEkfNP
      MZgzpMXi6iyV3HWvyIzxBjEGz5XlWT9IjTtDClabxBixUU7ZnSJOu5QWlUqds0BWmybJsh0X
      xCEijsKNEmGcJWmFjf0zR8RJXNYpsTtFRMplW8yLsiqvSpwi4qzKFYvJW7598BUCFWeYxWCO
      kLi4LHf/RUQqT8qxszVurZ1VsmOxQSI2X3LnWS1N9LGKxTBd3vzyrNQ4RJxVO2Tx9TltfQ66
      q/5dGgLZj+aRX2Ql3/RZk9RplAOGQQFUvr2CJdXPEvzceIKfHkHftjT+8FBGDPADoE/f3lDj
      Tj6ad5BHw/5DyEA9APp77/VdXzeAZ5Z+wDOx9ZQd/4zkN6OJdWWRGW7nW5ueue9E8aQfgI4B
      g/3g1A5s+tm8M2sgeoAhUcw3fUD6NyVED/G0OXExa8Ied//yYD9KXn4R1nwTzUZfDgyhg5nI
      4jVhPO6d/XtcnEiLYtnhYn5zupOGjrnZWtSbJ54MoLce6NOXB1sz02QOvHQ3/bt+DzAqgeyP
      wuh/Y/rUZHKHHCfXdghrWiypKS+wYedSDO3QY93dd7ehsB8DlEjizTnMzvmay+Gj79huQMDj
      Nwg+ioTsjwhrMfgOJiCg8eEHjqYvIfPeBLZan6OfHmyJCukdaL476d+le4CehrGMOr6JtXsu
      0gDQUMu5Q/mUAIW2Lym6bzjPRS5l1buLGVN+nJ8rAHrRqzec+/kMDYDL1baoeejwURTm7OT7
      ahe46jlfUuqjVB6pS9I5dK7WbaP+NLkHi+g7agT+DME4oYHN72zidL27jbLzZdiHGJnQsJ2N
      n7vH0nBmExtzHmVC4E1+d+xpYOyo42xau4eL7sFTe+4Q+SW+i3ckjmtX6dn3IR7Uu6g/f4hv
      znWcre6mf9dugvvP5q3VwVSmmhmnKCiTQ0neXw3AfVfzWRc5FaOiYJzxIb+FLyLEH6Avzy6I
      pMenkYxTAoneXtFGk//ijQFfsdhkJHBKNFk+JzsA4+jLfLxwGuMUBePUOL4etpKM2KcAHYal
      Gawc9hULJxtRjFN55ZOTXNMZWPrhIu7aEsFERWFi9FcMW/k+828azvRn9lurCa5MxTxOQVEm
      E5q8n+o2jaZ9GBv+Kv57FjIucArRH5dy3587zlZ30/8uEZW9FuXKRc7d05dBf/JD13CFQ+tj
      SJTXyXl9bDeIB1VAN9NffXP+6wGSYzdxovoqcD+PBC9gg0V7+DuNbqa/+lYADY0mdPkfYRoa
      XYnmABqq5pahV8HtHQTR0PhDou0BNFSNFgJpqBrNATRUjeYAGqpGvQ5Qe4L0GPfZ8Wb3EFrg
      ovr7zCbnzEOxfFHWeEbdloiiKE0+4WR6zvO4qvNYH+U5Zx80k/jME9S6K5HYrI7nE7mFyx09
      7u7CbesPDVd+Yk9aPFGm+de1bdLQDfcLPsZ7Affm+nvqpcd05n2A7kSdWC2hkrD7gjjEKVXH
      3pOIF933EFpwabPEvZomtiK7OEXEUZEvG8wxsq3Smx0lSYd9VayUbTFm2ZBfIQ4RcdqLZHfC
      NEnYV+e7R1aLLMkqb5fRdX/aoL9YJfml5ZKVXyGFGZYWV2rLt8XItITdUmR3iohDas5ekAoR
      uZX+dVaLhCbsFnWuAHYruy6H8lrIQPTo6DM6mkVjbOw/5aNs/zDWpEYTNNgPHaDvpxAyuQ91
      de7s8lI9j/r7MlLIqXoTM5V+6AGd32BCFrxAj/JKH2Ur2Pv5/cyZ3dnnoruItujPBN74NIkw
      pR8tbw6cYefWB4hNDGGwnw7Q0ztgIP2A1vW3Y911mdDXQlQaAlX+AqNHNrmDoGPM2EGUlvtY
      hnW6Zn+WuMq+4KMTwwl+DMBORXk/Bvs8cTuW50fsY9P+K54jvefZk3GKkcEtC7uOfkLOsL8y
      Vi0Hktqif2tU/cjxJ55lck9fma3pX8kvjGZkf7XuAa5dpUev5qrpdDqKL7YWgTdwcY+Fv38I
      sWvCcT/G/+PXymyWeWL4IFMUlmzvvV4dhoR0pn77svtI7/P/4Mz0JMJbPP+15Gz9lb/N7fBr
      YN2HO9LfB3V16OuOkOSN8wMnMS/lIGUuaF3/a1zt0YueoNI9QF22LJufJY0Rt1O+SzHLeyd9
      FXZKwbo42VjouL22rRb3fdpLmyXixleSFGeIuVlanVgtS0Q1ob+XNunfSHGLPUCBrF7StB1p
      1LhV/eske9l8ySoXle4Bek5khv82z000F9Xfp/P+sQlMGe6jbNUushxmIoboW+aVbMWSsp9z
      tQ0ANFwp4P2Npxn3tD/0H8aIM5+x9adaz223KxTsPYjz4Yca61fs5fP756CW0P86bdG/VZ5i
      WkAOb289Tb0Lt8Y7D+I/znAL/XsycYY/29buUekKICJS84OkRQeL0WCQ8TOWS3ap83pWcYa5
      8QVPh5PEaDCI4YaP+8vFIRdykuXlKePFYHC/vSA5t1S8LTn/u1eWz3XbMIyfIi8n50qjGad8
      lxLRrm+B+ENxu/oXZ4jZh/7X852lkps8V4KNHo3Xfed5e8St9K+RH9KiRTsLpKFq1BkCaWh4
      0BxAQ9X8Hw1ZU/qVn98dAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ML - Restaurant Jobs 2020' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dyW9kSX7fPxFvz31hcq2tq7p6menumbZmRpAEL4IMA5YN+OCLL776ZN/9
      lxg+GT4ZNmDYJwMGDMuQxrKgkUZqaXqrrqqujVuRydwz3/7ChyRraSZZzCySRTLjcykys+Jt
      jO+L5bcJpZRCo5lDhBBCvuuL0GjeJebBD/1+n7cdDHzfx/O8t74ojeZNnFZfeyGAYrF4zH/L
      ePzwIYZXxO/uUVlYZGdri/rqNTyRYXglijkbgFKp9NYXpdGchFKphFIJD+7dp1Cpsre7y9LK
      MtvbOzSWVnFETK7awDHEkcc44RRIUKlWMEVKqbZM89FD1j66y+6zp9x7uE7es0/pljSaaTGo
      VivEwyHX79zg2cN1rt9cY/PpE549bx/b+eGkAlApT56so4RFu7lB9foNnn3zHdWVVe7eWqU3
      DE7jTjSa6ckCnjzdwinkefrgCSs3lnn66BmN1TWuNUr4cXZsc3Gau0C9Xk9PgTTnwmn0Nb0L
      pJl7tAA0c40WgGauMd/8XzRvQhvTX0eI43deLhJaAKdAHMckSfKuL+NC4LrupRKAngJp5hot
      AM1cc+GnQEop/DAmjGIMQ5L3HAypdas5HS50T0rTjJ1WnyRNyXsOpmGw1xkw9MN3fWmaK8KZ
      jwDjN3jEKIhQChzbpJBzkW9YKCml2OsOqFcKmMZYp7YFnmOx1x1gmQa2deEHsBORxBHDkY+U
      Brl8HkOOn00cBfhBhON6OLZ1audLk4hRkFAs5E7tmJeVMx0Bxp14SJJmVIt56uU8pmGw2+6T
      psf7aMRJimUaLzr/AUIIKsX8lfI/ioIRqZKYUrHXagOgspi9dg/XdUiSBKUUgT9iOPKJ45gw
      CFBKEYUhWaYIQ59+f0CaZiRxRBTH+EFAlqYMBgPiJAWlCAOf4XBIGMXAWHz9fp9+v48fzN/I
      esJXqOLJ/a+prN3l2YOvKBRLtDs9ygtL5IQiV2tQyh32CO0NAzzHIu85Lz7LuTa2adDqDVmo
      FDlqIIji5Mg3vCEFWXa8gC4b0jAwDIBxxxTCQKiU4TCgWCoS+UP6fkzOFnSjBGKfqt1gOOiR
      L9dIkwxDKpqtDkVH0PNTqtUyrb0muWKJVqtFtZijOwzJuwak++eVBrZtv/j5sqFUyrff3OO9
      66t89/gJxUKJTrdHubZI3kioLF871iP0hAIQNOpVgiwjTRWDZpubn/2IZ19/x06k+MXaKmma
      kmXZa/vhfhCyUClM3CNXShHHMVJOvjgpIIhiHOvwHyVTClAXZu9dKfXWxrDRoEcvSVhdXd0/
      lmBxaZkoDNjd3SXvmuQLJWxi/FF6cGIUoLKMwaCPaVlkaYbCJFcsYlsGURzDcIhSijAKyeWL
      OEaCH0UopUiTiH5/CIDtepjm24ngoB+cNVmWkaYpUkqqtQqZGv/e7wy59f5NHn33mL7rsrh2
      /FT7hALI2N5pIQqSnOdRXmjw/P73XLt9G0/CYBRSyrtIKTHNl4f84e+vndg0EFIe+cANw6A/
      ipDSOCSSVm9IqZA78tjnTZZlb238yRfLuEbGXqtFY6GOyBKa7S5SCCzbwfMcmu0WtinA9LAM
      SbvTIQoi8kXIMoUQEkSGAAQCIQT5nEecgmXZeJ7L7t4eoWWAtBFCYDkeC87pRfEZhoE8h106
      KSWGYaBUwt7OLlljEc/xqDcabD3b5uad27gyIYgzPOvo6zlTd+idVo9GtTixc+y2+9TLhSNH
      AIA4SWh1h5QKHo5lkmaK3tDHNAxK+YtjcYyi6K1Go4M/gTj4WYw778HIIoQYf4ciDX06QUa9
      XHjx3VH88BgIASrbP9PZuCy4rnsuAjgtd+gzfYUWcg7dgU+54L32sP0wwjTksZ0fwDJNGtUS
      /VHAcBQipaSYc7FM48J0/tPg1Xv54c+v/Y5AWg5FqQ59d9yxX/t/2gP+Nc5UAJ5jkyQBzc6A
      vOcghdjfDlXUyvkTHUNKQbmgA+0PkIaJc/nWqheWMxWAEIJSwSNJM/wgIlaKQs65cm/w00Yp
      RZZlSClfeU6KLBtPZw4+z7Lstd9Vlr0yfcrIsvELRIjxGgFACIlAkakMePMofNU5l1WkaUiK
      efc8TnX5UYpue49UCdIMGgs1hBCkcUSr00cKhbQ8ip5Jq9PDNE0KpTJpOGKv1aa+fA1HpjSb
      exiGRNoeJc9it9VBCiiUqog0oD+KUGlKrdHAMuZ3WjS/d35BUSojTBT1eh2TlDgdv7mlabPQ
      qFPIeyRJSr/XwzBNhJAYUmK7uRf2liQKMN08tXqd0B8xHAwoVeos1Cr0+wMGQ596vU6p4DIc
      XR2D4ixoAVxghIBXt+h67Rb9UUy9ViJTinyhhOdIOr0BhvFyYWA5Hioa0Wq1SZIUpbL9xbAE
      1PigYryVOO/BPBdjI13zEiGRKsX3fcJEURaKwXCELTP8WFEt50iTlJznMhgOcWSKabjEcUSa
      ZsRRhONaeIUiKo1BmniuQbffIzYUjushU5/BYETsjyhU6u/6jt8pWgAXDCEE9YUGo9GI+sIC
      QgqklEjTJO8poijCMC28fAkR+KTKpuC5BP4IJ1eALCbDGu/3C5NaZbyDVsInUYKi5wIu/miE
      U67i2PPdBa50XiClFN2BTxgnB6YfygX3VD0r4e0NYVcJbQi7ICil2G33KebdF4a4LFO0ekPS
      TJFzdTpHzRVeBPeHAYWci+fYL/bSpRTUy3n6w2DuF3+aMVdWAEEU4zmHpzpCCFzbJIz1lEVz
      hQVwHEIKVKZHAM0UATE7m+uUF6/R3HxMvtqgublBY+0atlBkhk3+gs2pDUOSpBnWD9ytx37x
      CYWyc0TL6bEsC8s63YW15mQolbGxscnq6gpPH31PfWmF7a1tFpdXsEmQudJpBMSAYyr6oxHr
      mzushjHltWUeP3hIFMPnv/XpxICYd0nRc9jr9KmV86/FH/thvO8bk125qLJ54mVAjAAyhq0d
      dns+qG2qCxUe3n+A5Xp88qPyscc58QjwfGsbVbYo5F1Gccju/e8pVOosCMVgFFIpHA6IedfU
      KwXavdHYJ0YI4iTFtkzq5YJ2xrvkvBoQs72+AWvXcEwYBSGtJ+sUKgsUzPjdBsRcBJSCNEvJ
      MoVpHI4u01xOtB3ghAgBpmGA9qHXTGAud4E0mgO0ADRzzbkJIEtjov4uWRJpK6zmwnBuawAh
      DQQQtp6CNLByVQy3iLiEyZg0V4fzE4CQWMUGZmEBlQTEwzZRfwfD8jDzNaSd01uTmnPn3HeB
      hBAIy8OpeCiVkYZD4kGTLAkxvTJmroowLC0GzbnwTrdBhZCYbhHTLaKylGTUGU+REJj5KqZX
      QehaAJoz5MLYAYQ0sAp1zHwNlUYkwzb+zn2k5WHla0gnr0cFzalzYQRwgBACYTrY5WWs0hJZ
      NCQetsk6G5heaTxFMh0tBs2pcOEE8CpCCAyngOEUxlMkv0fY2QSlMHMVTK883kXSYtDMyIUW
      wKsIaWDlq5i5CiqNSUZtguYjhGlj5qsYTmE/7YdGc3IujQAOGE+RbOzSEqq4SBaNSEZtou42
      hlPAytf0FElzYk7sDt1t75ErLZCFPWLh0t7dorG0jAEkyInhh2fNeIqUx3DyqCwjDXqEnS3I
      kvEUKVcFqfOQXmWUUrRaLWq1OoNeB9vL8Xx7h8ZiA4uU1PJOJyAmGnZQbo29zcckfYPC9Qbf
      fnufLFV88tmPL0ZAjF3AsguoLBlvqe48wLQczFwN7JNlo9ZcDl4GxEC326FSKfHgwX1KhQq5
      Sp5vvrmP7dr8+OMPjj3OiUeAQb9PnGwy7I9IA4vw+Q6W6+EJRRDFFD37RZDCO8cwMMtLUF4i
      iwOSYYu0t43h5DFzNaSt061fdqSU+/mHMvqdNutSEoYhAzNgtBvi5PLkzYQoyXDMtw6IUYRB
      gJAmlmWilCKJY0zLYhyQBoaUFzIg5gClMtJgQDJskaXxvtW5gjQsvYt0CTnoa0opgiDAtCxM
      KVFAHCdYlrlfVUccGQQlhBBXPiLshyilIEtJ/A7JqANCYuWrGG5JO+ZdInRE2IwIIcAwsQoL
      mPk6Kgn3HfN2tWPeHDJ3AniVsWOei1NZQaml1x3z3DJmXjvmXXXmWgCvcsgxz+8Stp4B7Dvm
      lUFILYYrhhbABMZW5xpWvkaWRCTDFv7OA6Tl7jvm6bQqV4WJAhhnT4txnYuV7e1dIE37Fce8
      EfGwRdbZGo8W+SrSdPQu0iVm4gZpc6/Nv/+P/wU/mO/6Ua9yYHV2a9fxFu8gbJews4m/+5B4
      0ESlFyMjnmY6Do0Aj59t8u/+w3/m4w9u0+n28Vxd3fGHiP2YZtM7cMzrvHTMy+075ulAnkvB
      xCnQP/oHv8PHH9xhZalx3tdzqXjpmLeIKjbIIp9k1CLqjR3zzFwVabl6vXCBmTtD2Hkwdszr
      k4xaqDTByO3HOktTi+GUOFNDWG9nC1lbpmDqP9YsCCkxc2XMXBmVJsSjFmHzMUhzbHX2Sjp2
      4YIw8a8gDPiz//NH7HaG5309Vw5hmNjFRdzF93EqK6TRCP/5fcL2Omk40knC3jETR4BRq4kf
      DVjf6NKoaDfi0+Cl1Xn1hWNePNhFJRFmvoaZq2hfJCBOUjr9ly8GIQSVYu5QoZPTYuIIUF5c
      YvPJFjduvVwEB/6INFP0u22iOKXb6ZCkCWmaECfpmVzcVUUIiemVcOs3cRfeQ2Up/u73BHtP
      SYM+Ss1n4Y44SWn3htTKeRZrJRZrJWrlPK3e8Mg+ppRiNBoLptNukaQpnW6XJEnIkpjkDaWw
      Di2CsyzhN7/8I1qmRanyIb/141VAsfH9N+SWPyRob9BttRD5AlGQYaG48f4dXFPS7/cpFoun
      9kDmC0UajkhGLbI4xPKK44g2Y36MkbvtAQuVw+lvMqVodYcsVAovPjvoa0Io7t27z533bvF8
      e51OL8T2bIIQcrbg1p07mMe4Qx+eAimF4Xk8/PIBf/CHn7/4OOd5RHHEYBiwvLhAO1aEowFx
      liFea67ntLMi7Ry2nQMUWdAn7GySpQlmbt8X6RJNkRTjviCn2vUa950f9iGx/9nkviXwXJso
      ChnFBo1qAT9TjPyAOBW86eyHBCANi1ohz62PP6GcOygkpwgzCxmP8FwH5VUoiBFrHy5jCEgy
      hZRjR7ELERF2BTDyVax8lSwJSUZdwtZjpGFj5mvjpMJwIV0wlNovRp5mSCHIlMK2zBfFyo9r
      d1z/EUK86GOv/q5UiiEM/CjBtSW5agMxGrG6vIYpM+JMYRxTFWjiIth0HFTcIX1RRE6yvHZt
      /+f6+J/Sy+FId/mzQ5oOdmkRq9ggi32SYYuou4XhFrHyVaTpXhghKKXYbfepFHPY1suuNQoi
      Wr0h9XLhmNbjclYHQvjhcY+aVwhhcO3mzfEv9XHfLOZzL75/Uy3QiQLI15cobW3T7sc0Km84
      guZMUErhhzFhFGNISd5zMOwc0vIARer3iTrbqCzByFVehne+Q0ZBhOfar3V+AM+xCMKYKE4O
      fXeAEIJy0WOvM6Beeeltq5Si2RlQecMIMitHukMLy8HRhrB3QppmNDsDPNei4DkkWUarN8Rz
      bAo5BxCYuTKGV3qZAaP5GGGY4ymSU8SPUr55skt/FHFjucx7y5Uzt0L7YUy1mDv0uRCCvGcz
      CqIjBQDg2hYo2Gn3MfZ9qdIso5z3cOyzEfehq0njEX/5F7/mm+/u8furPzqTk2qORinFXnf8
      FjSNcSewGHeOVneIbRkvOpEQAmFY2MUGqrAwzoAxatHZWef+tk+l4LHKU+4//4j/95tn/PO/
      //E7yd8E4+XtSfTnOhaObZLtb19KKc5UuIfsAFka8c3X91i5eZdKfn624C4KSZJiGsaLzn+A
      EIJKKUdv4E9sJ4TAsD06qsyfPpX84qcf8V7zf1D4k3/L717P+MNf3OK///LbE+3SKaXoDwOa
      7T57nQF+eLKyVjnXZhiEE4839ENy7ptm5K/ciyExjLOPwDs0AlhuhX/1b/41Qgj0jub5E+0X
      857Ewa7Kcfzyb57yj3/7fQzHRnz+LzFWfgK5Bbz+Dp81IoJ+C7dQGfsiTehcaZrR7A4oeA7V
      ch6lYDAKGAURtdLxKeo9x6LZCQnMGMc29/vQuPNLIc7Mmvs2THjSGX/03/4rca3Ie7d+zke3
      F87/quYYyzQY+tHE75TijW/EME5fTHNkaQVZWgHA9Mo4/habz5usjJpIOzcO73wlA8bBFma9
      lMd8pbNWijkGo4DBKKSYPzo+RAjBQqVApz+iO/T38/KMhVGZsDa4CEwQgOTTzz/jq+096jWd
      Qe28sUyDKE7IMnUooVN3MKKYOz5AyZCCJM2wJxjNnuz6/OjWKl69QBYOxhkw4mCcJCxfQ4nx
      W9uc8KbOew677f6xAoCxCKqly+M/NtknV8XEOsLvnSCEoFbOs9vu4QcRaZYRJyl73QFSShz7
      +DwGP/twlV/+7ZNDn0dJyvpuj+XaeIvRcIs4tRt4i+8jTJuw9Yxg9yFONkBlh/1urmocw0QB
      eMUSRUfQ7x1e0GjOHss0aFRLY+ew7pD+MKCYcynl3xxddmetihCC//nnD+gMAsIo4dFWh//0
      v37DP/mdu6+NKkKIFxkw3MZt3PoNojDYd8x7QvKKY95VdXGZnBUizfjmyy9ZuvHJeV+PZh8p
      BaXC9FNQIQS///ktnu30+JO/eUIQJSxV8/yLP/gE95jRQwiBYTmQW0C6NhbxS6uzUyQQHoXc
      1ZsST44H6LZZvPUBBU9HLV1GhBDcWCpzY6k8ddtqKU+rM8AwDHKFFUSa0OvukZN7iFARJ5X9
      6p1XozTVkXmBvHwBSzu2zR1SCOqVAlGc4IcRUgiqjWVMwxgnCRt18JuPkIa175h3uUtTTRSA
      XazgdFtTurJqrgpCCBzbOuR+IPczYBxyzHMKYzHYLrzRAfliMVEAhUqVJ//7j4mVwe//7t9B
      oHj64Fuq1+6y/uBrStUazd0mlcUV8lJhl2qUctpqPC+Mrc45DDuHUoo06BH3tgnTg9JU5+eY
      p1TKd/fuc/vWNb6595B6Y4Hm7h7VxgqejCk1VqYvkRQMh6y+d4dPP/5w/xPBQq3MKAop1Zbo
      bT5l+YP3ef7oGTsxfP754sUokaR5N1h5zEoelSVkfo9w7wnCdMD0kLY3Th95yrwskSQpV0qM
      +iNWbqyy8WCDtdurrD/dxHRcFpZXjz3OIQEolREGI/zRgGGYMY4Kzni+18csWMjE5+anP2Fn
      c507H9zFEoIwisl7DlJKTFPn251fTLBdYPGVijxNkiR6UeRcmhanMU06KMelVEK31UEureB3
      Onz82Udsbj3ngw8/wJYZQZzhWVOUSEoTn7/61a95vLHN3/uHf8hS9eQmbJ0YSzMJlSYkfne/
      Io/YD/F8u4o8Z5YYyzA9VksugbHE/QdbLP78ziVb1mguGsIwsQr1sbtFEpKM2vi7u0jLG0e1
      2cc72Z0lE8eGyuo1ers9igXd9TWnhxACabnY5RW8xbtYuSrxoIX//D5Rd5ssCc/d4jxxwt7d
      XmeYSRqNhn77a86EsT9SAcMtvFKRZx1Q4ynSOSUKmyiAJE4oVas4ljaEac6eA38kM1fdTzff
      xt95iFNdw3DO1rP0kADioI+5cI27hZBhZ0S9fDH9uDVXj5fp5pewiovncs7DMcHJiD/75f8l
      VvDhJ7/HjXO5DI3mdc5rUTyxPkCWpggpyDIwjJP7eehtUM15cYb1AfZDIutlbt/+GR/e0iGR
      mqvLhNe75NPPf4JjF6lVrp7/t0bzKhPnN1Km6IznmnlgogAsN4dnZXQ7ukzq25BlGf1RQLs3
      ZOifv5FH82YmCiBLFdub27gFXSJ1VvwwYrczwJCCvOeQKcVOq6+LiVwwJhvCEh+nUMXRjp0z
      kaQp/WHAYrX4YjvPtkxyrk2zM3jtc827ZWIXNwyHO+/fpZh73Y87S0K+/PIrisUind6AYq1B
      XqpxNmkdEPOC/jCgXMwd6uSGlHiOhR/G5Fz9vE4DpVK+/OILcqUy/X6fUn0BJ4N8fYHKCZIK
      TBSAMCRf/PkvyeX/Ke+tvMyPrlSGUjBsd7nx449Yv/eQvUjxs7VrOiDmFaI4oeDZE5+FKSVB
      GGGblzeO9iJwEBAjREamBH63x9rdO+w+fcpWO+S3r19780E4QgBOvsT7Nxbo9iJYefm5NCwK
      +RzlhUWaj55y/fZtPAlDP6SUd3VAzD6WaYKQEzOsBVGKY1v6Ob0lLwNiBMVijkK1QWdjk5Xr
      N7l1UzIc+pRPkI7xkCU4CfpsNn3W6gbPWga31k5eIUNbgsfESUp3MGKh8nrBQLW/EG7Uijrh
      wFtyZpZgYZg8+OYLHknFnZ/+3bc6wbxiGhLXtmi2+5QKHqYhiZKU3sCnUvR0579ATPQFerVI
      8TToEeAlSimSNGMwCkjSDMs0KObdF5VPNG/HGfoCXd1EqOeJ2M+Hf5kyJc8j+nWkmWu0ADRz
      jRaAZq7RAtDMNVoAmrlGmyOPIYwSekMfpRQKsAxjvI+vtzKvDFoAR+CHEUM/pF7OI6VEKUWc
      pOy2BzSqBS2CK4L+K05AKUVvEFAvv+zoQghsy6RSzNE9oli15vKhBTCBJM2wLGOiQdCxTR3U
      coXQApiAUgqhk0LOBVOtAVSWcv/etywsLfLs2Qa1xVVyUmEXqxSvUECMZRrESTIWwg9GgSTN
      DhWw1rw7lFI8uPc11cYSWxsbVBeXcQGzUJo9IOYo0jig1x+RBRvc+PGHPPvqHhsR/OIXV69C
      jG0ZdPrD1yqzK6XY6w6pFHNX5j4vKy8DYhI67T5plLFy5zY7jx/xuB3xu7/3sxMdZyoBGJZL
      rVrELZTY+PY+i9dvkJPQH4aUC1crIKZcMBiMQlq9EaZhjGthZRm1cgHbuhr3eJl5GRAjWWhU
      sXNFdh49prayxtqKoNsfUS3NEBDzNlxFd+gDt2YhBIaUV6E07pXgTN2hNS85cGvWXE30LpBm
      rtEC0Mw1WgCauUYLQDPXaAFo5hotAM1cowWgmWu0ADRzjRaAZq7RAtDMNVoAmrlGC0Az10zt
      DNfaXScVeXa21mmsXccVGcIpXKmAGM3lotvaxI9d2s1N6itruICyXcqnHRCTpRHtXpeg2WL1
      87s8++oefgw///lPrlxAjOZicxAQI4Wi1W0zaiqWfnSTncePaLVjfvf3futEx5kuJDJNSZIM
      WXR5+vU9KksrrEpFbxhSuWIBMZqLzYuAmCQkSQDPYuvh95QbizRqgk5/RE0HxGiuKqcVEKMX
      wZq5RgtAM9doAWjmGi0AzVyjBaCZa7QANHONFoBmrtEC0Mw1WgCauUYLQDPXaAFo5hotAM1c
      owWgmWumE4BStPd2CaKEvWaTOIlJk5go1jEAmneEUnRaTfwwprXXJE4SkiQhiuMTNZ8uHkBl
      xHHIzre/waxU2XjexFCK2x98QJZlKKXIsmym+9BopuGgrwkhiKOQ7c2vMQsltnebpEHK7Y8/
      5CQxilONAEpl7LW6NBoLZNm4fpbY/1yjeTcomnttFhsNlFIgAMGJX8RTjQBCSOq1GmahwoLj
      U7hWwhCQZOMIHSGELiCtORcO+ppSGfV6HSNXomG75IslJIL0hALQEWGaS4mOCNNoTgEtAM1c
      owWgmWu0ADRzjRaAZq7RAtDMNVoAmrlGC0Az12gBaOYaLQDNXDObAFTK9w8e0B+NCEZDRkF0
      ypel0ZwQpdhaf0x3MGA0DOj1B1M1n0kAo91t8o0633/3gC+/fohtW7McRqN5a5RSRJmgvfuM
      v/qLv0aY0xVqmUkAVs5j/ftHOMUSi7Uig1E4y2E0mrdHCPrtJqm0WFlZptfrT9dce4NqLiOn
      5Q36QgD9fp+31UKWZcfGAyg1DqI57bZv2/7gvo/7/qzO/ab2b2r7qNXjLzdbR37vmJIwmewb
      bxmCf/bRjQt532/ibdoeUC6XxYuAmGKx+FYHe9NFhcEIablYxuTvD8Lbjnpgw+GQXC7PUc/z
      bR7IcQJQWUa2/71hGNOfO0sYBgn5nHvk+Y9rPxz0EYZFzpvcftj26agjnmkckgYSy5m8RrOV
      pFgsHnnuOI4RgGGaE5/Nm+47TAWONfmZval9GIY4jjNT22k41W3Q4y5IoPjyi7/m4dONI9se
      97YYdZv89Rdf0OqNpj53d3eDr797xNCfvFY5TnjBaMDW1habz3ePPP7xfwjBxuP7/O1X3xKn
      k9/Ex7X/9a/+lL/68tsjv++GxwR/C0HzwW/YfPDgyP9y1LmzJOTPf/UrvvnuAUdNDI697yzi
      b774W1qdo+fkx7XfWX/Md98/IT5i9DqtyMNzswO0mk3e/9Gn3FhZnKl9bxTz0598RjF39Fth
      IlnC7l6LLAlo96bbIgOwXZc4ipCzxg6plCBR47C9YwR+FDdu3GJlcWGG82aEgx75xevU19am
      bi5NhxvXVwn8YPpz75+/64d02s0Z2ye0mjv0w7ONNz83AZRKBR4/vE+YztbeIOXx+haWefSQ
      OhFpcm3tGrZhzFTB0jBtSELCWVO/JAM2dgf0ul2knF4A3d4A15mtBrNKYjobjwiGs3Vik4xS
      tT4ONJ8Ww+VavUC+VJ3p3NX6IrlcgYI75d97Ss5NALu7LXbXH7Dbn81o9ujRQ56sb83UNlMZ
      pfoSi7XZdg1SBIN+d/qGKuP+421+9P4aS8vLM517aWmRbrc3fUMhcYplvHyeYDj9yAeQy5do
      7mwdOQU6ljQgUgaD/nTbkge0Ol0cUxHEV2QEqJRLFKqLVHKzGc1u3rhBqZCfqa0Q8Os/+2Me
      b842HOc8D0MoOv3hlCeWrK2u0u+238paHp8wydNrZCmDVgvTK1BZnG3a2drdJknS6a9dKZ7v
      7uH3OkfO4Y8jCoZ0Ox22d1scsWdyapybAGzPo5636QWzTSWK5RpZMpvBLYkTGsurSKZ/le09
      32AYxvRGEZXilAJUGd8/vI/hFikeswt0FL3OHnEmKBYKU7dFSErLa1SWlxl121JnP+4AAAJo
      SURBVNO3B8JUUCkXePr00ZTnFiw1qhhuiZWl6dcvtpvHy+VZWSif+QhwbmXdQ9+HXI3F4pSL
      2H1GQcRPPv3x9A2TkPuP1qkvLFCvTj8FqtSXiJMtwmSGeYCQfPLTn0/fbp9SpU6pUqe5N8PI
      tZ+0DNOhOuP0q14rs9Hs8+Hdu9M3zlLSt7ArNZZXIEtx7LN9R5/bCDDs9VBSwgxvYYDY7/Ho
      2QxrANPh7vvv0Ws1CaPpRx/DNFleu84nH83QCU6JhfoMu0CngGGYxGHITNlzrCLlvEUUzrAA
      zxK++uornu/scMYDwPkJoFip0Npax5/hjuIopO8n+IMZFqJJyKMnG9QXl/GOMAhpDpPEEXGS
      kcvnmGHzChKfh4/XabY607eVJqtLDVSWkman5qkzkXObAvlBTLHgEM2wKIqjCNd18IozbKmZ
      Dp999un07eacfqdFf+QzGE42PL6JOAz44ONPsJl+3ZbGARkG0i5QPONt0HMRQJaERGmK6xWP
      NY0fRa5QZHvzCVYp4tb11TO4Qs0PqTaWqTbgdjqb4SbOYHfje+5+PP3Lp7WzTb62jOqu0x4l
      LOTPbuQ+lymQNB2uX7/OzetriBkWRs29PT796c/5nZ/95AyuTnMchmEc66JyFDnHQDolHtz7
      imTKaUxj9Sb4HUR+4Uw7P5zjFAhAOgUqM2wC9Tot+kOfTJgs1mezLGrOGbtEvdSmVl3GmFY/
      QrC0Or37xiycqwBm5fadd7cDo5mRNOD7J09RQrKwUH/XV3Mkl0IAmkuGUmzs9Hj/xjK2573r
      qzkWnRVCcyaEow5eaQHJjN6P58T/BybbGUc/QzmyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ML - Restaurant Jobs Throughout the Years' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rate by Age' width='192'>
      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
      pgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Rate by Age Throughout the Years' width='192'>
      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
      SzqWlY6HAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Rate by Age in 2020' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      WFkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Summary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Surgeon Wage Trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Occupations with Highest Mean Wage' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Occupations with Highest Mean Wage 2020' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Unemployment Number 2020' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2955McSZqf+XjoiNSlUQWgIBpAd6O7B90jerTYndnl7ZrxSBp5trYn7Na4
      /MKv/HTG/+KMdjYkz87IHQrjUN2RtlwOR2wPt0f3tJzphpZVAAqlUmcod78PkVVQVQCqUEBV
      VsbTlu2RAlGeGf4Ld3/9fV8XWmtNTs4QIoQQxm5XIidnN7HWDt66cos7nXBHT/6HJ2YouM6O
      njMnZydZF8CddsiNZmdHT54qtaPny8nZafIhUM5QkwsgZ6jJBZAz1OQCyBlqrMd/ZA1N+9ZV
      ROkAaX2OVBSwRUQkLTxLEiYGxWoZnUZ41XEMQzyzSufk7BRbEAAElRKNXoRSDlq3SbAxdEyk
      wVKS1bmLmN4oht1iZe4qyelDpPaW/kROznNlS62zdXuOlZZNYEVIw8cWnawHMFN6qUlxZIK0
      28YOSky/9Bq262JZuQBy9i5bap3lI69SQiAEgAD03VKL7DBnU7TWpEqTSE0kNd1Y0okl3VjR
      iSWp0hysukwVHQLHQIj8B33WbEEAAmGYD7Rxcbcc4mt1rztVIjWdRD3UuLuJopsoDMA2Ba5l
      EDgGBcek7JkcKGcr5vONmHN3GggB02WHg1WXET+7TLkgdp58fLIDKA3/9dwKqQJTQMExH2rc
      gWMQ2CbmY4wDkyUHrTXdRDHfiPhgvk07VowVbA5VHQ6UXCwzF8JOkQtgB2hHEtc0+Gunqhhi
      bYi4fYQQFByTk+MBJ8YCYqlY6iTcqEe8N9+hFljMlB2mKy6uKfKe4SnIBbADNCNJxbcee3ff
      DkKAaxnMVFxmKi5Sae60E+YbER8vdLFNoy8Gh6pvYeRi2BK5AHaAZphSds3n8rdMQ3Cg7HCg
      7KC0ph1J5hsx78236cSKE2M+p8b9fB3mCckFsAM0I8lszX3uf9cQgrJnUfYsXpoM6CWSD252
      +MHFOm8eLlHx8sv7OHJXiB2gFUlK7u43Nt82efNwiVemAv7qcoOPF7qoPODvkeQCeEqU1vRi
      RcHZGz+lEILpssu3TtZohik/vFCnEaa7Xa09y964agNMlGpsU+y5yadrGbx5uMTLkwH//XKD
      T+50kSrvDR4kF8BTEiYS396bP6MQgpmKy++drFHvpfzoYp1m3hvcx968cgNEM5KUvedjAdou
      rmXw+cMlTk8G/Phyg08W8t5gjVwAT0kzlJSekwn0aRBCMN3vDRph3huskQvgKWlGKeUBMjeu
      zQ3y3iAjF8BT0okURWfv9wD3cm9vcO/cYBhlsPVbl9bU5y6DV8XSXaLUxrNSwsSkUCmiZYJb
      qg3NSmQkFa41mN/VtQy+cKTMfCPix5canBj3OTHmPxOXjr3KNvpuRXtliShZojI2ATqilwgM
      pVm5fhPTH6ViWEMREZZIjdYaoRVpOrg5kCYLJr9zvMS78x1u1CPePFQg2KOWrZ1m661TGNSm
      D9FYaaCiNokysU1JJE2C6gRJp41TGI6IsEaUUPGsffEdLQu+fMzmRiPircstvnikzFjB3u1q
      PXO2deWcYoWJ2iRCpygtMIRGKYFpmYB+anfgQWGvuEDsFEIIDlVcCrbJT681OTNd5GDF2dfu
      1tu4egLbL/SPTcz1o+GjGaZ7fg1gqwghGC3YfON4lb+60qATS06N+/tWBMMx0HtGDMIi2HYp
      uia/+0KVW82YX8+3UfvUVJoLYJtoskWw8j4aAj2IYxl89VgFKTVvX22SyMGd6G9GLoBtIlWW
      4WFQTaBPimkIPne4xEhg8aOLdXqJ3O0q7Si5ALZJnCrsIQlOF0JwejLg1HjADy/Uqff2jwtF
      LoBt0k0UhQFbAX4ahBAcGfH47KES//1yg9vNmP2wu1YugG2yFge8X60jmzFZcvja8QrvzLW4
      srKzOwrtBrkAtsl+tgA9jopn8c0TNS4uh3x4qz3QYZe5ALZJa0DcoJ8Vnm3wjeNVGqHkF9db
      A+tRmgtgm3QSSTBEc4CNsE3Bl46U8SyDty7ViQbQHyoXwDbQWhOlGs/Kfz5DCM5MFzhU9fjh
      hTqtSDJII6L8Cm6DXqJwTTFUbsOPQgjByXGfT00X+MuLdZa7yW5X6YnZv8uYz5B2LCkO8fh/
      M6YrLr5t8JOrTY6PZhnq9vpNIu8BtsGgxAE/bwQwEth862SNTiz53rlVbjaiPT0k2kYPoGnd
      vo4UAY6VEksLt79HWKFUQKsUOyjv64iwViSp+nnnuRmeZfCZg0XqvZR359tcWAp5faawJ2On
      txUS2V5eQZkdUtdFa0UiBIbWLK/ewnDKVCdNGrfnSV85vC8jwhq9hJmyRZruH5eAZ0HJEXzt
      aInr9Yi3LtU5XPN4ccxjL9kOttUDIAyUTFCpQGqBaSgSKXAKFdIwxPJ8Rg4ewbRtTHN/DRU0
      0I4VFd/BHBJfoKfl6GjAoZrPJwtdvn+xwStTAbNVb08ETm0jJNJk5NBhlHCwDEWqTWxDkUgD
      x7VBK4QwMF0XIfbf5g1p3yXYzjem2BK2KXhtusjRUY/35jtcXAr59MEiNd/eVSFsa3zilmrr
      x2tRo/tvoLMxscxygeZNf3uUXIuvHC2z0Er4+bUWYwWLVw8U8O3dGSnsodHYYNCOJEVn+Jzg
      dhIhBFNlh98/VaPsWXz/fJ3zi7uTyj0XwBZphnJPWjMGEdMQvDgR8Hunaqx0U753bpXbrefr
      Zp1fyS3SjNKhSBfyPPH66RpXuim/nm/j2wZvzBQJ7Ge/V3LeA2yRLBXK/rJs7QXWslF860SV
      gxWX759fpR4++/DLXABbpBurXZuwDQNCCI6OeLx5uMyvbjx7N+tcAFtAKk2iNN4+D4TfCxwo
      O5Rdk/OLvWc6J8gFsAW6sXwu49KcjNdnilxc7tGOn12cQS6ALdCOBy8V+iDjWgZnpov88nrr
      mZlIcwFsgWaUUhrSOODd4mDFwbUEl5efTQB+LoAt0Arlc9sRPidDCMEbM0U+Xug+k6RcuQC2
      QL4ItjsEjsmrBwr88nprxyfEuQCeEKU1vVQS7JENsYeNIzUXqeF6PdrR8+ZX8wmRSoMGK7cA
      7QpCCD53qMQHNzs7mn1iGwExiqXLZwljKJU8Immt7xFWrFVQSUQwMrHvIsLCVGNbxp7wYR9W
      iq7JqXGfd+fafH62tCPm6G1tkTR65Bgrt5ZIlcREkkiBLRT1+UuY3iiW29p3e4TVuwklx0DK
      /ZUdedA4VnO4thoyVw85UHp6n6xttc72nTuUJqZZvfwbImnjWQndxKI4MokMO9jB/tsjrJPE
      VPz9sR/YoPO5w2XevtJgqlzDNp9uFL+tq1k6cBiAyRfPPNUfHySaYcp02d3tauQAVd/i6IjH
      +zc7fOZg8amGQvkk+AlpxyrPBbSHeHEiYLmTsNh5uiRcuQCeAK01nVhSyE2gewbTEHz2UIl3
      brRJn8JjNL+iT0AiNQKw9plla9AZCWwOlB1+c7uz7QWyXABPQDfJYgByL9C9hRDwylTAfCNm
      dZvbNuUCeALakaTk5j/VXsQ2syx02w2eya/qE9CMJKXcB2jPMllyqPk25xa7Wx4KbSIAjUwG
      J8X1s2ZtP7CcvcuZ6QKXlkNa0dYWKjcRgOLKz37EzbPnGLw9P3YWrTWtId4PbFBwrCyTxC9v
      bC14ZhMBCFzbx3Dybl8DsVS4eymja86GTJcdfNvg4tKTB89selW1imkuLu9IxQYZqUDp3AQ6
      CKwFz5y906UbP9lQaFMBCC/Azi96tgBmmxi5CXQg8G2TT00XnngotKEA6tcvEUUxGHm3n8cB
      Dx6Hq5nP1vXVxwfPbNjCq4eP4/selpM7f+VxwIOHEJmbxIWl3mM/u+ktPokiHN/f0YoNIsO8
      I/wgU3BMfueF6mM/t6mZxzCNTdcC2revEykHx4iIUguvv0dYsVpGpTFeZXTfRIS1o3xHyEHl
      SXao3FQAxbEJWvXuw29oyfLcdYoHjhFHGqFDQpntEbZy4wKmP4phOfsiIkzrbBLsGjrfD2yf
      8sjWqdKUh+fRAq9Ypr18B88RxMrCNVPC1KRQmyDptvdNRFgvUTiWgWPn6dD3Kxu2ztUr52gu
      rxK244ffFAbjJ15Ga4EQGo3AQKMQd02F+2P0Qy/JcoHm7F82vj0LgdKCiZOnNpwlG+bD/2w/
      jpLzvQD2Pxve3kzXo1CtouJwgyHQ8NAMJWV3cIdwOY9nw6tbmjqMsVLHQA23AKKU8WJuCt7P
      bNgDhCu3uPbrn7F0a2FoAwa01v1AmHwItJ/ZsH37o1MUq2Vs2x7qHiCWGiffDX5fs6k7NDIm
      6m2wDjAkJCoPhB8GNo0I6y3VkTId2oCYVpgNf/JA+P3NJgIwmXj5FLYb7Evz5pOQxwEPB5sI
      QNK8s4TjOkM7B8jjgIeDzQNiTAvLcZ5nXfYUeRzwcLB5THAhII12djeOQUHrbBGslC+C7Xs2
      F0DgsTp/lU69+XxrtAeQOt8Qe1jYNC1KfWGRiRdOMYxm8ChReJbILUBDwCN6gIDW4iJepfx8
      a7QHaMX58GdY2NQdOkkVpr2xH8zSxY/ArWHIThYRZmcRYaVaFZWEFCdmBjoirBmm+QR4SNhQ
      ALWjp4i675PojVz7NTJOEFaCYfi4jkQJE9/WNBeuYXijOJ3B3iOs3ksYD+w8CmwI2KR1aqJ2
      m7DTpb44TW185N63sIMCvTDCsFKi1Ma1UzqJSWlsBhl2Bz4irBNrTow7A1n3nK2xyRUWeKUi
      RjBC5d7GDyAEI0dOPfua7SK9ROHnqRCHgk2vcthu4wbB86zLnkBpTaIUTm4CHQo2T48exSRD
      uBDWiSVBngpxaNjUDGoKE8Oxhs4XaM0LNGc42HQIZNqC9mpjvyR4eGKaeRTYULF5enTTplgq
      Pc+67AmyVIi59WdYeEQPYG1768lBppUvgg0VGwpg9co5EilQYt/kuHoilNZ0YkXRyQUwLGwo
      ALdcozQ2TtKoD1VIZCI1pgED7MWRs0U2HOyatovtCw68+qmhComMUoVr5gtgw8SGAnDLNVyg
      t7yEDPyhEUEWB5wHwg8Tm5g7FLc+epdep0stPU1tcvT51mqXaOWpEIeOTft7maZoDXG38zzr
      s6s0o9wCNGxsertzgwL+5BFGDkw+z/rsKvluMMPH5lkhDEFj/gZqiMbDuRfo8LFhDxC3G/Ta
      TVRqb7gOEK7eZmF+Cd9R/YiwlDA2KY/WSMMutcPHBy4iLJFZJmx7GIOgh5gNBbBy5RxSS7T2
      HhKAVpKFixdJMTHL0xS0QgsoOdBZuYXhjhAPYERYI0wJbAMpn2yH8Zz9wYatc+rVz6OVJGp3
      0DywGiwMDpw+Q3t1FUOFRNLGs7I9wioHjqKTaCAjwnpp5gM0KPXN2Rk2vdrCMPHKD2eEEELg
      BEVGguJ9r1d2vm7PlTwV4nCSz/j6rC2C5QwXuQDIUiHmi2DDSS4AMi/QWCq8fEvUoSO/4kCq
      NEKI3At0CMkFAHRjRWAbQxX7kJORC4DMByjfDmk4yQVAf0PsPA54KMkFQL4bzDCTC4AsGVbB
      yX+KYWTor3qYqPVscDnDx1ALIJaKH19u8OpUATO3gQ4lQyuAVGrevtLkcM3l2Ki329XJ2SWG
      UgBKa35yrcFoYPHiuJ+bP4eYoROA0ppfXG9RdExeO1DIG/+Qs3Xjt9asXDtPL9S4Vrq+R1iv
      HxEmoy6VmSN7MiJMA+/OtdEaXp8p5o0/ZxsCEAKvUKTba2I4ZXxHooWgaGnaS3N7NiJMa/jt
      QpdOrPjC4QJKyqHKepezMdvoARTdVgPDskH1iKSFZ6X0EpPy5Cwq7u25iDCtNecWeyz1JF8/
      XsXag71Tzu6wjR7AYOzYy8+gKs8GrTWXV0KurYZ844W88efcz76eBGsNN+oR5+70+NqxKk6e
      9zPnAfZ1i7jdivnwVoevH6/kwS45G7JvW8ViO+GduRZfPVYhyPP952zCvhTAajfhZ9eafPlo
      OXdzznkk+04ArTDl7StNvjBbpubbu12dnD3OvhJAJ5b8+HKDzxwqMV7MG3/O49k3AohSxY8v
      NXjtQIEDZWe3q5MzIOwLAcRS8dalOqcmfA5V3d2uTs4AMfAzxFRp/upyg8NVj2Mj3q7492it
      0UqjpOofK7TKXlt7rlKFSiUylQ+XiUSlCgxBebJKUC1g+y5Gvm7xzNlTAtBaIxUkSpMqRSqz
      Bp4oRSp1drxWKk0qNUudhOmyw4sTu+fW3Gt0+fk//wGGlWWWEIa4WxpGlnPIMjAsE9My7ysN
      y8S0s1KlksWLN+nVO6RxSlArUp6sUp6sUZqsUhwrYZi5SXcn2VUBfHSrw416hNIaqTMBmEJg
      mQLLENj98uFjA98G2zSYrbmMFexda/xaa85+/z1OfuM1Zl49sunn1uqndSbiMFU0Q0kzTFkJ
      Ja1I0o4lxZlDuKYgMEA1OyytNLl9cYH0lxdIW11KlYDSaIlSXxiFkSJu0cuFsU12VQAvTvic
      GPcxBRj9zGyD5qK8emOJbqPDzCuz9zVyyPYdbkaSRpjS6Df2VigRAjzLoOSZVDyLIyMuRdfC
      FKA0hKmil0i6BYfuWIVeolCJRKeKm40eaRjBcoiYm8OSKb4pKJc8KhWf0YrP2MFR3GIW5TZo
      v+fzZlcFYJsGg2ys1Frzyfff46Vvvs6tdkK9lzX0ViiJpEIAZc+i7JnUfIvZmkvZNbEfM7bP
      9inb/JdJpKKXKLpJv4wlvURRTxTXugndX9+kKBQTZZfJqs9oLaBQ9hFGPqd4kD01Bxg0bv32
      Om7Rp1Mp8+Fcm+NjPrM1l5Jr4VnZcO1Z3IFt08A2DcobhDJrrQnTGqvdlMVOwoVWzK8uNHDU
      MmNFh8mKy0TFp1BwsnnKkPcQ2xCAZvXaBXoxuJbMIsIsSZgYlEZqqLhHaerQnowI20nSKOH8
      Wx9x5o++yl/1He5KeyC9uhAC3zbxKybTlcwkrLSm0UtZaicstGN+e6WJjFNGig4TJYeJskfZ
      t7CHcIPAbV2xYGQMOhE6TvBMiRY2gaFp3bmO4Y3i7sGIsJ3m8s/PMvbCFBe7cLji4JuQpulu
      V2tTSo6gNOJwdMTJeolEsdQMWeokXFvq0kk1pcBmtGBzpOZS8ffndXuQbcUEL126gFWdxJJd
      ImnhWindxKI0fggZdfdcRNhOE7Z6zH94ldN//Dv86k7I758cwRqw3SVtG0qBy9H+8yRKWG6E
      3G6E/PiTNlNjBV6bLlLc586E24oImznz5jOoymCgteb8X37I7Jun+GA55o2Z0sA1/o2wXZup
      CZvJ8SIvxynnbjT43m/ucHi8wOmpAr6zP7NnD9+g7ylpLtSp31xBzs7g2wZTpUG2Yz2MEALH
      tXn1hTH+8JUxrCThL36zyAdzLaJk/20hu7/7tx1mbdHryFdf4f2lkN89Ud3SXVFrDXqtzNwk
      UH1Xiv7agWGZGKaB2ANGBM9zOHN8lFO9hN/ON/nzj7qcmgw4MVnAsfbHwlsugC1w58JNEIKb
      QZmTgU2hH2mmUsny2dvIOM38gaR6oOz7CSmFQGQbL6+ZIAVkGuovosnMj8h0LezAwQ5c7IKD
      HThYgYtTcDGeo7VGCEEQOHz2xBgvdiI+mmvx5wtdTh8ocHyigDng/kq5AJ4QmUjO/egDZr71
      GS6Eks/NZnsoa6W4+csrWL5DYbKMMI3sDr5WWnefC0Nwt6337/AP3uj7PUQaJiTdmKQTkXRj
      wtUuSTcm7kQIAaZj9UXiZkIpZGKxPBvDNtb9knaSUsHlCycdWp2Y9+dafLLQ5dWpgNnxwRVC
      LoAn5Mb7lyhPj3I+sfjMwRJGv3Et/vYmhmUweebQzjQ4AQKBU8ju9oyX7ntba515liYpaZhm
      IulGdBfbJN1lZJgiU4mWCsu1sQKn35PcfViBi7nNSa0QgnLR5SunHFZaER/Mt/l4octrUwGH
      JgYv214ugCcg7oRc+fk5qn/wRUZtm7GChdaaxpUlesttDn3l5HO78EIITDvzILUDF3+kcN/7
      a3MJNP1eJOqLJKa90CTtC0alKptv2GYmDN9ZH2p5tQKWaz/cOz1Qj9GyxzdKLovNiPfn2/zm
      VodPzRSZHi3siTnMk5AL4DForbn4k48ZPT3L1RB+bzZLqNtZaLJyYYHDXz+1p/z214UoWL/j
      P8jaJFwmWSxC0o37wojpLbdZeP8GXi2gemyCYKz4yMYshGCi4vHNssutesgHc21+e7vDuG8S
      eDaBZ+Gg8V2LQrDmfvFAXXeRXACPobvS5s6Fm+hvfoFXxgp4lkHU7HHr3Wsc+tIL2Z1ywMgm
      3wLLNcC1cYr3OxVppWjfbrJy7hYL78WUD41Qnh3F7jfgjTCEYKbmM131mK+HrHYS2gqWWwmd
      bkIkFYkWyDDGNARewcU2BJ5lEHgWrmngmuC7Fp5lYJuCwDaf+RpLLoBHoLXm7A/fp3DmJA3D
      4MiISxomzP/sEgc+PYtb9nezcugNXmMHHNyEYVCarlI8UCHtxTSurzD3kwtYvkPt2DiFqcqm
      vZ4QgoM1n4O1h38bpTRpKpH9YKZOJ6IXS2KV0u2lNMKUUGp6cUoYSbTv4ns2tcCm6llUXINa
      wca1TYwdcjTMBfAIlq/eodPq0ayN8uWDJZCa+Z9fYuTkJMGDk1Ol0Emy/iBJ0HH/eRShoggd
      hdlxGKGjCB2G/df7jzhGK5U15H6plQatskABre55X5OZjNZrgJYSYZiIQoARFDAKAUahgBEE
      2XH/NREUMDwX4XoIz8VwXbCshxqUEAI7cBl78QCjp6boLbVZvbzInQ/nKE5XqRwZxS0/eSSe
      YQgc526TKxU2T16gtSbuxbS7Mc1I0YgSztdTWqkm6cUEnk3JgqprUnENSr6F7zs4gbslYeQC
      2AStsru/evUUMxWXimty650r+KNFKkfG7gt+6b3zDvV//W8QjoOw7Ycfrotw3X6jcxGeh+H7
      iGp1vQEK10M4NggDDIHolwgB/bBKDANEf5FMrC0giPsnq0qheiGq20F1uqhOB93totod0juL
      2WvdDrovQhWF6DACrRFeJghndhb/jTdwXjiefad+rxKMl/DHishY0ppb4fY718CA6pExSjM1
      DHvnTK9CCNzAxQ1cRu+9LloTp1kcxEo3oR5KLnRTGotd0rCOE0eUbEHFNjLHvtOHHvl3cgFs
      wvxHV0k9j1apxJemApbO3kJJzfjpmfsaf+s//Wc6v34H64//JtboGKbtYNh2Vlo2hmllpWVl
      d+fnMPEzq1v8BzrrPVQYojtdosuXab/1Fsl3voN96BDBp9/APX0as1RCCIHlWtSOT1A9Nk5U
      71G/usjy2dv4Y0WqR8fxR5/dzjtCCFzbxLVNqsHd+ZfWmijVNKOUei9ltZtyPZEcedz5dN9u
      9t2PrnCj2dnRyv7pGy9Q8QdvA7okjHn7//4e3S+8wWvHxyg32qxevsPhr5zE6LsAqCii/mff
      IW41aJ95gfP6Dq4bYCgwlMZUYCIwMTC1wFAaQ4Nlu5i2k5WWjWW7WLaD2X8uTBMh+gtnwgDT
      zALrDQNhmPc9X1897rc1pRWWYeHaHoZ4OsuU1hodx8SXLtF7512is59gVKv4r7+O/6nXMMfG
      1iPMtNZoqWjfalC/skgaptmE2TQwTJF9l/sWCPuvGQ+/du8iouGYdxcRn4GghBAi7wE24MrP
      z5EcmKRQLTCSxtz+5CaHv3ZqvfHLZpPlf/R/IaYnWXn9KP9x+S1KEzOMehaJTEhUkpUyvvtc
      JSil0KlCdyVKSqRM0UqilMxSpyiVDTf6/hHrrhL3PBf9YY+4d/ijsyKWMQC261Pxq4wVJxgL
      xhktjjNWGKPqj1ALRnDMza05awghEK6L9/LLeC+/jJaSZG6O3rvvsfztf4xOJf6nXsN/43Xs
      2VkMy8ysRYdGSLoRMkpRMhOGUplbyLpLiMzSxGiZ9t1F9EPuI2tpZFDZZN/y7PXV7vUFPd/B
      8mxMy3zkmsWj2FZEWPPqb0jLx0nvnCeUNp6VEiUmpdEaadhhZPbEwEaE9Zpdrnxwhc6XP8s3
      qja3f3mZmS8ex/azCVt8/QYr3/421hff5Lrb4d8t/YCvvfqH/O6x37+vUd3r7bCG7v9fr1tw
      HjhmbWgv7v7j9SH+A/+/59zi7toXWiuisMNK6w5LnUUWm7e5Nvcxv24vUA8bNNM2luVQCqpU
      C6OMFsYYK4wzWhhjvDBB2atQcItYxv1NQ5gmzuwszuws5f/xryPrdcL336fx7/8D6fIK7skT
      BJ/5NM7xF7B8Dzt4+gRla/mWtFKkvWR9QS9uhXQWmqRhQtqLQYPhWFiudd/Kt1vy8GqFR/6N
      7Q2BeoushgGqtZRZKAQYGnqdFQx3hOrEKCtzV/k//vYfUi0+ugJ7jQ//0y+47pQ48uphSmdv
      MHZ6hsJU5vcTfvghrX/zXaw/+BYfdy/zn1u/4o/e/Lsc7hykfvHO+prAQ+bJNfRDB/e/rdf+
      R3/Y0M8rZPZzDN07XDA2GTrYJpZrrfsK3TsxVWlCGkf0ek1a3VXqnWWW2ndYbC2w3F5kJVql
      SwK+z9HRF3hp8hVemnyZWjC6YX3XUK028fnzRO+9R3zlKubkBKJW6w/ZsnphmNlk3uy/Zjym
      NE2EH9y1ZBUKGL6/5jl4/9+XChmlyDhF9hLSMCXtxqA1o69Mb1pv27bFNgSgWb38W9qJR7kg
      iPo9QJiYFKtldBrj1SYwTTFwc4D6/DJv/7+/gK9+ltPLK1QP1ageGwetaf/gh3Tefhvrb/wP
      /HTuZ/xUXeHvfvrv41wS2IHN5JnDGLb5iNb/pGi0ZkOP0mzoIB8aMtw7jJCJzBrCWoNIJIYp
      +o55mQuF6WbisFw7O3YsTMcEIUmjDu3OEucXz3J26ROudOexgiInJl/ipalXODF+iqpf23CO
      obUGKYmvXEW1mmipQMkHSoWWMjPzymzot2GZppmZuNO5+wijzKrmOBiuk1nWCgWMYjF73Htc
      LGJWylijm4tXCLEdATw5gyQArTU/+86PuDFziFOWYKrsMnnmEChF/V/8K9KlRXQsoxgAAAnG
      SURBVPjWV/gvF/+Cq16X//XIn6CuRky8dpDSTG1PLOtvxNoENRtT953oor5AopQ0TjIHujh7
      XfVTNbplH7fiYjgpLbXM5eXzfHLnY+aSJcxCkRcnT/Py1Cu8OHmawA6ey/dfX2tZWzOJIlS7
      g+q0ke12dnxPafgeI3/vTzc9Xz4Jvofbn9zgVmpStixGLcnkpw6i2m1Wvv1PMKcmib71Rf7t
      2e9CdZT/xf9bWCuCA994cX1usFcRQiD6KRgzHj8210oR1nv0ltv0lhPUqsdR6wynDryJsCK6
      apWLrQv8ZP7/4191v02pOs7JyZc5PfUqR0aPUXYrz8ZqYxgI1wV35xIg5wIAZJLyydufkLx4
      iqNJj+kvnkQuLbH0f/4jgq98icUxh3/5yb9gunSKryRfpnZsgtqxcTSS5vJ5lud/Rn3hQ2y3
      jO1WsofXL90yjlftv1dGCCszb95nzdlbCMPAHylknqYnJtfjE6JGJgq5YnMyqnDSewNKEU21
      zI071/nB5X/Ngm7iF6vUghqmYWEaFpZhYRom1vqx9fCxef9nLMOm5JWpeBUqXhXX9hCI9aHX
      Tv1uuQCAa+9cZGFkjFmdcvwLx0gunGP1n/0Z5T/6n7gYzvEvz/07Xnc+z+fdL1B7yaPb+RUf
      /vintFcukNgVVOUVesXPYRoGKm6jOi1UfBOdtBBpB9I2Ommjkja2aeLaHp7j4dgetlPC9io4
      bgXLLWNaPpblY9o+5r2l5WGYDobp9ksbw8hK8ZQ2/8chhMjcpX2H4lQF6Oc47caEKx0Ky1NU
      l2d5ufB50rhFM1omjEIkav0/iURqidQJUvdIVUp49x2kVsj+M4UiRdJTIR3do627aFPguj6O
      GxC4RSpelYpfoexV7zmuENgFfCfAt/0nWgsZmjlAlr5cErZ6tBcbtBYbtBebdFZaLIUK/cZp
      fu/UCPo379L63vco/8n/xq9v/JJ/P//f+JI+ykEjRnrX6ClF2ztCWHyJjnMAxy0xUSwxUSwj
      gFQppFZZ2X/cPZZIlaBlglIJSkboJBMIaRuRdkFGCJU9kPHdYxVj6BQTiaklhshKE402TLSw
      0UYmEMsp4DoFTLuAYRcQVoBlF3DcEpZdwHSy10y7gO0UcSwX27Kx+2IyDBNji051a4E6SSei
      t9JBxWk/1pnMlr/u13RP2vh7Y6LX3ls7VhqZpMg4QcYJSRqT6piEmEiFtHWXju7QoV/qHl26
      xEZMbKZIQzNdPcg/+OY/3LTO+3IOoLUmCWN69Q7t5SbtOw1ai0269TYqlZiOjVEuYFZLqPEx
      9LFZUmXyxQM+8X/7c6LLF7H/9z/gv579Lm8t/4pP64jUd/m4cBJV/iKF4gQzlRoHKzWmymUC
      +/GLSjv9/fR9pULKGJWGSBmh0hCV9tBpiEw6xFGLOG6Txm105wZh0iGN28RRizRpI5MuqUxJ
      lCKRCqk1jlvCLx+mVDtKoXKEcvUwQWGSgn83Eu5B1gN1qgFeNdj5760yC5eK5V1L19ojuud5
      3/qVJgmax2ex2FUBzH90lcbNlcx+3bdzG2v27b7921hbMl97btyzrG4YoDXdepvWYpPOUoNu
      vYOUGqvoI30PqmXU9AHUyQKhAmmZOAJKgUPBgpKrOKKadP7yH3P10lu0Z33e/8mPuOy9wCuH
      /pjK2DFmquPMVKuMBkUcc3fz42QrxdxjDzewTQuc7TW6LDhGobREqxStUpKoQat+lW7jGu1b
      P2X5/HfptBZQhoNXPEChcphy7Rh+eZZqbRbHKWBZW/PC3CrCMNbjF57oO8ETmaR3VQBNw+Em
      DiSqbyNOMztwf/Vv3S247/qbrXjqdXfgtcim1HagViKdPoQ+FYBhYLsWBcug7Bs4aR2XBYxw
      AZEsELZv0bt1k17nDotxRDtR9PwjpGf+Oh/0rjNj1fiHn/9TpqemNr3j7RcydwsTExPMzKJl
      u2WC8iHgK+uf01oR9VbptW/Srl+j27jGzbm3udy+RS8O8b0SfnmWUu0IhcosnlfGMPoTftbc
      NtYm/0bftcMA+n4+IvN9EqJ/wxMmpmln8x3D3tJc596ouMexqwIoH6iRlgusLYBqRDaWXH9+
      f5evdH8Lor4LgSLzjy+rEJdVzPAatlok7dwiXlyg01liobtKiEtsllDOKMIdwytN44+/TjA7
      xlSxSsUtkK7c5Dvv/z989sDr/J03/2ecHTS17QeEMPCCUbxglNrEq+uva62QaUTYW6VVv0Kn
      fpXl+V+AirL4Ba2QMvN3kjorlVJoLbPrqbLPaC378wKV/TuyxTOhU1h7IEBYGKaNadqYppOV
      RiaUNcGYlothurjBBMfP/Mkjv9euCiB6958SXv85GKAN0CZ3j4VGC5WVaBQatXbz7x8rrZFK
      syw1kVFEu6O4xQO4hRn8ic9QKI5T80coB0VKjkPguniWjZIpMo6QUYKMU67PXeSfnfsz/uDM
      3+Jrp373mVtV9hNCGFi2T9H2KZan4fCXduzcWmuk1usGhFQmSJmgVYpSCWkaZw95bxkh04go
      DUmsx9/EdlUAKwff5KY1gWFaiH43ZxhW5kN/33MbwzCwDQPTMDANE7M/LzCFQcFyKTk+rhDI
      MCKOQqI4Iuz1aK1c53rcohU2aPQatKIGnbRHR4XEIiYxUqSr+JOv/31emnxlT9rlhxUhBJYQ
      WIZB1lR3vlfeVQHM3bnMxzc/QvQXhO4rEZkpjmyseP9n+hvPIdBoummXTtqmo3rEIsFxHFzP
      w3V9im6RklemXKow4h7kiHeaslem5JYze7Hl49k+tjl4we05T8+OCKC7NE8YmxQqRbRMcIrV
      J3KH/tpnfp/XTn923SasUah7jtdeVw8+v+cYIHAKlL1ythDiFDD6goG9kXojZ++yAwLQdNsh
      QmmW6/OY/igT5doT/ctakAVo5OTsFjsw2xOopEcUx/jVCUTay1bycnIGgB0ZAo0ePo7UBpZl
      sgMO8Tk5z411AXz96BSR3JkNEFZWVjl79ixCHkE+4pxa68eO0ZVSGI/Y3vNx51ibJzzuM8/6
      HI/7Hjtxjiep59P+nnvlHDtxTeAeZ7hngZQSc7MdzPVaDOyjK/i051ibLD+u8T2K9WD1p5hQ
      P/J70L+ga24O2zzHTtXjqa7JDtXjcWitUUo91TmEeMYrPo+r3MLNG1y7MU8q1fbOoRU3565z
      ff42cpN5hxDi0Y1fRly4cInFlfqmHzGMR6TlUClzN65z9epVFlcam57jcb9FGnW5evUad5ZW
      Nx1EPu4cN85/wLsf/IaVzua7VT7uHMt3bnPt2nXCeHvn0Epx9fp1rly9+si/88h6qJSr127w
      qFuzEOLR55AhV2/cemQdAP5/6oiXz19WIOMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Unemployment Rate Since 1990 Top 10 Counties' width='192'>
      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
      xec9xkz9F2/QIJ4sQSCfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Unemployment Rate Since 1990 Top 10 Counties (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydZZgdRb7/P9193GfOuLtkJu6uJIEAQQIEDbCs6125e3fv7v+y7q7sssDi
      FgIhhAhx10kmMhl3tzPHrbv/LyYJSWDJbsgKzPk8T15kTlVXdXd9u6uqfyKoqqoSI8YIRBAE
      Qfx3dyJGjH8nMQHEGNHEBBBjRBMTQIwRTUwAMUY0MQHEGNHEBBBjRBMTQIwRTUwAMUY0MQHE
      GNHEBBBjRBMTQIwRTUwAMUY0MQHEGNHEBBBjRBMTQIwRTUwAMUY0MQHEGNHEBBBjRBMTQIwR
      TUwAMUY0MQHEGNHEBBBjRBMTQIwRTUwAMUY0mvf6sa+vj/7+/n9VX2LE+JcjvFdoxEgkQiQS
      +Vf2J0aMfxlms1l4TwHEiPFhJhYbNMaI5z3XADFi/EOoKqoSJRQMElEEJI0WnV6HRhTeWVSJ
      Eg6GCMsKgqjFYDKgEQBVIRoOEgjLgICk1aHX6xCRiYbDhCNRFFVA0ukx6DQIwnC70VCAYERB
      EDXo9Hq0GhEUmWjkXB0QRA16gx6NKA7X4/0IQFVRZD+DPW6iWhN2px2DCKAQ9nsJRAUMJiv6
      f5HElLAfTyCCZDBj+bsaVVHkCEGvB48/jIKIzmzDZjagld55w2JcDhVVjdBXtYlHf/84B7u0
      pI9fzJ333sG0HDPSRWVlfM07ePy3T7OtzoU2bQaf/MZnmJNuRHC3c+iln/CNlxsxaW2MXrKS
      VauWkRWsYuMLz7JuZxU9UQtFc2/no/ctpsihJTRQzZuP/pan93egSx3LdXeu4tYZuUh91Wx5
      /QVe23qCLg/ok8u5+eMPceP4DEyas5Mf9QpRFFl11TyhPjDnOvWuVf+nbuqWz/7iVivX/kL9
      +S8fUw+2X+nR/3GGTq1Xf/jzn6nP7mv7u8orkYDac2aH+uQP/0t98J671Xvu+7j6rSe2qLV9
      4avaL0WRVV9fi9rY67uqx/2PQ1HUkLdRffnbX1GfONyrBrzt6r5XH1N/+8gGteXSSxpqVF/6
      wQ/Vp3bXqu5wSG3f8Qv1E99cq/bKqhrsqVf3vfRz9dW6Cyu41P1PPaI+sWab2uQJq5Fgt3rg
      j59T/3dNqxoJB9Sa1Q+rX//LIbUv4FNbDr6u/uXXv1O3NIdVb2uNevr0abVtKKRGIyF18MQz
      6he+vVpt6POpijq89r3yNYCq0H3wIIPz7uCa3GZOnHbxwVlNy/h7q9jx2lpOSrP5wi8e5fE/
      foe75xThkOSr2pIaCXH61e/yPy9WXdXj/icSdR/jNEu5eWICBnMqo8rLKYzvoKHnkpHRdozq
      1JnMKcnAotWRMuMerlePcMyjEg6D36sn0XlhhQAB0UFSXCI2vYSotVM4fiwOUUaW3ZyuVFh8
      6yScBhMZJeUUlybQWdeNKaOQ0tJS0m1akCNELAnk2S0XTcmueIKiyv0cP9LB9KWzKOw4zbOV
      p3DPnY390tlDoI+6uia6BnxEETEm5DO2NBVNdIjWkydxaR1EhgYJaS04462Ivj763FH0STkU
      5aRgN0gEeuupquvAHVLR2TMpG52HXVII+wdpr6+jdTBIsKOWHo9M1vCdoK2+kbZuF0FFQGtP
      p6wsF4furN4VP10NlZxstTHnC8sYnaADDOTnnj23YD8NtQ10DviQRTOpxeUUJOmJ+HpprQ6Q
      NCEHGyEG23twhwwk5dnxN9XSExCJBn24PT5kQwqjxhQg1+7ieKMLX+QY23dFcCRnkGoJMDAo
      kZSfh9MA/u4aGr0mMtJSsBk1fGAnYG43Uv4YbAAIWG0mrHYzPUNhSNefL6Z43TjSytDpdcPn
      KjjIL4pwuEchovXS29pDtHIP2rhUsnIySLImUTbKys7aE+zc2o1FE6S/VmHisiQEoR2PWMAY
      +/CxBYsFsy0OY6uLMBkIg63UNDTS3tlPb2sXabNuIN5iOH+Nr1wA/YfY31DI0jFOkoV0tAeO
      csY9m6n2i8vJQ00cO7iHM20uovjp7XOw8utfZqKhkQ2/+w7VJSvJCdTS2BfAkJhPUWKQtppa
      Wq2TWXXvLUxPHGTHpo2caOrDF4FIWKQ28lFWjjHQePB1Xtl8Bp/eiM7fQ2c0fbjRQDdVR/dT
      UdtFQFYYGAww7aGvceeYuOHfI0F8vS78uiwy03WXnJiHxr1v8NLOegKKgBj1Ez7czqqHriWu
      7yhrf9PONY8/xGiGqN27i1M9SSz69ERaNz/J+o54Eh0mgq4mqqqjXPvN7zPqzG6ONbrwysfY
      vstL7liI6E6wYZeLiXd/imuLoeat1awLjuH25YnYjB/gfQlFBumS2b4sE45EgAsEoChIoohw
      kdSDBEOgtWsxOeDotq00mRIonjyTuVPL0CfkktK4k30VNbgjGtLzx1IgqoCMImguWGMIICso
      kQhRAFcbp47s5WSvgZKyIpIMWkRU1LNtX/HVHji6izNpk/hSshFpqIAMzRtU1XuYOuGSa6J1
      kJadi2L2IUe66Duwhp11X2RiOQg6M9lTb+aT490cWP0SGxudTLn7Zu5seZMfPN9E56CH/r4N
      vLi9gdKJoym0SXQeWMPqtUdZmJnB0R17UCd+mf9eXoBS9SZ/2Fg93KhoJCE9m3zJTjjip2rj
      X9l4tPdtAahn/4kS0qWTQE8tmzbWYJl9Gx9dVI7de5xffelhXj05mwdS3vuaaBz5zFmxjDHJ
      nTz3uc9Q1RLh1uVfY5X7C/w0dD8Pf2oioOJtVjl1YguNVfW4UwQq24zkTcojya7/4D79AcwW
      lM5uAmRjRCUYDCNHZOIdpouKaUxmPLUuotEIKjpUAvT12EhNlrAmlnLDZx9mWcRPV8UmttRW
      cbrVDqdO4omfzv2fLyVO46P5rcd5bGcuZTfbMMkd9AQgywhqKEgoGkKJj8MIiLnTueNjU7k1
      5KG7ehevbTpAYtoiis726QrXAP0c2l6Jx3uCtX9+nBfWHqBmoJeaE7V4LioXpqt6P3uPnKaj
      x4XbLyNqZBRl+FdJkrDaHOglEVHSYzbZsFoNmAwmdFoNigqDXR0EJBHCfrzeALbyZdw+MwM5
      PIDbK5BXUoxdIyFJEtLZ3ZvB5uPsPXSUxs5+3N4oiMNPnbfvgA6Dw4Qu2E5n9yVfut19dMqp
      5BckYzFIaBImMLFwiOZW12WvisnuwGYyImmMmPTC+a22ixGwpBZSnp1IpLOKysMn6benkJ2d
      ilX7D9yC/0AkewGpg7vZ1+whEhqiqb6J5l4j6c5LhllyAXFtxzjd1kdIjjJUu42tfVkUWUO4
      O05zuLIDX1RFFCVEQUBQ3fS5Q6Bo0IoioqjDbBXo6hpCEOzkZAyyd08T3kiYweYGWhu6MWTY
      GOruoK21B19YRdJbiE9LhvY2+sMRzo2GK3sDuCrZXZnAgjtLsWkBk0SJz0db9SlafIUXFAzS
      euIIfab5PLDyGtLVSh7dsQ7vP9CUIykVk8ZD0bxbWFqejBR209cbRJCiGI1R2lpbCRQl4/d7
      CYSGF7AD9RXUBJO56+4VjHN4Wdu0mpYLB6PGRFJ2MXnxr7F32yGKlk8i3eCneyCCWbKTKnVS
      X9fNlJxEJO9xjtTayV7oAGSisgefN0wg3ENnRw9uTdJ79l8AdJKG6GA/g1EVh6ii6uIpLMul
      oucoGzcpFMycS1aq7ZKtwg8YAmhNhcycfoC1z/+Oo6IIukRKpi0kywKBtmMc7lBIzysjL6GY
      BeOqWL/xGY5tEJEVhaylK8nRgi/ipeXwLvZt8RFWTWSPn05xVi5Zg23srtjIXyrWowogKjrm
      z85B0hgpmDubw2te4LfHRER0pBRNYVqOiVBLNUf2HaXJFSSqCCCq6MZMIctkOP/kvyIBeE4d
      5ETaPH5z913kaADFT/Oh13lu9UlqWwPkny+pJ7OwGO2GnTz222qyCpy4ZPkfatRWtojrC55l
      x9O/5rBRh85gJ23MEm6dn0n5pFE8/+Yv+cHhVOzCAB0BG8WAM7eElH37Wf2nX3MgbxRRX+SS
      HSottrSxzLu2n/XbNvCnn2xEq9PhLJvHdXNLWLykiBd3vsKvD64ZXgOMe5BV5XZ03kTs1pd5
      5gc/YX+Wg4griiHhvfsvSBqSyiaRsXM1P/rRGcqnLOGma4qxZZeQYz7AfpfA5JRMEk0f9I/y
      AqLGRN7M5Sw1H6PVI+FIK6B0VCYmIGx0kBCvYtaLgJ6c6YtYaDhJY38AyZnP1EmZaCUVa+oo
      ps+EM00uxPhMiooLSDJqYdw0VLOD+rZ+AqoGe0oJ48qTEEURW84sbrjWRGWLG409lcJR5aSb
      NITT8hg1TsHc7SIYAY01iaLRZaSadOcFcEW2QKHOkxwcSGB6WcrZwawQdPfS3taDNrUAR7CD
      Hr8GZ3o2tkgnNbVN9PrAkpiEyduBkDOTfJubtqoayJlCjiVAf3snfSETmYUpmHzdnGn1YUlO
      ITVOR6CrkdqmboaCUUSthYTsIorTTYSHuqivbmQgrMFk0oPBQkpqJunmAI01DXQMBtDFZRBH
      Ox7bWCZkWy84CxU55KGntZHmThchdMSl55GXkYhZGXyXXSADSshLZ+1JmvplDHFxWHVGDDor
      yWd3gQbEJNJSEjHrgnScqMCdPIniRA1ysJe6E9V0h3TEpRdQkudEE+5k9zNPsK0/mxvuuZXx
      KR/w+f8HEEEQYsZw/w4G6vax7sUnOOgfxeLlN7FwfDbmD/DmzweVmAD+TUQCQ/T39hCQHCQk
      xGPRS7Gn/7+BmABijGhi5tAxRjzvOfMMh8NEo9F/VV9ixPiXE3sDxBjRxAQQY0QTE0CMEU1s
      9znG1UNViQT6aaquoccvYk5IJycnA4f+nZu8StjHQG87nR0BHKWjybQMP4tVJYJvoIPG5k78
      mjgys7JJjjMgqRGGOhtpaO3FL+tJLCglP8GEJIAc8dLVUEtLvw9ZMuNMyyI33UG4t5nGpg7c
      F5p7CU4KJxWSZBg2vLpCAfho2Lebatc5kyIttoQ8yifnYX/Pev8KVMJD7dRWN9Ax4EPRWMko
      n0BpshHx3a3TYlwVVBQ5QOvB9aw70EJQFpCsGYyduYS5E1IwXFTWRf3RSuq62mnaU4n9k6Xc
      ZdEBUfxDLRzdupvKtk48som88XOYO3MccZ5q9u/YRWXTIFFZQXPKxYo755JtFOg8/hbbjzTR
      5gqiqBLm9BJmzp9JSn8DlQcO0eo722ywk1MdpXyuOJPE9ycAFwee+hmb4q5nfDKAkcRQHIWT
      r/TiXT2iQ80c3LSBvfVDiAYjBkmkz5hDUWI64tW0NvP3U9fQypAhndEFieguX+PDjQoRfyP7
      9vYxeuXnmZsepXb/Do6eOkRryQ0UXmQRHcTtgeTShRRFujl83kNLJSqHEa1l3HT/zRja9rGn
      oYlmVxGe4yfoMZZy08enkaPtZMsjT7OjcRL3lFoI+GTyFt3LLbnxaLyN7N5/hIYaL5MWXsO9
      4645f+zBo6+wuruIIrPx/RnDAQiCxJgbP8fnpl7pEf4ZeGk+vIVdVSGKFt/BNRMyMcsDtA7o
      uOp+7r5OTuzfSX38HApjAgBAdtfSbp3FLXlWtKjk5uXS762ivV+l0HThDUhh4jXDzhXtpy4y
      08XmLGbGEhFRDdLTbsBo0mE1DNI8ZCOvIIeMOANaIZc5CxP5Zb0bocxO/pxbKBRFQCGkgkFr
      xGEzX9y5YDsHTsmUz0rFbNC8f4+wd8XbxcmTNXRjJS7aSoM/hcmTxhI/dIxte47TOhhB4xzF
      tTfNJVMfobdmFxt3VOOSRRwZpUyeMZ3saB17qloI+0N4e7voCRgpmbuUWcVJGEQXx95Yx4EW
      F7LBSeH4ucwcl855Q8pAF6ePd6LLnsnEsixsOhFIJCcdVFUl2FXBho0HafcomFMKmThrBmUp
      Ej1Vp2jz68kqLyNJ76N2+z6GssdRlqWlZu2LtDjHoDYdo9Ur4syfxtxJTjp3b2T7oVMMGfr4
      U9sZJs0pQOxoJZo6hcll6Vh10LH3SXZKS7h9avKI2G0QfF7E1BSMw//DYNSh0WvoH/JDpvky
      tYfrCIKAIKi0tfRzrEEhvaSILEuQeoOZRL2Jc8sJU1IqvgM9qGomkiSiKhHcnfVUHq0iklxA
      SWHcBcdVcNUcpdeZz5h4G9oLbsYV3xdVlTnywvf5/ve/z/d/8lue3HAaT3CAhsrtvLhmC8db
      AljjHRjdJ1m/sxqfIYncghxs3Vt59I3TeP2tHFi7hV5LDvm5mcRbNMjBKOG+Bg4fPER1n4oz
      Iwvb0DHW7DqFOxCidfvjPHNoCGdOHqkWP8c3vchbVRc4qgQ8uLwGLE4H5kvMi1W5hbcee45K
      v5Oc7GQ0vcfY/NpW6twRBpqqqT7ThCsMEKC14hDVHUOEFR91O9eyo9qPNTWLVLufqi2vcbzP
      SFxCColxDuyJ6eQVZpLocKB2HWXTgRP0eUKotLP/pZ10MoKsPAUBLnQ8AkRBQJL+kbmnSsjV
      QaDjNDmjyygpSMciCQioXGy1o6LRahEAVQ4x2HSAbfta0GSMYlRZKVn2C9qMdlJxOkJ2dgoO
      i46L3zlXiiCQWj6b2YWAqMeWnIiOXogo6B3plM+6htHpcfgO/oX9e/cSMMQTZ9YSaD/Fmeax
      DC4eh7u3nmZpNCV5oxiVk0lSvJ6oC9A7yCydyJxJ6fTIlWyudBONdnJk3TGc1/+Y6+clIboa
      2LH6GbYdqmd+2USsZ/skCjJKVEG5xMJJ7TjCpuoEbv/p9cyIF+g6uY1X1++hsnkioy5zqrbM
      McyYbyPQZaH32LO45DhyS8ZSVt1PffxUFl07DhsqvlkT2PmXGmr6JpDmO8y28AQ+UW4bMQJQ
      rTbk5lY85GBFxecN4vcGcdj1l698lqi3n5aTh+iwlDMrL+msk5ARs8/NUNBLQE3GLICnuQld
      0mRAIdB7lK1HIhRPGEd+dhKmS0a1p/Y4PdY0JiYlYLhEi1e+BkAkrWw2sy9cA/T1gs5GSk4+
      eRnxGETo93tR08eydOYUsuOH9wJEcxqJZjvzH/gsttO11O9+lX3bEply/W3MFhl2WdTr0UoS
      Go2EIAiAn6FBSE5PxiAKoLeSEGcm0OUlfK59axyJcUGau3pwu6Mkx19wev4h3JpkUhOHvYFM
      Vic2QwCf//LBfw0WK3qNSFDUoPmbV0zAnDOLmRk/52RjD0l9uzDP+igFppEy/EFjLadQfpIN
      J8q5sSBCzZkzNAwmck3C33sNwriGWjjTaGLMLbkXeMg5KUj1saG+lvisVIp0Dbz+ppfCVVZU
      RaZx10G0Yx6gNM82HF3uQpQeTtQqpGWmkhKne8eU5+p/BxAlNFot5wJvJaRnYR48Sqcax/yy
      QizKEC0NQ/jlIP2+DKYsHMWkzpNs3LibU7WdTCz+WwdOo2S0wp827uGGvGlo+xs4fKKV5Cm3
      vr31qklj4rRSDqw5yOb96cTNH4U93EJlm4kxGUUU+Z9g68HryRor0VVfQX1vMrPTbDAQwOsT
      CfhDDPZXUdM+iHQ5EyhJg1YOERx04Q7KWPQigs7JlFklrN/4Jq81OJj/cPrIWRwLoDWmMWPp
      eJ55+qt8ZkBLUulsbrh1Omk68NRsZWOdTNHYWYwxnuQvv3mRg839+Id68b1yjM1WC2Nv+yI3
      mI7y5subeXnb80iArXgOK1asYNrk2Yxav5pnvvMK/WEHZdfewd0ZJlC6OL5zE2teP85r50az
      OYvp197GyuvKkOqO0SZaGJWcgukd6vgXfAjT5c9j5YIunln9Az725wCiIZHSpR/hs5kGajb8
      mZ+eaSMo60gomcXysbkYgy1/40gGxj/4FWb/6Hf8132/QTYmUj73Du6dl3nBSWiJH3sd9yPx
      0st/4AtPDqAaUpnxwFcYXTyR+z9TzS//9AXu88hYM8ay6Pa7mZ5mxe9KJbTjeb7/xc3kTp5M
      giKScLlpqz2V4tI0Dj/1J/5r8yaWffxebppfir18FpNf/i6vpd/Cpxx6GDETIAFB1JFUvpiH
      vjKVQFRAazBjtZnQAOacqSxJA61eD2I5t346m2UR+byrqiCI6K3xWKTb+dYfl3Hu+SPqTFit
      JjRaE5OXPUDxvABRVYPJZj/rR5HMDf/3KPMvfJGLWoxmK2aAnFlclyGi0+vfdcH7nv4Af9sa
      VCHs96PoLBgulJAiE4lEkQUJve7cVpOKEgkTCkeQhyOUDgc21QpEgiHC8nAQVFEaDqQqqVFC
      UQVJo0UriSiRIAFZwqjTIAoq4WCAsKyAIKHR6tFpJS6OvaqiylFC4TBRWQEkNAYDekkAJTIc
      quNsoFSdXodGEkCOEg6HicgqokaLqCqIWh1aSSAS9KNozRg0oCoy4VAYQWdCJ6ko0QihUBhZ
      FdHq9Wi1Eqq3kr9+488Eb/0aD05PRa8RRowEPmhcNj9AzBz6H6Nm7ff41eqTGBd8jq+umESC
      WRsb/P/BxAQQY0RjNptjHmExRjbvuQgWRRFRjGkkxoeXmFN8jBFLzCk+xognJoAYI5qYAGKM
      aGIukTGuHqpCcKCeXW9u4FS/RFLhRGbPmXze3fFCZH8fDVVHOVYxQPbyFUxJ1Jw9RBTfYCt1
      rR406WMoTwSIMtR2isP7jlDV7iIk6Ekqmc+N84ux6c5F1ZPx9tSyZ9MBAjmzuGZWPmYlQn99
      BXsPHKG+J4QhrZx5C6ZTkGA+b6pzhW+AAfY+9gPW18GwC2InB994kud31BO4sgO+N7KHuq3P
      88sffZtvfftH/P753XSEL18txr8SFTni4dSm1RwPJpKT6cDfcoydO6txv6NsG/te30Zlm4LQ
      dZJq9zkTahlvfz37Nm5nb4dI43lL9yB9nYOERBsZeQXk5yQTrnyZtZVD502klaCb9tOb2XCq
      lYbKDkJAuPME+ytO0y0kkZufizN4ilc2VNDvD583wbjCN4Cfhr0baC/9GtflBIYdW7Y2Urzq
      +n/CKyVI/abH+N1bbsbMmcpYq4aQd4g+L6TFX92WOg6tZkdvAtOmTiPX+feb8MZg2CXSe5K9
      pxJY9IWbGO2QaT2yiwNnKmhwlTLOcWFhG1ljxpMdn0w0eIK95x/DAjpzIkUTZyJI2QTO70/q
      SSoYS0KxHpPFiKSG6d94ip+2+VEmxCGqEYZ6znD4tI5Jc8qJNg7XGmxrw6dxMGHutYxN1BAZ
      PMrjTzQzFA5zzofvfY5XlYCnk8M7tqNM+BiLSuK56klO2vfy3KutZK+4nxtnlxKvh7DXTeSf
      MD593bVUNQcoHTPl6h98BKAMtTKUMZmyBAMSKmmZqWQMuugZUMBx4WTDRlbpcCq9tosCFYjo
      TfFkF8fj7oGmoXN/12KNO+vhFQ3S07ifNyrtzLjFiihAJOClfu9uxEk3U66po+KsAGyJdiIN
      3Qz0eZCdNnydzQQTU7BptFfHJVKNBOk6/DqbWsu5/6Ey4nSgeNs4tOkVXlh/iJ5oHONuuJe7
      Fo8nzVrHc196BeNHV2BY9wjrIgv47L0mtv14O5HRVhr3n8RlLmbxbXdw/ew8LGfb6K+t4JQ+
      jy+OzsahlxAE0Fvj0KMSGmxh/9rHeGFbI15DBjOuv5WbFo4nJXScJ19qZdSimYzNdaLt3sy3
      /xjkY99cjPbkOn73pwaSxvs5sbuBSPI4rl+5nNzubTz9zGYO9es4sX0dxkn38O2JrfxyrYFP
      /Ow+yrUKrs5DrH3kEDkf/wxzUj/Q+Vz+OQT8iM5zD0EBrVaLrCgMuDzwvuOFuDjy3CM8s7mC
      oaQ53HzLDczOsSCoMt7GzeyJzuPesQn0nqo7X8OQOYmF/h28+Py3eLLOjbl8AfesLMVp1r1/
      AaiyzPrv3MY+q5Hx9/+ScXYtguKiav9+TrQncOv//ICsQCUvP72dHWnxLJsSoLephqrf/oGS
      6x/ifyanIg1tp6O1n4wVK/n8wgVUvLmRMwcraRuXR8nZXBZ+j5uIM4NkneYiq0810E/NrldY
      czqJW776IBm9B1iz+U3WG8zcNs5Lb9cg3lB0eK4XcdHaEiCiquDvpb3TTdnHV/Hf03vYu24b
      J/c3MvreW7mtvwmlJZWli5dSmp1EgvYkWb//GdtOrKR8tIL7zBH2RzOZnxjbPHtXtFrUUOj8
      f1VVRafTYjGb3qPS34uVsmUP8T9zPHj6Ozi8cTWb7J9gec4g214bYManbyZO76f3ghqRnlMc
      qg2Qf+2nWZ5hxNOwjXXbTpB7+3RSbcNTiCv3CJMkrvnSo1zX+WN+unUL9YvvoyTcT2vNHl58
      9iDBl/+EiEw46OS6GUsIRQH8OOZ9nYcWFGDSRegdEjGYnOQWFZOV3EtXgo2GhgjyBd+mtTod
      gseLR1FQedu6PuTz0NLWjHPm55hXnIVYBJNOtlBV10JvofE9ei5hMKWRPyqPrKBEXZyVFr+M
      ZHZgt5kxWm04k1JJcxpBncyKW5x8au0eVhWNp+7EEdJn3UH6uzhWxADscchVNQxQQDwqQy4P
      A70uHOVXY2UoYbA5MVjjSUzNINPazldePcG1E3fwq7XrUDc9j4iKIstEZRsHBquZnZOCJT6Z
      cVOLSBMF1LRF1L71KjWhsSTxPgUAoLMnUTxhFQtO/ZjHX5nAt64zgDaLefdcxz0fXUimVkBV
      FVREROEYkEBBYTIG7YU28gKCKA5nVBTeaTufnF9KyhP7OdzhJi/OhEEEVY5eJJJ3RVWGdwhU
      hWhU5m1XbQEBEVEazlMrXNqmoqKed8AWyb3lbqbfvo4tHQINJ8ex5GOJsY8nfwOddSrTHd/m
      r5uLuac8TMWhCuqCo7krWUCNhgkrIElaNEKUYCBERFHxhcKEfF48Hh0avRG9JBP0h/D7IOgD
      j0+DPtTGsTN9qLZ08tPt6HFTvfMwQfvdGGZ+je37vna2B25qKvZxYL+Z6z85k/Chtbx+4gza
      UzmYss34mvZxxG/kJq5aWBQRS3w+i5fP5cxTT/Ja2WcpyTQSWL+TLdtTmF9qJ9zfTdiZT17q
      hfX+/ieoULCU+xbu4I9PPE/ifTcyNkFkoLEOOWc8WRnZbN7zJtsLryej9wCHO1ekRaEAACAA
      SURBVIMkz80i0epC5+2hpb2dTFM/nduP0S3/TV/L85isDsL9XTQ2NhKvzyQt3oLWNJ0blv6S
      X/9GJn7WRxhviD393xVBQGOIZ/rKu6j5xdf4+B8NFM6+lQcenE6CAO7qzaypUiibspBJpgoe
      +e5j7KzvGfbnfnEfaw1WJj/0fR7MqeB3X36M42cP+2T2DFbddROjI42sfvQRfto0QFAykzf9
      Xr728VIk8cJ0tCJavRGLVY8oiKRMms8831qe/sNX+WN7AEPmRO78xEcoj7ec9ze+QgFoicss
      IGICNGZSy5ewbEo3ew7UMW3FUpa4X+HVl3/KW34BR8YkblqVRb5oJDEnA6Px3IcLAY3OTnJ2
      ClbNcFdMjgQSk+0YLnrEmpj8wMPoVj/GY7/7P54JGEmfcAOfmOwkffYt3Dz4GC/86JvnF8HX
      zSzCqnMxfeIunnv+1+w0F7F4cQljs51oBQGNKZ70bGU4do2ow+JMIMlkRQekjFvA7OrnWfeX
      H/DamHv44YPzSHXoKZm1AP+6Iyz9XNEHO5XpPxtBwpI5nU//fDqfvuQnW9kyVpWd+99MPv/L
      mXz+XQ+Sw3dfv/ld/l7K1+fedZkOWMkrm0veuXZEO4Xz7+Vb8+/9212OWYO+F25ajtdSd2wt
      a5pn8L//bwmXSRYf4wOEIAhCzBTiPenhyJo1HNbns+oTi2KD/0NI7A0QY8QS8weIMeJ5zymQ
      LMsol8R6jBHjw8RlBRCLChHjw0xsChRjRBMTQIwRTUwAMUY0se8AMa4eqoyv8xgvP/oX9nZo
      yZy4mBW3XUuJ453PWWXoJK/86Wneqh5Al72Az3xxJUWSi4btj/PdF0+cL+concett65gZp4B
      T8NOXn5hPQfrXYjOsaz8/IPMTDUQdTex47kneK2ijbA+nfGLlrNiyUQSz/uMhGne+iSPrfMx
      8/N3Mzc7gXM/XaEAunj9/32Vnlv+ykfGXdkR3o1ox1FWP/8Uq5syuO+BlSwef/XDi0e9fRxe
      /yib9bfwzeVF7+tY4cEG9m14mVc3H6c7YiZ3wZ18bPkMsuNHojeZSjTk4sirL+OZ8mm+VhSh
      6sBhdr15hKQ7J3Ox814/u5/ZwGDZTXxlZRrug0/x+ycO8sNPTiRj9iq+NzYEyPSeOkrNIDic
      BpSOfTz7Rg22SSv573uTEX0eBIsWNRrm6Et/pin3Vj6/LAWtq54DlcfYcjSNldOHDdCUnqNs
      bQatL4iqRrnww9cVCkDG19+DO3T5kn8/Ubpa63CrMumySk9zF67R6SRd5XeUqsoEvYMMRt+f
      U7Hqa2b/uhd4o9rGtV/6GVNSI1TVuzERAa6iAKJeWg68ylNv6Lnt+7fx/iT7T0SFiK+CAz0z
      uPdjpSRLKpZwEPX4aep6JzMl8YKy7UfZrx/PikmjyUk0oSTew/RvPU9FeArTzfGkmoFgO61G
      AyZdCcU2mbpd1VgLy5kxdSxZVhFUFVUQEJAYf9fXGa8zopVEhDQdgxGZjt6z3unKIIe2N5JU
      VIC5Q0V7iS3jVR1eqiITjYQJR2RUBCSdHv3Z8OVyOEQwHEVRQZA0GAyG8575AKrcT0ebH8U4
      k1nTWmjpb6dvcByJiRJqJEggChoUImdDo+sMBnTScJuRcJhwVBk2pxYkdDotGo2IEg4RikSR
      FRA1OoyGd75PhvscIhwZNtvW6HXoNBKCKhMKhogqZ/+uM2DUnTOFC9F+5iiHmyJMuukOFo1y
      IgDTJp0/GcLnQ78P19XrJDh7fdAY0UqgRENEFQFJo4NogLAiICgy0eGLhN5gQIoE8Xq8eDxh
      vB4vfo0WjTScikujHQ7vrkZDBKICep0WUfz3hWNXB/ugeDLJGhEBFafTTlKynf4hGRLfNiNU
      h/qxZ0/CbDIiCAKSNp3xYxRO9gKZw2X6m7tx9bhImZOJJHTQ6kkgPSceixTA5wVBo0WvH87+
      qTMOJ+BTlRADjY30NvVimTgTVBnXyd00WjMYV1hA2966d/T56glAlfF3n2brmud4dU8DPime
      kjnLueOG2RQ5g1S8+Ace23KSPh9Y02bwsf/3WaZe8F6UB3ppH/QSTZvAmKQgR3e00NHTT3Fi
      Ej2bf8Rn9ti5ydLMlhPtBDTpLPvit7h3tI6++oO8/vxLbD/di2p1oLcWs/zO5cwfY6Fm7ZM8
      ubGCTreKvWgpn/3vOym5cHSoUXwdJ9i05kXe2NeAX5vIhGX3cMfSiST0vsUf/riGwy0uZL2d
      0Su+zjdvzD1bz4erv5doMInM9IRL8hPIBDsP8cwfnmZHdQ8hfQLjl6zi/hWTMXadYPubLyAs
      +AE3FkHb3mfZ2mlhwrzb0O78Dk/Ux5Hga+dMfQeDair3Pfw9prU8xjd+vx2PH6o/spOSqXMY
      nxGitgFmrLiXeYUmBvY+yrcOpPKp+5dQlGj+twlAiIYRDfrz1r4IAsFQCLfHy4UukdFwBK1O
      g3jWF0MFVPro6+e8ADqVTPxmG6OdAgIRQkofp17bzZrHOukakrEXzuS2B+9lQZ4VARU5MEjj
      yaMcquwhf9mtTE3VEnXXsK/ZQE52IQVJEm3v0uerJgA12MOp/Ts54irnM7/6JiXBCp7+0ya2
      HUrEOXaQ9Ud0LPzkw8wqTELj7sN3UcsyA90ddLqHcI5NJT91kCTfflp6BvCUJp0tYmXsvd9i
      ZaLKvj9/mScO1XNnhpWjWzdwJm4ZD//5GrL7dvLrl07hjqj073+Rlxriufaj/0OuI0rFU9/j
      F2um8cgtb98I1d/B0b37qYmM5SP/ez/Wrr08u24PRwqTSKlYR3/RSh7+/BgSjRF63Re+rhQU
      WUTU6tFfOttR+tj+2FPU59zDj782BbvnAH/+v9/wZPpv+Xjue1/DqJrE3Ic+yn+lS2z57u28
      Uenipps+yc91CTz6qp57fnE3JUCgaTdPth+gqakFb04Slcc7KBk9nySr6d+6racajCguN1FA
      g4ocjaKVNMQ5rBeV0xqMBDr9yLKCigTIhAKJpJ6zNlSjmNMsJMc5OZfPXSvZKVlyP/fOKMau
      jdJ3+HG+vfoo0780B32ol+rDuzjSlc6ie64hzQDIPhoOnmTQo2ARPTTWuugaGkRsaaLb4STT
      9r4yxb8Txeel3xdGXzqOsgQjOkYxtmATewYH8eizGJexm4PrV9OTVURmQSGTEi5wcJTd9HY0
      0N0ewNTfynGGINBGc10XQxMKhxfCcWnkOI1IQgSz1Qhh8Ps89Pn9FE2dRJ5VgkERUZKACO3N
      zfSe6eaV5gr0GgGEdJKN8kV9lj1D9Lae5sARP61Ne8/a+uej1+tJLZmA9vXtvPRKLXk5eZSU
      TyICwzdE1KIzSijRQVxDYdT4C1Jvhlupb0hn6h1FxBskNJrxzJoWz29qGyH3vZ/NhqQUUm0m
      NBodNsvfLmvMKGZC+jH2tTbSVNvFqaFCyvMSMOv/vc46oj0NU2sFdUMFFFoUujp76eiNkDvx
      ElnGp6DuqKV7VCoJFjuRgdMcaLAw5WzgByU0QHK0heSUc3PKBLLjddRrgwRkBbtOi72wkPS1
      btxKFOHMVvYNjOeuFSVv54wOD9Lv7uH0/ir2798FRBhs7UPoqcd7fyGrpjqBqygAQaPBoBFR
      XP24glHiZRcDbpAS9WiFZGbc/xCj2pqpP3WUNx55gcbP/ZXPTh12lpbd/bS3ttI06Ca882Vq
      gGhgiLamJrpd48n4G21KkgatJNHncROIxqOJRM6aboiYzGaco6/nzjuuY3SaGaJ+3H4RLgjT
      JGi16OOymbRwIqvumEW6SSTsCyDrJaLem/hkWj8tjSc4vv05frLDy09+dvPZvphJSMnCYd3B
      mRPVjE0uJc6g4HaHMGr1WK1+eruGCOXEIYT66e4J4ciyAl5kRUGNhImGw3g8XoJhy7ue29ud
      FBBEAeQgwaCCqhdASqR4XD6Ht3VQsbmXQOlMchId/FvHvwBaczlTC3ax6Y0tdCYrdLX1IiRN
      IS8OIkMdtLlV7PHJxCeNZqbjeQ7u3UFvqoNg8yF6R19HqR5Qo3h6Ouk/00Le4nMCMJBTmsDx
      fbXscw+SaNEQaDuNcfYynEqAXZv3ExydwZE9Z13iNRaSMnKYdMsnmX7LuQ728tZPXkO8/Xpm
      ZDvf7zYoqKpC8+E3eXMAJIOV9IIicnKyOb3tIK+9PkhytJMqdwqjpmcRH25mV2UTYVlCa88g
      Jz0OnXAuq5mCd7CXLo+Omfd9lQfnZaABArXr+NlfqmjtGyLhbxhsG2zxZGZkUHn4DdaGi0gI
      1tHtDpGChswx00k+voeNGxRaUmxokJGTxrO05O3IRZItifycZE5t28trrw6RE69DCZvInVaA
      Wl1Jo1tGI5lIzs4mqU7i7feHBmd2OVPHtbOpYguvBRpIsQoMiSnMnZzLlIVOXty9hQ39aegj
      rZxw5bLkliw0unq0aoSKXeswtZsZrO3Cbb6Ml4GowehMJl7ayY61m/EX5VNSWkB8djkFmtO8
      UeFi6oxU4q3/7nyUApLWStnim+l9fR2HjmpJLZ3Ogrkl2AD/UCdN7QqZhgTizXbGLrsG19qN
      HN5fgzZrKvcvLzu75S0TEXV49KUXHV2XOZEFAZVtOw+xfyCKJXMat83JRBJdaBOScR/bxa5z
      hY0plE9zkJkZd0GcKgOp5UWIFuNFXn1XKAAzRfOX09tZS20taK0JaNPHMmfMTBYpAnuPt9Iq
      ORhzzVSmjkrHEhWJF09zorGXQFTEMXUVS8ecm4urCEYHheVTsJamnO+QMXMsC2dowGrArJ/G
      9YYsdBoRQdSQVDqPa+RENGYnReNn0+c/QktLI95oH0EpHpNehzV/NnfcJLHzWC3NDT1ojCmU
      FFsQtRIZZbOYo3GCNo78iQtYKuzjyJl26ockHKnllGismBNM1DRV0+IOIxoKuOHe2efWZ8O3
      25hM2ayl6K0HOXyyhcYBPYllBej0DkoW38V14haONjYQ1sUz7Y5bmJWvQxtIZdTEuXRXtNMx
      kEv2qJlkOtNIMIFUOIMZwWws+uF3eOqE5cyLt4Cox5E1iQVL+9lX10K73UlOCaCLI9kRxZBV
      QHZCIub/hE+agogxoZhrHyjm2kt+MmVNZH7W2/8XLXnMv+uTzH/HMfQkZJSS8I7Xvg5n0QxW
      FM245O+JzPnI15lz2c5ZKbv2naU+2DnCgkO0ntrH1soOZEUh5BkkmDSWxQtmMSrF9KFNUBfq
      rePIod3sO9lH8oTFLJ5RTpIpZtXyj2I2mz/gLpGSBoM9nkSHD19UxZleTEFZGfmJH97BD8Mp
      XvWmBIqnjmfsmCISYoP/ivlgvwFixHgfxLJExhjxvOcUSKPRIEmxSDgxPrxcNk1qjBgfZmIj
      PMaIJiaAGCOaD/Y2aIz/LFQVVYkSCgaJKAKSRotOr0MjvnNTWlWiZ03GFQRRi8FkQCMwHM07
      HCQQlhn+uqwbNntGJRoJEQpHUFQRrcGAXiMiCAKqqqJEw4RCYWT17XaF6HD5iyOJazCY9WjO
      Tu/flylEyDvIkDeMjIBWb8Jqs2DQ/Ce9VFTkkJehIR/BqIKo0WNxxGHR/Sf18cOCiqpG6Kva
      xKO/f5yDXVrSxy/mznvvYFqO+ZKgwjK+5h08/tun2VbnQps2g09+4zPMSTciuNs59NJP+MbL
      jZi0NkYvWcmqVTdQIHVy8NW/8swbh+gIOpiw8nN8+obRxOlF5EA/JzY/xV9f3kWjV0f+tOu5
      +4GbMFU8y1+fep1T51ItyQGGwtP536e+zMLUYUuEKw6NGOo/zRuPP8r6yl4Cipa47NEsuvk2
      rhmX8Z/xWR5QAr2cfOtZnl53jDZPCFN8IYs+/mVWjrZevvI/QshN12AIvdWO3awbmfNKVSXs
      b+b1n/8e73X/zR0lYY69tZEj3Wnc+MASMi9MHhdu4uWfv0Bw9q0sn5KFZ9/v+c5b+Xzn4Ruw
      9jdQseM1usf/F8vzz1WI0L7tWV5pcTBz0SLK9NU89f1XsX76y6zIMdJ37Al+9aKG2758F6Pj
      FIJ+P4rkxGa+qIME617nd/uTuO/GCSTYdIhXHhrRS+VTP+DplnI+9YvHeOIP3+Wu0gC7X3qe
      PW0B/jOCjQZo2/kkf1g7wNiPfpfHn3qa33zrbkr0kctX/Udp38ejf36ejSeH03OOVKLuY5xm
      KTdPTMBgTmVUeTmF8R009FwyItqOUZ06kzklGVi0OlJm3MP16hGOeVTCYfB79SQ6L6zQS1WL
      mVHFoyhKM6NPmMBty42cOuFGjoZo2HuSvLvvYnyiHo3GiMV26eAHoi6O7u1h9JRsLO87R1ig
      kjc3+Jn/w7uZ4NQCqYyZu5T6ruc4XNHM3KRE2ttdCEY9qqcHl5RKUbYVd30NTX1uwoqIwZ5K
      YVkhTsFPf2cLjQMyRjwMuCPoE7IoyEkn3iTg62mmtrGDoYCCxmrDondSVJ6BPhKgr6WauvYh
      IpKZpIxccjISMJ73Wqxn8+tnSLvui9wwOhW9JIKziHFOUOUw3r4Waus78EQkLInp5ORkEG9S
      6G9oxm9JItlpRy8FaD9ejVIwhjSth5ZTJ/GakogMdOGV9Tgz8siyR2ivqaOzswX1+EF2BYYo
      HZuAt6YNKX8ChU4tajREb/MJ+k2jKE37EJtpuN1I+WMYzv8oYLWZsNrN9AyFIf1tzyHF68aR
      VjY8TwcQHOQXRTjcoxDReult7SFauQdtXCpZORkkmQP4zHYyjVaMZy+ePa8I+c0+VEWlpTWO
      RPUEu3d6kUUjcSlZ5GWnYDnvAKwSaDnICU0hS+LsGC6Yj12ZAHpaaAiUcH/puZMSMBktOI0W
      jrd34urvZf3q7XRLTjJNPqJZC0lPClK1bzeHOgYIRiHoCVJw91d4qMBH1bbneOSYidklGjrr
      G+nUj+KmO1YwP7WfLWvWcrDVgygZMWl6qeybwo9/vgJT8xHeeH0nHZ4IobCKIb2cBcuWMCXL
      NjwFGeykxZVEYb4drfYi52MCg/XsWfMS25ujGLUKUY2T8rnXsXh6AqfXv0Jj0RKunTuOJGmA
      3Y/8gciXf8MtcY1s/N13aBj7ALnB0zS0DWLMmc2Ni/LPCqADr6gS7ghizS7m9FM/5dS8H/OT
      W7MJe5vY+vif6b32e5R8mAWgyHDJh1NZlglHLg4UoCgKkjicouptggRDoLVrMTng6LatNJkS
      KJ48k7mTjCiieHE6K0EgEAiiEiSg+Ok7tI9Tnf2EVQ3GxAKmzVnIjLLEYXNoeZCTR3rILJ1N
      nOPi639lAlAVFEQu+k4mCAiqihKNIqOB0BA9ciqLbriZyQUpmJQeunLyybckEo4Eqd/zKm8d
      aOahggRAwpJSyjV3LyWtawe/fr6S9r4hOno2sLlZz7J7HmRBcQLinu+x8ClQQl7q967mzao4
      rplTiNRfz+HThzmUVc7YLNtw9hdVRUVCkoSLMzIpQfoajrD7tJFrvvQp5ib5OLzmSTYf2Utu
      4aVGvBcjaAwkj1rIfXOupX3PS6zdUY/LchvLr+/lxFANBYtvYPnUHIwoZN04ik2v7qD5+rtw
      dB3nhHs0t49J+HCvD8wWlM5uAmRjRCUYDCNHZOIdF2eJ1JjMeGpdRKMRVHSoBOjrsZGaLGFN
      LOWGzz7MsoifropNbKmt4nTuZIwBH95QgJAKRgECvV3Y0sYjCCac8VbSr/so81L0CKEuDr21
      k5qKM4wqSyQRCLQfo1pOY3yiE8sliayv7H7Ep5Cub6Ku8VxoEZVQ0I8rEiIuLQUHgBRP6eTJ
      jClMxaQRCLZWsnlXBc19A3i9AVRpOIfscC90GKwO7BYdeq0OrXZYl/09negz8yhOtqGTBDSa
      4aeLHI0y0NVBVKdB9nmJGJIZO3kmE/Li3j4hm5MkUy+tzV6ikQvmoHKE0OAQPnsRRdlmNMYk
      0rOSMIqDDF0mzosoabDHJ2DWatFo9ej+5uNDJH3arcwM7mBLrY+OYweRpyyk2PYPX+kPFJK9
      gNTB3exr9hAJDdFU30Rzr5F05yXDLLmAuLZjnG7rIyRHGardxta+LIqsIdwdpzlc2YEvqiKK
      0lnHeQdZ1iEa2ppoc4WIeJvZvaWTlDw7khRHcamBuspWfMpwZBBJq0WrkYbHgjJEzYkBnNnp
      pCRa3pHi6sreALYxLJwe5snnNzH7C0vJ1bioObqHqj4L45ZkYcQFehMm43DoEgBfw0F2uZL5
      3mfuplDqZcPATk5erhlHPIHqTjpcfjLtAu7BYXdGSaMhPiULuyePWStuodQh4B/yEBH1bwvA
      nM/cmU5+s2srB/LimFvkRPG20TqoRR9nxzxUQ02zj9QkH+0tPQQUJ3abniABvL4wciSMq7uW
      FleUlMut6iUNmrAfry9IJCIP70/bSll+bRzfWLceZdDAnM8V8l7JWz/wCKA1FTJz+gHWPv87
      jooi6BIpmbaQLAsE2o5xuEMhPa+MvIRiFoyrYv3GZzi2QURWFLKWriRHC76Il5bDu9i3xUdY
      NZE9fjrFyfHYJo6i9q29vPrnQwiKgmKdyvJCy/9v77zDoyrT/v8502tmMpNMMpPee0iB0DsI
      giKCLmLbtbddt7n9vV7d8rrt3epW/elasKNSpPceSIBQQkgIpPc6JdNnzu+PRAzWFX3Xls91
      8QeZU57znOd+2rm/941UJiVuwnQi39zCM4/5CYoCclMixZOyMQLetlPUeg1kxFoxvodm9DI3
      LKOYeOtd1D67hSf/9yhKQogSNSnTrmZ6mgGh+91naNMKKAzvYNUffkdMQgpKrwQ+pEe0FM2h
      tGota//5W7YbrKQrBxBFkCi1pIyfx7iazTz1vzVEqBWozRlMnj2Tica3NLZGcq5cyRJxA3tX
      PcZemYBKHUnWwlu4MrWUabmvsu0fv2b/xTXAFDKiDPQkRrBp38s8dnIviZkWPKF/Iz9CVDKF
      cYfZtf7/8et9xSy5ezElViMJc5ZgW/MnKrPv4zrbZ2Rv+P8MAYlMQ+rUa1ioraLFKcVoSycn
      NwEN4FcbiTKJaJUSQEny5HnMVZ2moc+D1JzGxPEJyKUiemsuk6fC2cZBJKYEMrPSsahAsBUw
      bYYMU30bjqCOpHHFpOnkCAJorMXMXyDn5NlO3IKWmOR0stNNSIGwJp6SMiXmKP17Jji87O8A
      ohhgoLGGutYBfKIMrdlGckoiURopuPu40DaIxGghPlo/bGXBQRpO19Ji96M0xhKlctInT6Es
      QUlfZyvtARNZqVEo3L2cb7UjM8UQp/Jw4UIDnQNuRDHM4OGn+bv3dl57eCYq/xDdjedo7HLg
      C0tRGSwkJScSY1SNmteJ+AaaqDvXRp87gFxtIiEnjwRt6H12gaT4+5qovdDKoFeGwWZDM9iL
      KrsIm9xJS00tJJWRbAwx1NdOZ6+HiPhMorV+7G2NnG/qwhE0klGcQaxeBa4KfnPrL5F/7198
      Z7Lhiz3//xwiCILw2c4R1nmYZ1a9yZH6bgIhAYUplStuv5ersyI+8zspNav/i7/t7EVXeD3f
      +OpcbF/o+c/nk8++AQScdHf1YXf7CYsCcm0kVqsZtfSz3vxhqKeB9sEwWks8VoPyM2+wX0Y+
      +wYwxhj/h4xliRzjS88Hbk2MieLH+KIzNgKM8aVmzADG+FLzRf86M8Z/ElEk6LPT0dRMn1dA
      Y7RgtVnQvzMtCyAGHHQ0tdLj8iNRR5OSFodOBmI4gHuwi9aOQUS1iVirBYNahiAGcfW209Y1
      gCeswBSfTJxRhSDaaTrZwODoi8s0mGJsxFn0SIMe+rs66Opz4BflRFiTSDRrkY3sJF6mAXho
      rTpGg3P4K6lErsFkTSYlwYzqMzKmONuqaQlGk2KNQv3vKMDEIK6eNppaOhjwhJCqo0nLTiZK
      o+A9FH1jvAuRcMhL27HNvL7jJL1eCWpLBpPmLGJ6QfQ7kkb56Dq1l/XbjtLsCCDITJQsu5Vr
      xkXit7dwbPMm9tX3EdbaKJ4+i6lF6Wic5zm8YxvlZzpwByUYMuex8vopxMpbOfTqqxfdasTA
      EIN+Lbnzv8odi5MYqj/O3j0HqW4bwI+apJkrWDktFd2I1+plGkA/+x7/KRtUs8iNEgkFQ0j0
      qcxcdg1Tk1TYW8/T2C8Sm5xObIT8wy93WQRw9TVzvs6OKa+EhHe4VbQcWMUq52zuXzaLeMWH
      RU4O4eqoYe+WHVS1OAjLFMiUMfjNMUxJ/GQNwGfvoqWtDYklj9SoL1AyPRGCniYO7W4ma8UP
      eSAxQO3B3Rw7XkFb+iJSR38IHLrArv3tJCy4nVsLYhk6/Tp/XruLstzF0FXL6Y54Vn79ZmS1
      uzjUeJrzyfEYq47RIs9l+YN3kqpoYfNfX2ZP0zhuzMnjxkcfHblwGFfbWY4dP4ukIAmVs4nd
      lbX44mdzz82FRCn8ODxS1KPc4y97CiQIUkpX/JhvlQUZaj/JhhdfY+u+PIqScvE6eunqEtFZ
      Uy/38v8GYfyefrpaupGmc0nk5o+Mu4uTe3ZT2atn+oobmZxuJtzXQp9c9Ykvklxd59i/dSPK
      aSlfLAMAgo5amjQz+EZmBApE0tLT6HfX0NInkho/qhfprKPTVsKM5BhUUjnK/IXM3fY3ahwC
      echRGEEulaHQGTEawyhl/TT260hPTyHRrEIhZDB3vok/nnMiZhsuuruLfiddnR30ionMTlTh
      OtPCkCGGrKI8YrRyQE7kO/rjj70GEAQZuohYUmwGDnf14QIkcgWRRhUa1RA1ew7gtOSSmx6L
      Th6m7dCrVOmuYFGulv4Lh9lz+DyOsBJLagGlJXkYnHVUNjoxGZTYG+twWydTlibnwqF9nGqz
      E5CqicmaypyyGCRSLfqIaAxaIOim68Jpjp2so2tIirOuHWfcSCHDdmr37uRwwyCiykBS4XSm
      5EVfTMHq6z7PiSY3MeNmU5xuGVYMWZIZ9mIP01+zm51HW3CFFZiS8phYlk+M1E5DfQuDgoXc
      nFiU7lYqqvqJzkghXt3J7o0t6NNFWmtacYka4otnMD7GSeXOHRyvaUY6CfOQngAAIABJREFU
      9CLe1lxKUvTYuzwYcnPJjjehpIfja8oJT1pAaeynHfP/oyEMuZDGF43Um4Bao0SpktNl90D8
      25qAkHsIvdmEXC4fabtarHFDHO5VMi02i4Ko3exc+yphwUBaQRGJei8Nah1RKi2qkcautcbh
      OdaDKL4VRz2Md7CPrpYu9AUTiRSgze5HtDdw5tA6zgwNEVZZyJ4wieIkE4qRNcDH7uDEcBBH
      XwvnWgeItMagw0/PuQqOVJykwyUwULeHrUfO0D8UgHAr+1/YTr0njLf3JFs3n8Qh06KWuGk4
      foDdFY30d9exf9cbvPpmOY29fqRyKfbqzayp7ECi0qBVSvEMDuIlgL3zDOVbjtDqCTHQeJyd
      O3dztjuISqNCLn3r0UQ6Dq9m81kPap0GebCb41tep6L1bW2wx+XAKVdgMhnRv8NlMNxRzqrn
      d9MSVqGS+mk+som1u2pxBAZpqDlFVU3nsA7Y00rFwVM09rgIuerZ/spWjna6kanUhDoreXP1
      ETqlcpQqFQq5DKVai06jQiF303B4BwermrF7ReiqYvWWauzhS9M5fW54p1+BICAI77EIftdf
      JEgEkXAoiD+sQKtRo5IG8XrceAJvdfKXniURJG+7mAQ99Hc30OhPojh52CM4HBrWjggyOWqN
      FlWoi8MbDnLB4SE8cqmPERYlxNGXH+WXO0SCoRDKmDKump6GltEvzkhucRobNrfSbncRO3CE
      Pf4i7snWYq/cwRu760gpTEUfdtLR7MQsyaBwBuANo0pNZ+LCMhLNGpx7urjQ7iEhPYeiojRs
      pkg0gP3ifZy0nq2l0xHNxBuuZ2K8ippQOU0ugF6qNmzjQE8qhUlaQu5eWtscyMu+wtT4kaRU
      CBAWCYfDhOESt9nuY+s5opjGr69bSKzMTs2eV3h9x2EaS2d+SA2psRVMZZFVx+BROyf/0Yk/
      8moKpkylcdCOctoSrh8fCeIQksJjrGpooGsgg8CJg7hy51Bo/nz1/gCiTk+opRUXSegQcQ95
      8Q75MBpUlxwn1epw1PQR8McjahWIuGhtVhMzb4iBhmOcETNZdmU2subD7K67QG13Hhq3E4d3
      CK8IGgFcrc0oY0pHLEPE57LTVtuEftz1mEdeoC5Cjt6WS1LxLPKiZIjeHrb97Snq+qaQZhge
      kS5/CiQIWHMnUSA9wPo93ZTOnkS+TYOAc/RBGLLHkbZmHefbBlFd2I9k/C2kqwT6HQ4CcUXM
      mlPEsL2qMFkTMXqOgN5KRk7G8HaVABHjruUe70nOt9Sx7eXtBE3z+eq9ZaPu48PtDqBQWDFF
      apFKhuOaDnc8Lvr7RFLKZjMzc/hFSBQaYlLfHpK1BiPGgI+enj4cwUTMo2rF2d+LNC6ZOI0U
      UGG0WtANNeP80PAPKvQRKmQSAYlcgYz3ScwtaEmZVIr1+AlaOqupOQjjl2UQIf+MbKd9BGQR
      OaT6XmFHTR4Lk4PU152jYcDE7Kh3jADWbBLat3O0wUKk3sbQifVs82fzoB78QS+ObjvecAiF
      14nT4cAQMpNqcbGz4TzmRCvpikY2b7GTukI//I7DfpwDddR6MrkyVX9xVIhItCKtq6WlvpVk
      YyJKXz99fgMJailvDUqXvwhGgq1gFldkphCpeY1N295gr/VWZqe94zhtJiVZftY17Kd7h4rJ
      309BJZWiSUwidrAFr6mA+Tl6/AMD2H0hwh5AoUAhlw9HCgN6+4aIzZ9EenGYnnPrePIv+6lf
      WcbbWUe1RBhkuC+00NHlJFURZHDQSyAMEENqhpJNbU4SVswhUR3EOdCDPRzkLaG2PCabkswK
      1p/YTXlSDLPzLITa6+hQpmBJzSHw7C4qlmZSpLTTeOw0ndEF2CKgwevBE3bj9jlxnG+gfcBB
      xofUm1QiJRwMYR8cxBsyoJQIKKKLmJS+l927N1IvK+a7iQZk7zFt+EwjgFydwJR52bz8wiP8
      wCknMrmEuVdNxKYEV/0+djaEScsvI8+azJx5qby25h/8+BkPElMmC1dcjUWpxZc6geJzb/LE
      LzcQ1CRSPGMu+XF6jFGTSNv8Ji/9dgOOgI7kKVexInE4J3LA66ap4iiaovswj1rkSg1pFOcN
      sHvH8/zP6n4CCiNZU68lx6RD+nENYBgJCmMiE+YvJRR6ja3PPY/8tmWYRh8iqMkpK+SVP6/j
      mG4ev7NpkEikRGQsZMWMf/LK777LOkGC1pzBtCuXMiXq3XcJ9Z9g9erD1Pa5EWUyYqfeTI4e
      vBeP0JAybjyZF17j1V9+m5ci07CFu/BkDP9WdN2dTHn8ZX7xzTcRJSqi0opZeP3NJI6kIEZh
      pGD+UkLCRjY+/TNed4RRmvO57v5bSS6+mftqH+PpH9+PNyTHlFLC4pVziNeLeGJk7HrpH/xX
      RSKFeZH4MLyn6mg0ekscWfFGVj3/CA8cmMaN11/L3FwzeZPy2PC7tZjnfAWzRsnnrf2DgCBR
      EjtuATfHFuHwSVDpIzFHGVAA0rgCpphArVUAUszZ01l+WzaDniASVSQ2qxGpAGpzKpOvvpGM
      aW7Cch2Rpkj0KgkSZRJlC1aQWubEF1ZgsMRgVg335FKlnqy5N5Guf0fEDYkaS0YpC8zJTHT5
      CEtUGC0WIlXSi8ddZoaYIEN9fQR1MRiUw+uBgMeFyyOiitAjCwzhDUpQanQoZUDQzcCAC59U
      S5RRg1QCiCIBtwO7y0tQBIlUgUanRy0N4PKGUKg0aEYExUGfE6fDjS8YBokUpdaIQScj7PMw
      NBRCaYhAKQTwDrlwuX2EBAUKaRBRrsegVSETggzZ7bh8AcJIkClU6PQRqEd/oRTDBLxDOF1u
      /CERQaoiwqhHJZMQdA8y6PIN601VWiL0WhQSkYDPjdPhwi/KUKnlhEMS1Fo1Kqmfwb4Aqig9
      KkEg7B/C7hTRRelRhEP4PC6cLg9BqQq9Xo9WKTB05nV+/kQrc+6/iVnpUSg+fxbwuUOr1X6w
      HmDMG/Q/QSObfv9PXjk0SOkdD3LjrCwiVZIxAc1/gDED+Ewg8s438F7bhmN88nz+s0R+IRA+
      h/P9Lw4faADC+3zEGGOMLwpjmuAxvrSMaYLH+NIzZgBjfKkZM4AxvtSM7QKN8ckhhvENNnFk
      127qBqSYUwoomzgOm/bd/WzY3ULFzgOc7nAhi8rjikWTsSoBwvgcXVRXHOZ4u4Ts0vEU59rQ
      EMbTXcuRQ1Wc7x5C0CUx+cqZZBkUI7toIYb6GqjccxxvQhkzJsRirznKkYrTdHpH3ViSxMwV
      M8jQDyt0LtsAPG0VbNpcTrM9iNwQT874KUwqiEPzZRtTwj56zlVx8PAxGnp9yEwZzLpyBtkW
      /UVfpi8HIqGAi7M7X6e8y4hVF6K9poJ9YR2L52Wgu+RYJzXbt1LZFkYXocHfuIMXtkbxjasz
      kA71c65iK/vOBIg2xxDy+wkC4f5adu44RItDQKfTIBG9eEeFvQ97nbRXb2NdeSfWzlgmTLAi
      lSvR6HTo3mrlzrNsPyln4tIwjKSJuzwD8J1lzV9e4UL6JArSZQSGnHSeOkZDShx5n9MY+D3V
      Oyhvl5JTNJn06H9XqRWkr+4g69bvo0cVT1pqHFKvm35ngGAUyD7MMegjMNR9geOVBwhlXMvM
      DN2Hn/CfRoTAUA0HqjTMfGAlJeYQTRV7OVx3lAZ7BgWGUcf2VbO7QUXRwvlMyDDjbdnL43/b
      zrkFKcT1NXP2+AAZV9/MgpQIgmGQEqT9VCWtoSgmXDmbwngtgt9DQDri+SYGcPTUcaxGJH/6
      OCQtAAqi00uZl146ctMw7btW4cucQJJO9TFzhPWeZuchuPb7V7PQKCMwNMhAnwv551jh5+o4
      y8kaGea0Cf++ATiaqNxbSbM0g8XLFlNk1YF7ELeg5z0CIXws/M5e6k8fJmBc9Nk0ACBsb6Q/
      dhJFsRpkiMQnxdM+eIbO/jAFhlFTg54mvIl5pMRGIpdIkcVPZHr8Pi70+dC7OunWFLEyPQqp
      9C1tRg8X2uQkpWSQZtMjlwAq7UjjFQm6XTQcPkAwfyGl6iaqWt6jcEN17K1XU3iFBa1S+jEN
      QGMmSlXP/q1nGL+0AIvORKzOBAToqT3M5jVrOdLkICyPpeSq61kyLYdotRRP8z5eenYth1tc
      aKJzufaOW7A2bmRNs4XpiR3sPx2idOEVxLbs483NB7jgCCIzZrP4tpuYmR6FquZ5HnhxgGJL
      J6fqHOjj8inK19FQfogmn5VJi65l8cwcDM6zbH7tDbZXNeGVxjL55nu5ocRCoGkTf/nLBawT
      /VQfuIDXmMnspUvI8R3j1Zc2sa9D4FRlBc8UX8MPbppDEmd47qnXqGwcRBaZxdxbbmNRrvGi
      x6e7p4VzvR6iCvLJsUagkAA604jUMkTnwWf426tH6fYpsBbOY+XKhWQq+zhRcYwGTxLzrshB
      56hh3aYmYoqKKY5u4uk/VqEvDlJ3oIZOr4qcq+9mZaGTN//+B9ZUdxE+9j0qt07gyvFxuJr6
      iZg0izmlyehoZuOvXsF39Z0syTEg/TRCWbiHkESbR55fQKGQIwoi/YMuRieDCHjc6AwRSGWy
      kYaowGDso6o9REG4m9bmXp742Xq6pGnMveoaZhcFcASHaNr2Mgfe6KPXKWLIns0tt15FbqQU
      V/NuDnrKuK7EymBN03sULEx31TECyXnYzIZLpqaXZwCGMu5/5Cs8ueoxvvOmBFvJfL5y/dWM
      j5cg0cdSOPsGSiK0hOp389yhcpISLcyMbeKp36yis/QG7r/OijTgQCUEcHVWs33bCSTTS5m8
      YBq5sSrsoTzmrshjsVZGx56neWFLJeNiZxPraOZEncjVK26iZEITe197jpP9d3HdLTdSv2sz
      1ceO0ZQXiXPjHjojSlh537Vo+w7y1N+fJ+l/H6B4qIPammbibrqVWzP6OblrL8f31JJ7+wzm
      zanGfk7GhOmLKMyIxxrRybqf/4uahKXc/WA83vrNvPjYX9E+/BPmxA5Xg9/rwS2TYTFG8M51
      Xqh+DY/+8ywld93HDXoXp7a+wuNPa/n+XanYe7toc5oIAgSdtLd2IU/zETb001BdQ+yU5Sy/
      Yy6eUy/w1xf2MGvWCqZdcx298g2Eiu/l2rI4zNpB9p85TO2pJAozk9D1HmVji5KVZtmn51oh
      kyP635aaiqKIQi5Ho740NrxUJiMQDCKGRd5O4GYgQieCXUqENY/5c+cTbDtF1en9VBgLEEUV
      MdnTmVYYh0oI0n/6TZ544xSP3mxh3/ouim9bhEXtvTQ+0Fv4z3OwVkHqJAuRGtknkCRPoiV+
      /FK+lTaL/s5zHNzwGk//uR/xh3eQ6u7k+OYX2VLVinPIyYBuGlOXBnDXVrJXN4VHriojK0oD
      YpDw0ADVISmR0SlMv/ZqiqLUyEUXfZ2nWL96A1UtDtzOAQaLigiNZGqRRCSQk5eFqVtCrUlC
      MC6LvCwtkguVNJ514+1soKr6AG+eeJ3VKgWSkJuB/ljye8MUI0GutJJRmEt2oBN7zSnqGvxI
      DdFYLGYMvTLikjPIStBC80F2d6Rxzf0TybNFEIjVcqHyO5Sf6mZO7LCQQCKVIg0G8fn8XJoH
      EZqP7qIz/zqum5iLVupFzwVq/3SY2r4Pi5QRSXJuDlnxkXgDCSifdxFU6omyJRAdqSEQn0ZW
      shnEGCZOTObgwfM0dxYSqDqAomQ5WRGqT899xWAkVFvPAGlEIuKwuxjss2PMu7SZSfQGBo50
      4CtJQNSrEcU+ak4JxCxVoJAnYlNCcm4BETYprXvrsHdKiNVocCZbScrOwiBAKLmfHd8/R1v2
      Lh5btwHJ3g3ICRPw+/D5Ijjh6eb2u5aTFwEDJ47hsiVTaI1G+Y6O6vIVYTI1higVBrMJjXyI
      zr+9wdHyYnpb9lOnm8+P/z6L5I5t/OzVThBBDPjxy6PQqWQjPkby4SyTcjV6azJJ0RrkAnjq
      DvHGvgbMC77NX6dn4t7ze75/SnFRDi1IpEilIykzJZLhRiiRIJEICIIIoSABWR5f+f53WDQp
      DZ0AIEGhUeE/AwJSZHIpkqAwfM77PWDIjx8VWs1IeeVa1Iog/sDbmmd9ZBQWMURDSzs9/gzi
      R8l4g34fgkaLRjpcTrlGjTzoJxD+sEofLt/F53v/F0DMhEkU7NhGW2s51QfNTL0zGd0oscd/
      Grm+lBLlo7xwoIjbx/k5WVXF2YEMboh5R4kSx1PU+QRbT8WwYloKgzsfZ41mGn/RKZEMxRIt
      eZ0NRxJZqG5kyOXFVpBMrraaJyqqUZhsTExU0X2onI7ceSRNWMprG+8dubCD+pNHqKzQseie
      mcSogFArR85rScu2YjO+u24ub9Py2DP85IntnOnsxzHQRdvZU7QE4kixRRAQQabRoJYN0dTU
      ysCAGwB1bjFlDWt5fFMtPXY7vR1nae1jeAQUhIvBp4JBPwG5DK1ag8zdRX1DBx7vR3DJtiST
      G93NiT1HqW8fIhT00XfhFOf7PzjKglKtxTfYT1tHB71OD8G4AqaoD7N63Rl6BwboOP4iW89k
      Mr4w9uI5giWfqVOTCFWvZ/2247T29dN6Yh8VDYNYi6ah2PEKr9f1MdDZxrH1O2jMKCUnWkDi
      dePs7aS9t43qo1XUtfZ8aIZ5mVyOJCzS0dhAp30Irz+IRJ3LtIk+6ja9xu6oIkpjjSg/rd5f
      AJk6hpm3rMD77G1cs/ybvHrezPyVM4mRgP3kGh5/4TXKG4dAYmXRvVcSXv8Lrl94Fd/YEseP
      HpqHThDQxKQwce507K8/wt1/P44ybSZTU5VoChezPMfH5kdvY/HiZXxvo5X7b8xDrhgWFV38
      p9Oj1+vQqBXIBHBVH6XfYMBgs71n3VzeCJA8gdJ9z/HoN/6EM6AgKn0qS7/xTeZly2n2pnHy
      ySf4UXk8k/Oj0UXHoFFIESJn8OBPPTz+2G+5a5UDXWwxtz70DRI0BswG9UVL1KcXMyOhmlWP
      P8zOmCKmpEQSHRUxHMtRaSDWPLz6F6QytIYoIlRSQECujiDCIEcpT2DWjTcw8PyLPPFf6xkM
      KYjNXMi9PypBUOgwW4ThRZogRaHVYzSqkQG2/KlMrl7Fy396iJfybuSX9yzmxp/cSd/v/8Z9
      r/Ujjy5kyfd+yJWjAzwJClJnrOA22QZeeOX3PPjEEMq4Kdz+7RzkeTfxy/v/zP/89G6e9SpJ
      LLuGb3x9AVaVj0BGLOLu53j4m1sonZqFyWbDoJQhSNUYLQY00mFBjCDXYbKAAtBbEplQWsjR
      Zx7lvvIybv7q11heGkNS0XiENefIn5RAhFb1KbpWCwiCFH3SdL77z+l89x2/GgqXcnfh2/+X
      msu45/eruOddl1FgSpvGA7+ZxgOX/KAiYerN/GLqzR9QhgjSx80jfdzbf9EVXsPKwvc/Y8wb
      9HOLD3tXF60ntvLCPoEFt13DpNQoPn/BVD49BEEYE8R8funnzI61bKy0U3DdjYyLN481/stg
      bAQY40vLmB5gjC89HzgFCoVChMP/Rqb0Mcb4nPKhBjAWFWKMLzJjU6AxvtSMGcAYX2rGDGCM
      LzVj3wHG+OQQQ7i7TrN+1fMc7pARXzSbq5fMJcPwHpJIRw1vPruavfUDKBKmc8d915ImddB4
      4AV+v+bMxeMiMqey5OorSQ+cYsfmXVRe6MUjqIgrXc4dy4sxK2WIQS+dpzbx6hv7aXDJSRg3
      k8XXXEm2MYSnv5nqQwfYc0HNrKWzKUwwMTpL0mUbgPPcJp58cgNnenyoLFlMWrCEq2dkov84
      Y0pPNevfeJU3yptHSqfGlj2PFTfPJyda96lLDL0D7Rxc9zgduQ9y0wTTh5/wUQg7qN26mpe2
      HaFlEHQps3ngoRVkqD781M8GIkG/nePrX6M783ruWBDk/Mkz7NtWRdR1JURecmw/5a9uoSth
      OrfOs+CqWsM/X0ji57cXElu8hG8kzAVC9J09wQWXArVBpL9eSlzRfHLmGZGH3Zzb8QovVyRz
      7xQT7tY9vLS6haxr72CBXgSJkkgJ0HmaXQdrcERYiVE5EIL+d2WmuTwD8Fbw5M/XI73t2zyc
      pcLVXs+52hPUDWZS+nHaRdBDvy+C3AW3ce2MdFSeZrY/8zSv7UzmwSWFmDSfoMbwMgiH/Az2
      NNPjCkJfHVte30q1bjw3rpxE7Ief/gF4qd/0JH/f7WX6sge5PUXP0Pkz2O3AJ2oAQ9TtXM2h
      diPjF1xDXvQneGkRAkMnONJWxHW3lBCnCBMtCXPk1BnO95YwfnTY+44qDok5XF1WSnqsjmCc
      nAu/XMcJfwllkTYyIgFfO/ZuE8aIdDIj9EgKikkURjxlCZPQt4tHB3yEg0Gayncgmf0Qc4uj
      UUpELn7b1WQx84pURJmbyoHj79mBXp4BdF7gdE88t09PxyYFMcZKamGYT8SxQqJAazQTY7Wi
      FS0Upb1AtdtJKPwZ+2AdmcbsW+5khiDlYytB28p5Y6eT/CUrmDMhA6NcQIyJJfyJj3hh/B4n
      Dqcc//9BCjJxsJtgejFxKikSJERFRxIT002/IwxRo6YGg71oEosw6DQIgoBck0xpbpC6PmAk
      seFgcycDPX1ETZ6LQiJBUI7UcsBD+9mdvLhdxRX3RII4SGOthUnLolFJBS6JtSpRodWpAP/7
      prq9vCYbk0F+1MusemwH0beUYdMqUSoVyCQ+2k/s5JV/Pcee84MEpTGM/8qd3HZVGQkRZ/jH
      TU/imJlIx+6DnHNKSJl+Hz96aC5xo6dNYoiA14PLOYijeR+bK7TkrUxBo5ISctfx6v88ykvH
      exAjE5hy7QPce20avYdeZ/OhNoxJSTTsriZ22Q3k9q9ibYOJyL5zVJ1txanO4YFf/5YFMXZO
      b/gjv3+5ih5PGEPqZJbf9DWuKtNwctWf2B8sIFPawKbNHhb9+j7mqJt56U9/Zs3RHsJKI6Yo
      BcWlQF8NG9bu5LxpBncvM7DvNy9yyjs8QtQ2dCFN+QqPPLqSXFWA89v/ym+ePEB7QElC8QJW
      3no901IiLmYp6W06T1tEDBPjzOjlw6mdBKkcQRTx29s58NLv+H+b63FIzRTOXc4tKxaQ6TzA
      n3Z2kz9hNvPzo+Hk09yyw8Yf7pyFoWc1X7+viqzrpJzYdBq7JoW5t9zEhOARnv3jGmrDAm+u
      XYVtzp3cFHuaVdU2vvWdGyi06PA1r+bhHzWx/InvMlH70ZqF4PMh0WlHdlaG9Qxev5/BQQdg
      vHic3+dDpVIOp7ECRAQk0i46u7loAC2BeFxKHbMsb4WKH+DQU3/gyQ0VuJKXct+91zHBooZw
      F/2ebk49+gC/O96EVx5N/uzl3HrDQrLN8g/VRlyeAahLeOB/f8Azf3uOn379GSIyJ7Fk+XXM
      yjeituWx+J6fcZ1Bg792C3/dfpzT41KJzQPwE7Jdyc+e+hah9jX88Se7Od09l7jR8wd7DZu2
      7Gbv8zIEjY2pi65jWoYZlcTP8Sd+xpHMh3js62aGWirZ+NqTrEv7b6YAjvOnaFRls+x7DzEh
      2UDdq+APRTP7gbt4KE7Ctp+vYHNlOwuWRGEpWMYPy+7GSC/Ht2zl1N5DXMidC0BvxQ4GJq3k
      u4+NJ9nkZ+fPf8k+y4M8vXYqir461v/r13S+Z6UECZnH89X7fki6qpI/3PEKR5uXk6JYz1+f
      c3L1b1ex0DxA+esvsPXFjUR/+wZyR9KUhYIBwmoNOrnsolEMX9JLx6FVvFiXx3ef/BVZntOs
      fWEda9ebuG3GB78iQS4ndf5D3L/Sx+kNL7G2vJ3oh7/G/QjsajYx7dobKY4F7PHUHHqdyiYH
      2VFqOg4dpHvWVxn/ERs/gKhSEXY4CQFSRMKhEEq5nEjjpaFCFCoVnk4PoXAYESkQJui3YH2r
      HYghNDYj0caoUcEFIpl8+8+Y/DUfru7z7H7lKV6cdic350lR66KY8rX/5jtWDcJQE/u376N8
      x0nivlLKhwUpuexJizxmInc8MoGbBho5tPYZ1v3rGRTfvofM/mq2rd3KiTYHAbedTmkJs0Vx
      ZPGhJj4pAa1SwB0RwXvWsTGfJV9/kFsWZKNwtrH3X//L39YK/OCGaE5XDVDv/RMP7xmuFWV0
      CrawBwCpNZ+Zs+cwMUV/cW9XHWMjLkKDTKbAoAMQCQcHaT2xlVd21zPg9TBkDxFXlsxbHh+y
      zFlcP388KWYVAmc4fczC/N9PJFIu4JYpUbxv4nsl0TGxGPUq5Cod2pHezV1fQ8u4+cxP0aNA
      Tsq4LBI6amjthNwRdaRSrUXhtNPn8RMQQTHy0sOhIG3NFzBNXUGJSQEkkpOTSN/pVrqdlvcr
      CCAgk0aTmByJyteLUqN9/6WEoYgr5qzlT4fOsjTHx6EKJwvuzf/QVE/veVdDLMqGkzS60khR
      i3R39dHZ7SW+6B07I5EW/PvO02e3Eq3TE3Cc40idmnE3jDy3vx8brcTaiof/EPLh9oYQZAqU
      CgW6mEzmLUzmR5vPIeSVkJkMFzxhBEFApjVji7Zib3NwqRT/vbk8A3B20TCkwhqtR2W0kVM2
      nqOnd9J67hzeC6fpsS7mx9+fjuX8Bn7xWtdl3QIkyLUWUhKj6DnTjSdgRafXMv4rv+C7821o
      JGECAR9BQnRUgE6vxRCh/5APGyFcg2fZu7mVom/+lutzXBxd8wblDW8fYTJFola9FTdGhVrj
      ZXDQTUiMIBz0EQi8z6XfB6lGh8rZS587iE3hx+McwiNqUI1aOBgTMkkNb+RMXSO58ZFYtVKC
      Q3bcohyVSoN/oBd7IBFdyIPL5SWkjEIhA0JBgqEQoaAXl2Poom76/RmWgYZCAQLBIGFRioCc
      rBlXYP3VMY6fOM8x2TU8lHEZzV8AhbaQiUl72Lj5IBPjQ7Sca8JjKCXVBEFXD91DoI0wYYgZ
      xxTV8xwsl+JINuOu3Ulj9pXcqATEEEPdnQzUnSdx7ogBeLo4e7KBPp+CyAglUrx0nWggKqUU
      iUxK8vgs9mzawsEpaegC/TR09qNKmILJ1UtTRwf9rn4aWpvQaRUzx7qcAAAQsUlEQVT4Bvqx
      padj1Q07j1+eAbQeZvVeD1npFozSAL0NtfhiislPjcLRo4bWZqqPVdDY0sCA4yNWpn+Q1toT
      HNL0oQzaqTnpJDndhl6RQOm8HLZuW8VG6SRiVCIhQY4pKZN/P0qOgFSqwxAhoaf+OEfsQ5xr
      6mKI9+tNEyiZpeX5HZvZ7YwDTzcdjo/2ONrsqUx9cwOvb9JToHfTXNMBCZNJixl1UGwRC+dV
      s/rgHrYG+0mJUuPvH8Q85UqS8qdgXL2ddTtcWP0d1LT4MJVkYzUNEuHppq6qHJXdSLC2FY8/
      +UNKoyDCFI1wop6qg7tgXC7ZSbFExJRyZcYbPLvKT+zK67B+tEccQUCq0FO4aBkdr67mzVMK
      4gpmcuXcfIzAUM95TjaHSckuwaA2Mn7pFQy8so7Na+woUqZz142FI5sJATxh6A5lkfjWpVUm
      orV11Bwr50CXA7+gwpp3BXfMS0EikaJPm8eS8et4Y8MaBiQmsibOZtaEBEIdFVTu2srRxqHh
      63Q3cZRoZtwej0X7cQwgoZjpcbspP3YIT0iGPjabK1bOpSheRm+whJ7Bg5w5fo6sxGTGlxmJ
      N2qQYCJrRhnKSDkCAnKljfwZxcSNjpihNpOeZqXtdAMV+xpAoiAi5QpuuqIAg0aBaf493Opb
      x+HjBzkvqIhKyScmS4Pekkp2rhvLqDmVMbmEEq8NjWJ4TLDkz6csSo/WkMu0qwrZcLySU+54
      YjNKiZXbMCoUaNLGkStaibioLNFTuvxOWlZv5Uh5G3pLCoklU9HFqkBlJDEjB5XWhBw18fn5
      aKPNqKUAJrJnlqEyypBHT2TFbQ7e2HKc8oCCmIxJXDWzjLhLal5J6swV3KDezfaKUxyqBY21
      hGVGOZGGhax0rmNLxWHaJQZSx89j5qR09LJ+JuU3s/foOY57k5icNZE5cYmo5BIkuhQmzjEP
      Z+uUKIlMyKQwpEOPAnP2RCb2eCmvPsZxjYn4WAsRKg1pWbG0HIIbx40O4fYREaSoLXksfSCP
      pe/4SZsyiYVv57VFos9gwR3fZcG7rqHCklSAJWnU32Q6EsbN46Zx8977tnItyVNW8u0p7/gh
      aQLL757A8g8q8liOsC857mYO7zvOmRNVtKZey/eWFaD6NIJqfQqM5QgbA8QgXrcXRdpcbr0i
      59OLKvEpMTYCjPGlRavVjkkix/hy84FTIJlMhkQyZiNjfHEZiwoxxpeWsagQY3zpGTOAMb7U
      jBnAGF9qLvs7gBjy4/H6CYVFBIkUmVyJQi59X7/rf4twEJ/Phz844tMiSJErlShkEiT/yf1p
      MUww4MPnDxIWQZAqUKuVl3pqjvEORMRwkIH6nfzjN39kV7Oc1CnXcvtdNzIhTvmOnjaMt30/
      T/zq77xZ3YsiZSE//tWDTIqSg6OF8pd/zUPPnUYuMVB01a3cffcy0sO1bH7uSV7ZXEV7IIKC
      xXfx7dvnkKST4e6sYs3f/8KL5Y34VAmULbmZu26Yi81dy9Y3nuWVTUdpGwR1Qhlfe+h+Fudb
      R7QDl7sIDntp2vMsf35mGxf6AyijMpl85XWsXFqG5X29Jf8N2g7z5OP/4NkDHejUSpQ6G6VX
      38DKBWUkmVRIhRDO3h786mjM2v+rb3hh/PYm9r30NC/uOUm3S4IhfT4P/exexn3CqbmCHidD
      ARGlWodK/jkfjEWRgLuVjX/4Pd3zf8QteQGObt3EsZ5klt85D9tol7BgC2t++yyDU69n+eQk
      7Hv/xCN7C/jtw1ei6bvA8T1r6Sz6NkvT3zrBScXzL3BancHs+dOIVwxw5PGfsjHxJ/z3wigq
      n36Yc4X3snR8Aoq+arbsOkR/1EK+kuWl0R7AkJiJTQuO6pd5ZJ2Wb92/kGSzBsllL4Kd+/jr
      Lw6R870neXXNq/zjkZspUXTR4fq4tQhEFrL827/jpbWreeInixD2PcFja6vodYcQ6WX7n/6L
      Jw/1fQI3eh/8vRx+4Z+82GDh1l88xetrXuKPd41D5v3wUz8qbeUv8venn+NIk/uTv/inQMB5
      nJPBRVw/0YJKZyO/sJDMyGbqu97Rx7Yc43TsdObkJaKTK7HNvI0lgcMcc4kE/OAZUhBtHn2C
      E4dowhZtI1ItQyo3UTB9IhFhP1K5gol3/g9fnZyMQS5BERlFXHIyFgnoErPIL8gnwSBHEEMI
      lnjSdWokgnBRG3x53ajDzoAYSWREmKAow5hYyPTEQiCMz9lPZ1sb/e4goqAi0haPLSoCpdRF
      6+l2QpFKPL0DDIUk6KISSUmMfO+oxhI55vxF3H59LQ+9XEHDojyiNEYm3fQNxttiQAzhdfXS
      1tTOoA+UEVHYbLFEauWEvYN0tbXTbfcQlqjRKmVEJKUTq4aAs4uGpk6G/KDQm7HG2zCNyhvl
      b9jH+pNq5t51DeOTI5FJwJwzGTMi4aAfe1cjLd1DBAUlhuhYbDEm1KKL9s4hlAYjxggVUl8f
      9c0BrCkWVP4uztW5UJtFHL0ugnId0bY4jAzS3NxOT2eI+jNVaEMppEUGae+B2Iw4IhVSwkEH
      7bVdKFMzsKg/B/MvxyCSjLwR7ZdAhEFLRKSOHnsAbG+/5bDTQWRcLgqlYrjehUgyc0Ic6wkT
      kLrp63Agbaiiui8aq81CpCaW/CwFuxtPUV7uwCh301bppmhxDIIgIJFIEcUQflc/zTU19PUH
      iSm2ARBwdNHc1kpnRxdNNfVETV2KWf/2lOzyDMBSwNzJ29n15Gok0zKJj00gJSWBKG2I/pZq
      9qzfQnWvj5AngDxvATcvm0VOTD2vP/xXBq4sQ9fcQHN/NwHNPB782Uqy31etISU2J5+E/r00
      OgKUxNjZ/OtvMXDvLr6R30vNnrVsPFjPgC8EujjK5izmiok2+iu2smZbJa2uEAqNGs/5Pop+
      +gduSRykav0zvFLZgyCARBNN7oyruGpmPuYR//zBjjb6o2JJMWkvySclhkM4W46z9sXVnOgT
      EEQJ+vh85l61iEnRDWxYXY11ykzmTkxG3X+Iv/65j7sfXUFS22Z+/Z2TFN2VwuCx83S6ZKTM
      vJ5Fmf1UVp7iXKtIX7+T6rYF3JHXyT//Wcu0h7/PtemR+Dr28I9fVzLnNw8zV/3pBgT4twiF
      EOSj58ACwWAIr88Ho7q5UCg0nObqEsGiC9cQSC0iotDLgRdf4pgpkeLps5k1IRNtQj7JrVvY
      trWCfp+StOIZzFQJCIiI4RCe/kZOVp2jYyBM2qx5FEYPl8PXdZb9W7ZT1a2lqKyUHJMGmcDH
      HAGUWVz30DfRrdnCsV2bOCzRkT5+IVcvKEBpsJBeNBVzIIyn6TBvnDzN+anFpMcAiCgT53DP
      rckE2tfwu28d4cLgSrI/KKSCAAJevN7w26UmgL3jJNvfOIh/0mKmR3k5X3GY4+UVZFizOLLt
      FIGsa/juNWXYVMf4zZInEcJhfJ2HeX1jH5P+679Zmhrm7I5XeOPgJo5lZDA/ZdgCwuEwokyG
      XLj09Yh+N80Vaznon8L3HllCvKea9c+v49DuE6Re88G6I6lCR9ac25hzlYOja17mzZp21Dcs
      Y5m9Fd+pAFMWfZUZ6ToIt7No1yE2lzezMNlAf+U+uvKXUhr7OWj8ABot4a5ufCSiRMTn8yOG
      RUzGS7V/co0G1wUHwWAQETkiXgb6IrHFSomwFHD9D37HMr+L9qNb2FV/gtOxeiSnj9FvnMLd
      P7obs8zJ+U1PsmpvIg8vzyDkbKDySDUD0lSmLSlkdJpnXcZMvvqt6dzotdNRvYu1Gw9jvHUO
      6cZhP/zLXnnJInNY/LUH+cEPv86yEjVnt7zGwbpu2s8cY9+hSk6craOpcwCPL0T44jpbSXRM
      NGq5gFT7ATK9UTg72+nXWkk0K97eYRKD+IbaaWv14+pppv5CN6I5hZz8NCKdPbQLFlKzEzDr
      5Agy6cVwGKGeVjq14yjJMSBTRhKTlIZF10dP39tzcJ3RhKa/lzaXl8CoqWsoFKS3pxtDQTEZ
      ehlqi5Xk+CgUfb0MfuD6QEAqjSQ6Ro9CLkWhUr1/IguJjUnXjGfoUDkN7jYqDvQzYcG4UXLy
      zzYSQyrRPQepaB0i6HfS3NBMc7ccq+kdzcySiq7lJOc6+vCHgjgb97O700p6hB9n9zlOnu3C
      E5agUqmRyyWEA310OILIJBrUUgkSiRqTRU1Ha9+wbPTYLs4rilkwf3Tj92Pv7aKzow93QESm
      MmBJTUHZ2kSP389b2rnLGwHaj7O9M5LSvASMagMxNgtqsQl3Xzfn6xpxWKZyz9cmoz35Gs2r
      L3PBGg7i6j7Ltk2VSMYtIVWvQiq8JceSIVdbiE2IxjL7Bm6YaEXhd+D0gNxxEkPQSW/XIEN+
      G1KvE1c4jBmQRFqI8p7ibIOLpLgwfR2t9LsNJBrfNkVdSinjjU9RcfAo6ZbZZEUp8XQ2MiCP
      wmg04aqvpWUoEYuvl/auQQKGNPRKwOfB4w8QCDgZbGzHHpC+KwjTO5FIpQS8TtxeH4GwBpkg
      YMhbwHztr9mxXaAtPJcHcj+bWeHfhQBybRbTxh9i46tPcVol4AtpSCqaTXIEeDuqOdElYk3M
      JNGUw+zsM2zf9ipn9igIuu1EzrmeNHkY51AvtYf2U7HHj8cnYskeT1ZSCnG9zZSf2c6qs7uQ
      SETCQ34mTUxEDNs5uWU3Z6zw7IWRsijNpI8bR4qyh9OV1XR6QoSRIIbceLMKiFOrPuYawNvD
      6V27qNwZRI5IwOfHOPEqJuVa6ek3ENq/jef/1UgSbdi9HzG8wFAzFZuex11jgoCHoLyU6xZO
      wKpVvD0lEWREWHIYP+kQm177B3/eH4lSocSWN5mpRVlMyTvOxgOv8PdqM7EJ0O0NkoiA0lbG
      osmn2fr0X6jRinh9AlH5cxg3WpYWmcWC5XMIbD7Oa0+eRi1XIFVEM+vGr5BUuoC8czt48i/V
      qENe/HIL468oIMbgxabt4+DGVTSeSiRJ24MvFPNeT3cJkXFpxIpb2PnS36geN4cVc0uINyUw
      a5GV7/99N9Zbf0/Sx9lW/o8iIJVpyZi5lJnKchoGZZiSciguTkIL+KRylApxONkhWjJmzsej
      qKSu2400YzKzpqcgl4oYbHlMGh/gRF0fkuhUCgpziNUoEMdPJqzScLaxB3dYhjFvHJNLrcik
      LlJmXcXQwKiiKDSoFBrM1kRS012E2/pw+wXkhizyx5cQr1VcNIDL+w7g7ef82bPUt/fhD0tR
      G6yk5uWSEinB2dVIbfU5esJ6rGYVzoCG5IwU4kweanfVIR9XSnqknKCvjTMHOzFPHk/8W+3P
      3UPd2TPUtjmGK1RjIikzh3SrAaVMAgxxbv8+/FkLyTUHcPU2caa6nl5XEEGlx5qSSUaiEW/r
      Oc6eb2PQHwJfLW880cPyp3/KlRYZ3t4LHD9Zz4AHNOYEMnIziTMoLo0fE/bRe+EM1Q0dOL2g
      NKdQWpaNIeyh+3wV1Q0D+CQaLMkZZKfFoZf56Tl/hprzHQxJDSQmRjDQqyJ/Qio6dwNHKnxk
      zssjKuSht6WJ1gE1qcVJRPjtNJ87S11zD77ITCbnJ2PSSXEf/ydffaSVB576BbPMn/PvA59h
      BEEQvoDeoL1UvbmeLQfO0OMPIaLElL+Eu24qw6L4rC8mG9j0u+fZ3TJI9Mw7uPfanI8g+B/j
      o/IFNQA/gx1ttHcN4AmGERQRxCQmYjUo/7PuFJeFi7YzDfQElVjT0ojRftYN9vONIAjC/weS
      3LiQ93egEAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Unemployment Rate Since 1990 Top 10 Counties (3)' width='192'>
      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
      xec9xkz9F2/QIJ4sQSCfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Unemployment Throughout the Years' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Unemployment Throughout the Years (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='page 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='pg 10' width='192'>
      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
      lKX2Zdnc2FxDe85Tiqsopf3Xpx4ky+Xtx+Xr33NOolig2sTjaWIisL+sHp8P2e7YllWplVnI
      zrVdJ7fDw0h4bM95hVqOvJbb93xME5rICjiC+KXgnuvNreUoq7W26zXWF8IjO/acM7m6sr8c
      2PcpvTcFgIYSdOpB/NRkHcU6tSfLxDSFZnqwr5yNtVV0wU68t6etsfnb3J/tl7/85S87KtkB
      zTS5VilSUOq4nBLrywvkygqyy4NNFChtLPNkYYl6TSTgdx8qq1opsZ7YoFBS8Pt29jDW1AqG
      6MC2T7HXZaWTCTLZHDoiLmfDi/3s3m2WC1X6omEAFqYf8XQ2xfBAz4GytkgmVsnm8iDacUoO
      ysUUDx4+R1GrRMKhQ+u0H7mVBe4/n6Sq+wgHmycoPkjW6/c19WySubkZBLsP3659Hw6TlVmd
      4eVKnkq5TCjYSJKwOPOC5USeSDSM+Fqx/eSkUglMRHwBP6JRZ3LyCbVSBsUewOu0UU4ucmvy
      GbWqnUjYd2id8pkU2CUMTeXps+dspDLEe2Io6VVW03lmZhY+vBl07uUDfvfNA9z+RtiEx+Wi
      UlEaG20AsteNrigIYmvTFafbi5Ka59u7z7aPaWqZjVST7nofIrEg928/YHFxZzjkDoYIuHc+
      iGK+QiQWbFlmLOji9oOnLC41umiPL4TfI9MT7zSzmYFqmJg1iER9h5++D6VCDs0mE/I4t48F
      QmF6+/pxOtqLGwr3jRCUBTzerUZHR8NFb8iD0eIYwy7aKBaKGACineOjQ6iGDZ/cePdOb5B4
      OEIkevBzLxWyLC8vo+oCssOOJLvp7+3B52s8J8nrp1ypMT7c92EVoF5TMQUXnrAbx+axQj6P
      rV4iXdY3z9GoVqtNu9L98MdHOT2y82EtLc/z+M49qi0P9iSOTQwSjkS2j6Q2UujsRECKGBRK
      bWTFs7u4evEc0chWay+g6xq63umCIhFZhPhgD9lsZ4kJvP4gdrtIadf2S8mNDWR3YE8L2xJa
      ifVMBber0UiUi3lKpSKG3Ymjpa/MxOl0YnM42FK9TCqFaKjkKo35T72mYooi1er+84Wd+wox
      P/mQZ3OL28c2NjaQN7OVmIINv0eirFY/rALYJRlTB59bYmuK5/F5WE8rhD2Nx6DbZEaHRwgG
      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
      5NS0wAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='pg 11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d3Bd53Xo+zu9d/QOkCBIsHdSpJolWbZlRYrk2HHJjV+s6KbOzXUyeXPf
      uy/jSebNe5O5749k7tybOPJ171Ys2ZasLlHsBSSISvR2cHCAcw5O77u8P0BCpFhwDgkQbf+G
      MyA21l577b2/tb+yvm99KlmWZRQU1inq5TZAQWE5URxAYV2jOIDCukZxAIV1jeIACusaxQEU
      1jWKAygsEzle+eVrDF0+QefYbMHnvPrq63R29yyaFdpF06SgUBQSkcAM8XIV7T0f8sHrETY3
      OQmltaQnB6ncfphyu54Z3wRqlczgdJo//eqziIkgvaMmhjrPYTCbGZuKYrGY0ZntCJIaY3qS
      nY8+T3ONpyArVEogTGF5EBjt6yWvMiDIKiLRFDazDFo9QiSC2u4hmUpRXVGCRSMzNJPgwM5N
      eCem8U350GtkzGYDaE3otFqSGRFZpUKbj2ArbaKmwl2QFYoDKKxrlCaQwrLxf/7be3SNzACw
      rbGM//uPP0EoOE0smaOxvnbB81OJOL19/WzZtgOzQXfD38KRKC6nY0EdigMorCjaOy9zYN8e
      Jia9BAMhciqZRCBAaUUFWp0R3/gwCCkkex2NDj1RQWCgr5fpmWlc7hKkfBK7q5zh4SF0GjUV
      NXU4rWZ8k17iiSTVVZXMBELYnU6S6Uxho0Aj/R14/VEAzh87TuY2cj2d3fP/DwQCd9Y5MlzY
      E7mOXDJKNJkrTDgT5p0PTnDuQjvixxp50Vj0tqeNeydu+L2nu/O2trSdP817H5zANzlEd99U
      YXZdT2JqwREQKZcknhbmf79me2dP9y3l0+EpfLMpxEyUMV+hoysrBzGfY3hshPfefYu2S+3U
      N7egN1s5f/YEg0Mj2ErLEUUBSfjomQSjKRwlpajUIjMzPrw+HzNTk8SzccKBac5c7EBr1FNa
      Yqf38hlOnzvHeCCCVq0prA9w5vRJ1Bod+/e08t3/+VOe/cuvMt52EUFnYffWjbRduIS7so4r
      F09TVllJ3ebdZOMzaCQBfyiCzmRnY5WTjt5hahqbqS5z8f777/Loo48BMh0Xz6Myu9lU46Hz
      yhB2TzkmnUwmHkGvsxJIRNHpLbRUWonryhjvOYcgwubdBwiM9BJLpqjZuJMyp/EjoyMjvDsE
      R1tsnO3yUl9ixB+KsnnLZl599ZccPPIJzGSYCoTZvGMvdtNcZXjyzGn2b9/Mxa4BSitq8A11
      YnV6cJTUoJcSTAfDtGzfg9WggYyf091pDm818ZNftVNXX8qhvS10d49jLyklHfYSy6jYu3Mj
      vkAeTSaCu6mBvrZzpHIa9m/x8JNjI2yocnFoz1YuXLiIyVlKtU2PrqyWwPgIcmSYMz4tTz16
      GDKz/PL1t3j8iac4d/JtKivr2LHvEBP9HSRFPXt3tgIS7733IRa9mp2HH2Swsw1Rb6e1oZz2
      nkFszhLMRjX5ZBS7q4Sh0Qlq6zdQXV5Yp3ExebdthJlIEoAyp4XH9jbes06/30tFRc387wG/
      l7zaRFXZrUeFCo4DqFHR39PH5m1bQJYRJImejg4ut12gYdc+muoqcZZUsO/AFoa6hvF6J5jy
      +tmyaw+xcIATx0+h0Wo4e+b0DXrDwxfpncrQfvYsGUlCkmXaL3cwNtiDq3IDyelpNuzYRSoc
      IhOZIpAQSAtwYEslXcNjTAVytNbYmAhnQEjT1tbGdR9MDFYPYjqKIApo8mE6hyI0NzfT0lQ3
      d0yVpP3S4A02XbjYxf4DB5iaGEJnsrJ7zz4mJ4YIBALkRdBqbn5sdY2bcAo5YkKCockY9c48
      M1k7OxustHUN4Z2KMDUyim+4DW3FNvQICEDDxi3ohAwXL1ygadd+sjNTTE15SQgwOjJKVVUl
      LVt34rDocXgqaG5upqbCQ1llHbubnFwZ6ONU+wiTPefxxkVATUuVlaSxDGmmh/aRMD3nzxIT
      JSRJ4vLlDiaG+7GW1iPEI2QFAa12eVrCj+1t5IuPbeOLj21blMIP3FD4AUoram5b+KEIB9i2
      sYwLQ2HsejVCdIrRQAq9Vkd5VRmXz59nZGIKtUoFc//mUKlRqQBU1NXVIEoSO3bsAEDMJmlr
      ayOltuI0qWndsYOxoUFktQatRoPGaKPEaQFUqNQqrtOKSqW++puBRHSSy939c3/Qmti7dy9X
      P+YM93Vz6vgHNG3eycDAEDqDASQJIZ2kf3icwYEhNAYDalkCMcvF8+eQ0FHmtnL23Dnysg45
      n6HtwjlUWhNutwtVNkzf6MxNz+d6G8vLy8HoJDU9yPnLQ1TXVuAf62VgZAKLu5LhznMMjExc
      vRcVKlRUVpXRfu4sgXQet91Mx4VzTM6E0JrsjPdeIpqaa/rFgtNMToeuXg8wOKgpsVK9aSse
      owYAj9OMwezEYC+nxKpj09YdzAwPkVdp0Gk0oDdT7rZhcjiwGLT09CxeYKkYpv/+Hxj//S8x
      /vtfYvrv/wGASZ8PSczh80/fIBuLxW6pI59Nkcrmi7ru9ees+mHQrvbzzAZm2HjwCars+uU2
      Z0HEbIKLHVeYDob5zKefWNeh+Om//weyPb0AGFq3UP53/xcvfeubtG5tJRyJ4rHbcTg9pEWJ
      3svn2bG9lUhCJJVMsnHTBqKxJI1uPTOUIcV9oNUTDfixuT0I+RwzU9NYrFa0FivR0Cx1laXE
      khk2VtiYoYzU9MDqHwXatmv/cptQFBqDlf379y23GSuW1h3b6eruo7nKylvvnMbqqebRhx5i
      Q/MWZv2j+GZVbNu6mWPnTqASDDQ+tIverstMjl2mqrKOzvY2Sipr+dpXv4wk6+nuOIe5tIam
      chtjE16ikQgbK3bT23UZqz63+msAhdVL4tgxxEAQAE1pCdaHH17S6w0P9BHP5Nm5fdv8sYIc
      IB6PL6lhCmsfm8223CbckvtSA8Tj8YIegFDgiEShckuhc6XLLYXOQt/famQ998EUFBQHUFjf
      KA6gsK5RHEBhXaM4gMKScvnCcXoG5qLev/rhj0ncRu7MyY+myCw0kfLSpYtF23G7iZSrPhCm
      sLJJ59Vkw1MICR3xlBoBkY62iwRTAkd2beRM+yC19Q2EZnxcOPshzqptZON+Zv1eYoJMLs9c
      EMsfxu4qo3VTA5FIGAA5n+LDUxfQGi3s29pE55UhZK0Bs04gk8hi0hmIqkDIiOxusBExNNJ2
      6rdYDAaqth3C33eh+BpgNhwlkUwt+oNSuH/kBZGff9DDyx9eIS+IS349s1ZFW88k27bUI2WT
      hJM5/GPjXO4cYPeRwzTVVeIpq2LfwR0Ex/3EYjESiSzbd+8BMUdvbz86rYapKe8NeoMjHYQF
      A6EpP9PhMKIsMzo2QTgYYvu+g5DOsmX3brSSgJBJkMxJGKwuDu5oZNzvJSc4i3OA6UCI906c
      5Z+/+QOSqfSiPiSF+8cH7WMc2VbLA1tr+KB9bEmvZbfbaW3dQCSZx+mwoxHz5EQJl9tN6/Zm
      2k+dYWRiCrvdDmix2y3Y7Xasdjvqq+dv3rIJQZKor28AwGbS09bWhuSox63LU11fh5zLglqD
      2+nEVVqOXqPCYrejvapDa7Ri0avnrqM1Yrd4UMnB4gJhnT39/NsPXubv/vpPKPG4Cn4IixUI
      kyQJURSRZRmVSnVbuespVPZe5XS6G5fkreRA2JAvzPkrk0iixMGttWyouvO7XKuBsK7288U5
      gH8miFqtpqykuMUTigPcnuWKBEfiGURJxOOwLKhvrToAFNkJrigrIZlILpUtRXHp+Gu8f2kM
      vVrmmS/8AbWldrLxIN//0S+QgCNPPMPWpspFudboxfe5GHXw3KN7FkXfSsBpMyJct6xwvVL0
      KNDEQCfTKS0PHNmHbmHxJSMSmOLQE8+xxejjh2+d4C++/BmuXDyJu/kgz31iN4Io0tt2nHfO
      9iBpjXztdw5zbCDJw80Wjg0kqdFHOd/Rj6W0nqcPNfKr492oNEYONHt480Qb9Zt28eQDW3jp
      W98jmwhTe/BpADrPH+dcx9wCnIeffIbm2tJlfAoK90rRo0A6k5ZsOM3Sjx0szJuv/oRv/ewt
      HnlgLwA7jjyJNNXO//P//iMjU2Fee+8sf/6nLyIkgwiZBFOByPzPispqdFotxz54HyGToGds
      lt9/7tP84pe/4cDBg5z58B3OvPcbtn/iczzzyYfmr1leXc+ePXvYs2cPbrt5uW79npEyGSRl
      lm/xNYDJZCaQ8LMca6/UajVqtRpBENBoNDz51DOcfu3HeFx2dDodgaCfJ5/7CkdGzvFGWw8q
      KUcmL5BMZTDo9QiCQCwaRaPR8JOfvswf/+V/Ynji/0On1bJh4wb0Oh1GnYpUVuTogw9i1oSY
      jidw5hJoNB50Oh1qtXq+fa3T6W5q+69kpFSK9MVLpM6dR0oksD39WfSuwgczFgPvaDvvn/Tx
      xENb0DtKmBr3Epweo6a6GpWjEiERpcJtZTqep0wT4b3uEI8c3k0wFEEjJCkpryCWFsknglTU
      NWPSa+Z1p+NhfvrKr3nokSewG2Fqahan3YrBZiIWzaDTSEi5NOXVdQwOj7NtWzOab3zjG98o
      1HhZkujt7kXMCdRvbi7Ye3K5HAaDYUE5SZJQqxeulK7JeSobeeKh/Zw5187GDQ2IuRS//c2v
      mIjC5595ks0NFbz62rv4Z8M8/czzTHSfI62ysGHDBnY2V/PeiYts2bqVjY0NqA1WqsvcbN26
      mXOnz2ByV/Doo5+g+8x7pFQWNm3aRKnLhslio6amhqqqKszG238Gir2XxZL7uKyYSJA6fZro
      z18mdeIEGrcb+2c+jf3Tn0JVWlKQzkLfXyHYnUbScQ0dHWcQM0lGvCF0NgvVphzHrwRRi0mm
      /H6SiQQNGzYTHe/mdPckh3bVcGUwSPvx1zDXt3Du/Q+xukspcdvndesMJpLpFInZKTw2M2dO
      HWckrCaVCJONx0kmY4TjSd481Y1DDxUNNcWNAqXjYS5eamd6NsvTz36q4D7Acq8H+PnLP+eL
      X/jifb32csjJMpy/Mokuk6R51kvq/AWQREz79mLevx/Nx772y7MeQCAWzZKMzSBpjYRCUZpq
      SgjH0+gtdoxa8A50MhSGzzy0h56+MTZvrGVsana+BtBZXPhHenFWNuCymm7Qfi1vkt1ioq9v
      AGdpNUa9ar6tL6sgEpzmrRPt/NF/+FzxC2LOffguMzGJT372CfRAPpPEP5vAbdExGUrgtmhJ
      ixqcNgv5fA63273sDrBSC+xiyonhML73juN9/wTVZQ5mG1rY/uwn0djttz2nWAeIR2bJSmqk
      bIK8yoCYjmBxedChQ1Spcd1iSHWlryYsug8gSBIOh20+SYnOaEGrjhGOp7DoVKTyIipZpL+z
      l/rtD8yP3Rcy5CZJ0qLKLYXOlSQnhkJkLrSRuXQJld5AuGYDqj/8Gl6jEbVajWw231F3odcW
      RRFJkrA53ST8U4giyHIGtc5EKj5NX2+YR5944JbnFltzjA4NUNWwEY2YYWhihvoKJ9PRLG6T
      inAGDBqZsrJSZmaClJUVPwKXTUZJinrcdiMDfX3FO0DzphZ6hybnHSCbiuOb9FFWVkY4kcZl
      1pKRtDRs2komNovaVoFGo1n0r2E8MM73f/4bjI4KvvYfPo9GBWI2zre//T2SWYnf+4M/IjPV
      y+vvn0VEw9defJHzb/+SriEv+x75DC2lGn7y778llxf43Fe+RmjgLB9e6KF+yz5+57ED/OS7
      LzEdzfDM73+VhnLHDddezhogPz1N+uw50u3tqK1WzAcOUPr1/4zabKb0ahMISeJgay0LxfUK
      vbZGo0GtVhMJTuObDlJmN5FTG5FSYcxuJ1u3uJiNxCl13WMzKTdLSjAwODiEQU4zNjjMdHwT
      br3ESI+Xpq178PunKXPb8QfDd+UAw+M+JFnCUeNicMJfXCcYIBWPMumdpm5jE1pAqzNQVVWF
      w+GgvNSD3enC7XJgNluw261z97UEneAf/K+X+MKL/4n0yCkCmhpqS61cPv4auvoj/O5DG/nO
      zz/g0MF9HDl6hFD/abKmUo6d6uJv/upP+fa//gsPHH2Qg0cfwikEuOjNcvbkh/z13/wNv/7h
      tyl36xjOePjac0f51++8yoOH99xw7fvduc1PTpJ89z2iP/sZuaFhDC2bcDz/HNYHH0RfV4fq
      6kiUSgXVpXYq3BY0t8hed7c2Xnt/RrOVqopyHC43bqcdT2k5dqsDm8OKxbQInWS1hqEr3XhK
      S7E73URTeao9JiKJPOUeB9FkjsTsFJJaj3dsFIen/I4DEbciHZ9FUBkx2Wzk4pHiaoBUJEDv
      4AhjYxMsdy6VcE6mxKylqrKK0dAsUEHj5u288i8/wtdURSySwe128LPvfpOwppZPekSOuStA
      pcFg1GJ3ujn+xsucvhLkL//ik/zTxWOogDKbgQHvDBXl29DZKlHlQ/f/5mSZ3MQEqbPnyHR2
      oS0rw7h/L46nP4tKv/KTf901Kj2Hjj44/+uRB+ZSGt6YNLEFgIaGhru6RF1Ty/z/dx84XJwD
      5FJx2tousql1L5qFxZeURpeJrokglzp62Pe7DzM4OEhTXTVf/9u/xd99DI3LzNu/+Da2lof4
      /OGtICZJTPySVHyWjKhl4MLbdM+a+du/+o9zCvMJYskUI7MZntq2ie/99hK7yxKYPRvvy/3I
      skx+ZGSu0Pf0oquuwnzwII5nn0VQqXj/4ggbgkk2VK0uB1jpneCiR4Eymbmc6lqjseAw8lKM
      AiFk+OW//zuexu184vBu3nzzDR5/5Ag/+9nLGNw1PPOZx7nw4Rtc6h1FrVbz+Gd/D21igrdP
      XOTTzzxPwtvDB2cvA7D36OPUOeA3b77PoUc/zZbGKi6efIeusTDPf+45LNcFWxazbR+OpfGe
      b6fGN0S2rx99Qz3mgwcwtLai0nx0zZ9/0MOhLVWc7Pbyqf0bcdqMd9CqpEUphiIdIM+Pv/Nj
      3BU1PPqpTxQcDVaGQT9CliSyfX2kzp4j0tWLo7WFU9oyPvuVT6O6TXtccYClo8hRIB0PHNnP
      VChFYZORFQBkUSTb00vq7Flyo2MYWjZheeAwr5bt4KnDGwmcHrxt4Qd49mgL718cYf/m6gUL
      v0JxFD0MmkgmUNbS35khX5jRiQCHdEky58+T905ibN2C9ROPomtsnF9P8ExlmtOd4zz74OY7
      6tNpNXxiT8Oy5fFfyxQfCMtH6bscZcehvcs6HXolIudyJC5dZvjHv2aLBTpdlez5vafQ19Vy
      q0F5t83Ekwc2KAV7GSn6yVdVNdLv7WdxpkatfmRJInO5g+Tx44izYTStW8k8/BjyAzuZ6PVx
      qL5uuU1UuANFO8DI0CgmnRYRln0odLmYa9P3kDp7jtzYGMYdO3B8/vPoKsoBaPWF6R0L8uzR
      lgU0KSw39zwXaL0g5wUyXV0kz5xBmJrC2NqK9bFPoGtouGmN8IYqF/VlNrTa9fqJWD0U7QAb
      NjYz5guQTuXQmVdXUKZY5FyO9OUOUufOIc4E0G/dSmTvAzTt245avd4+AWuToh0gGvIzOBmm
      omIae93Cu3mvBjI5gVA0SZXbSm5kBGEmMPfT70ff1ITjd59FV1XFj97ppFJr4dx7XXzp8e3L
      bbbCIlC8AyTzODVQukYKfzaT5af/8u+Uj/WRUmco3bsT08EDmA8fuqlpk8kJbG0sZcR/+422
      FVYXRU+GS+dF1AbTqkgq+lHumxutlfN5Mh2dpM6eI+ubYkdJNZv+/A/45XCSr3xyx231Pfvg
      5oLG7RVWD0WVY7OzlPrqCsamYys+FPbx7GeNHjOZy5dJnT2HGAph3L4d++88ja6mmt62Yf59
      KM6nDt554psybr/2KD4SHI+TDPoZ8k6zqaZ8KWxaFIZ9YR7cVI6+v5vRf/olVrMa066dOD73
      OXSVFTfIPra3qaj5RQprh6LfeD6Xw+IqpXGFFn4pmSTddpHtZ86SiSVItbSy+2/+DG2pksBK
      4WaKdgBRkjAYTAsLLhF5QeT9i6NsqPHMJ3UV43HSFy6QPn8BOS9g2ruHkhf+CK3brXzZFe5I
      USVDzOepqq5mzBdethVhr5zo49CWKtra+nG0h5Eut4MKTPv24f6PL6JxOBZWoqBwlaIcYLyj
      E288CahIwaJmh+samaHtig+tVsMXH9t2y0CTEApR2XUe3XEvbn8M/fOfwvIXf4Zmjc5VV1h6
      inKAypYNJEbGAS3Wj/3NOzZMWtSgEVKkJS0OowpRZ6O+urC+QvuAny8/sY2TXV4mgzFqy+a+
      5MLMDKlz50lfuoTabGbXgf1c1B2guq4C+wJ57RUWl3t9xyuRohzAaLWSSaTQqDQIHzvZZDIy
      MTpFRZkHsywTCk5T3lBacF6gHRvK+N6bl9HrtOz3aJh9+V2ylzvQuV2YDhzA8/X/DFczSxy6
      ms1gpeTnWUlyS6HzWl6g273j1UzRvcN0PEQgpeLjEwGsNhu1tVrcVj0ZSUtVVTWiKKBWqwvK
      C7RjQwUbwpMkfv0KqT4P5oMHcH72KdS3SKeympdELrXcUui8lhfodu94NVOkA2jQG41U22/u
      aBpMNmpMc23xj5KGF9dL0G9qpuy//h/zeW4UVhaL8Y5XGkUHdEvL7MSCqSXZH0BlNiuFX+G+
      UvyMBpWWtJRb5X6voDBH0Q6QT2VwehwrYocYBYV7pehOsNnuYe+W+lUxG1RBYSGKrgESkRl+
      9L2fkl0KaxQU7jPFd4Iraykvca67NcEKa5OiWjLRyTE0nhr27hQUB1BYExRVAxitRi6dPknv
      2KTSB1BYExRVjg2Och57dPXO+1BQ+DgrfWWjgsKSojiAwrpGcQCFdY3iAArrGsUBFNY1igMo
      rGsUB1BY1ygOoLCuWfSA7tzCaS1uu4lsXqKqUgmcrRXCgSnGp6NUV5aRy2aoqqpabpPumcWv
      ATQ6jDoVo/3d6CzORVevsHwkswKVDgszIT/JzNpYEbLoDmDUaVBpDWzavg+NkFxs9QrLiMdh
      JZwTqa2sw+O0LFtytMWkoI2y73W7+0wmg9G48P62oiii0Sy8rVChckuhc6XLLYXOQt/fnVip
      G20XuVP83bGWCsNKl1vua6827osDKCisVDTf+MY3vrGcBoRmfPiDUdKxECkBAtPTOKwGeq4M
      4S4t4VqK0FvJ2c0GvNMhHPaPEjWm4hEGhydQqwRmQjHyiSCS0cHkcD+ixoDZeDXRlpilb2AQ
      FSpGxn0YtRBPZYmGpokmc9htlnmdE6NDpPMyU+MjqPVGgrMRHDYLo6NjOJ3OBfXF0wI2q/mO
      +nRyngn/LC6n/Y7PxqRTMTjQj9ZWglGnvsM9O/EO9YHWiMmov72cwc7EUD9akxWDfv2t8lj2
      OIDd7kSn1SCqdeRSCYwmA9PTITY1uvGHsneU0xhM6NQ3VmAmqx2zQUc8k0eDSKnDSCKnwu12
      o76+26bW43E58AdnaXQbyJnc5HNpzGYTiWTqBp0ulwtVagZT5SYSsRhatURo2kcyJy2oL5lM
      IEnSgvp8Ph+5XPaGjuWt7tlodWC1ubCbPmqS3PqeReLxxA33cku5bJ5MTmLKP3UXb2/1s+wO
      MD4+Rl6QyKfjyGoN05M+ZFmiZ8CPy6G/o5zf78fn85HI5OflApPjJHN5NLJIMivgmw4SDk4x
      MjyGdN1CTikXY8QbwGk1MuCPQXwa33SQeDyBRn3jYxkdGUE2OgmP96DR6vBN+khmRZKRyHx6
      mNvps5gtZLLZBfUZbU7yudwNDnCrew5GYuiNxhte3C3vOTCFVm+6Icv2LeVmo1iMKlzukrt+
      h6sZpQ+gsK5Z9hpAQWE5URxAYV2jOIDCukZxAIV1TUEOMDoywrWBvJGRkdtIZfCOBwq+cDgc
      Llj2boiHA7S1XWQ2llpY+DqisegNv3snxos6X8imaL/UTionIOUzdHT2Ism3P66wvBTkAAOX
      jnFlPEzCP8A7p3qQhCydl9uZjaWQJYHuzssk0nH6e/rp7hsCJIaGholGI/T1dBJL5cil4nT2
      9s8P87W3X5z7jyzR19NJIpMnFQ9zqf0yWUEiGosyMTFBNBploLeLSDLDyNAgkpDG6/XSNzQG
      gG98mN6Bm52y/2IXG/bsou/CMWYSeUYHrzAyMUU44ON73/8OvkCY8eF+hsYmbzivq6cHIZvk
      ckc3giQzOtxPR2cPogwzvvH56yKlGBqeIhqZpaezg1RubkDUOzlF67ZWTh8/wbFjH7KhsYJj
      J87d9rjC8lKQA9gqm0n4B+jzRmlt8CDkcoiSyBtvvsWZkyeo27gZDRLJjIB61kcgq2YmMMXZ
      06epadrEpbYLnDx9jsYKK+fbr9yg+/L5U7hrNnDh7GmymQxiLsnb75/k5PtvojXZaTtzmor6
      jXS2teEPTKNO+LkwNMusb5zpsR4mkzoC015g7qt/ubvvI+UqNYf2bKZncIpsNsOHb7yFobSK
      5uZmqkpdZLMZzr7zJuH8DSZx4uQZNjfXc/LUWdKZPJsaKzh19iKnTp/Fdi1CrM4RmApz+vQJ
      mjZtpO3CeQDq62s49eEHNLZsxWCwYLG6MKiztz2usLwU3AfQqVSIKjVqoKu9jcrGTVjNczME
      Vaq5YEtpaSlGvRbx6mfe4nBhMRrQatWEpifp7h/Det2UAIB8Jsnl9nY0ejNt7Z20tGxGp1Xh
      Kq+mssSByerEZjaivW4yVmlpGXqtjryQQ6s3EE8kALC5Stm5teUj5bLM+cv9tFapGZtV0VDq
      Jgfkcnmk7Cwjvgwbq0vIiiAIeVKxGdBY4LrQiMlsQRTyaLRajhw9StuHH5C6LrDrcHkwGsxo
      1XM1wAfvvcu+o4/RVFNKPp8mmQiTx3Tb4wrLS0GBsFg0ilEHSdGAWsphM+vpujJEdW0NbruF
      3u4e6pqbkbISOrWAxuIgnYiCrMLhsBONxjBqZXoGxmjduhWDTsPoYC+haIrWHbsZ6+vEVdWI
      RZ3DG0pSWeIClYzD7iAajc3rQCXjMOuJZjWohQwGg4aBwWF6h8f53O88dYPN8co8KdkAABYf
      SURBVHCA/uEJGps347abGerrxmgtoby6nJnxYdQWD+lZHwazk5LKSqRUhP6xaba1tiDlknT3
      j7J1aytB3xjBeJ6tW5rxT4yQFHVsbKgBBGLRLLJKmLMzFsVhdzDc1004kcHhKaepuoSuKyNs
      27aF0f5bH7/FdsgK95FVHQmWJYHe7m6cFXVUlSp7BisUz6p2AAWFe0WJAyisaxacAC4IAul0
      +q4vkEqlMJvNCwsqrEhe6x4iId39d/KprU1UOqwLCy4TCzqAVqtdcD2nmE0xODxMWc1Gxof6
      qamtIXtd2oyVuh5UYWESkpqorCbuHyedkbFYVOREFWpBi9Zux2K33PH8lb6X0KI0gTQ6PWaz
      jcBEPzOzEWZm1k7aDIU5tEYzZpuJ6cEBksFp/P2DmGx3LvyrgaLWwA1d6SIUSyPLEpW1jdRV
      lQGQTcSIpTPUN22hrCqJRqMln8+tibQZCnOkIyHQ22k6/DDpaJSSegPpWByLY3XX7kU5wIbN
      2wifOkZSNs8XfgCD3c1Wu3vuF6OSDGst4m74KMBocniW0ZLFpSgHyGQyaHR6bIbVX/UVgiAI
      y23CfUOj0cxH9NcTRTmAf2KE3r5hWrbvWSp7VhTrKUQiy/K6dICiOsENzVtoqqtEq1tf6TMy
      kSleeuklvvO9HzEVis0f7zj3Id/7/g+Znr23zHnX4++/xPFL/YumT+HOFF2SzRbzuuvcZiJT
      ZM3VfOmpvfy3//ESf/dfvo4U9/LrU0P89Yu/RzQlEJ6Z4Nevv4ujqpEnD2yiZypDa6WRnqkM
      pbok73x4jq37jrKjzkbnaJCZ6QAP7W/l1V+/we6jT7C1qYK3f/MKA31XqNj7aQA6z33I2Y45
      Z3j4yWdori1dzsewJimqBvCNDRJJ5hDyH2sbyxJjo6Okk3HGvFNks7l7Cp6tRKa9o5w/fw5P
      eQ0Aams51YYYL33vJ5jMZr7z7e/zO7/3Ra5cPksmMsXF3tH5n0aLk127dvDzH/+ATGSKH/7i
      dY4cPcL3vvt9Pvu5L/Dmr35Bx/HfEDU38MmH9s9fc/uBh3jhhRd44YUXlr3wZ6JBEuEoUe8I
      2UwaISeQz6z+d1xUDaBibuqz6mNTGMV8FrNRxWwsS2AmQD4VQaW30VhXhSRJq7YzOd8HkGVk
      ZN5//yT/21/9F2RZRhIkvvziXxIaaucnr32IqDHgMOvnpm1flZ+bVi3z8k9/xLaDj6DTa0GW
      2bZnPw6zntkZHz/70Q+wOssJhsPUbjmMJh6dO1+WP1YDPEtz7dLl7pEk6aYEXgCRyXGSBit6
      o4FMIIhWI5EIjRMZCVN7YP8tNK0uinKAVDqNSq0mnbrR84V0nP6xII21OsRsBn1lKblEEpVa
      jVqtRqtd3X0Gk83F/v0HeProH/Kt7/6Mr77wAjo5xr++9B1UWj1PP/cF/F0C3/z2Dxj1h3DX
      tpB+5SXeTDmoadqH2dzMyMgQpRXVmGwuair06PV6vvKVL/LGicuYLWYeevwJ/udLP8BhNbLx
      wBPo9Xr2Hn2cvUcfX9Z7d1bXoZLV+C6fwVBSi5COIqgELG4PuVQKvX51xwGKmg06MXSFyUiO
      CpedhqaGgs6Jx+PrairEP/63f+Rv/+Zvl9uMReOlUx1E5bufMPD5bY3UOlbusHlRd5bJQWOl
      nfbeoaWyZ9Wzlgr/eqCotoksZugfCuB22RcWVlBYBRTlAHa7lYlAFJt1va1llfngjVfxp/Q8
      /+yn0V0dBBDzadovnGfv4Yc4+c6v6R6ey7D8xNOfx9dzgu4hH6V1LTy8q5HX33wXnbWEZ575
      LKngOK++/g6HHv00WxqraDvxDt3jYZ5//jkshrW5EcVKpagm0IR3CjmXIRlfX3t/DZ5/h7Gc
      hx3lEj/97Zn54+++8Vvaz58A4MjjT/Piiy8SD/hwuWycvniFF198kd/91MPIah3PfuHL1Ogj
      vHuul3/71nd4/gtf5Kff/jeCE10c6wnx5KENvPT9V5brFtctRTnA5q072HtgN7FIZKnsWZEM
      DPSxa/cuWnfvYXJwcP74J59+jgrXR4s9AiOX0FftxGnUoBFi/I///s/8+r2zeMoqee0n/8YP
      37zIkT2NyFordouZRreR8139tO7YTXnTLlKhwVtdXmEJKcoBbA4HXaeOYy6pWCp77glZlglG
      U2Ryixt3KC0twz/lJzTlw+xx31bu5y+/xuc/9xTBSJw//qv/yp/9xV9y8cM3EEWRL3z1z/nf
      X3iaV9++gCTObYQxE89S4XHhm5okH59C1i3PLEtRlJiJJBHFm+MAa52iB+i1VidaMbMUttwT
      s7E0r57so7rERiyZxWkz8vjepkXRvfeRz/Ktb/0vruTUfOWPXuDl7/53Hnj+Lzjxy28yOBIk
      98Yxnn5oG3lHM6+f6KHabaD31Jv4IwkeeeJpOs8e40znAEJe5Lkv/SHhcpF/+qd/pj9fzWah
      koz3Lf7679/nr77+9UWxtxh6RgO09U9R6bEyFUqwd1MlrQ3rZ8pFUXGAae8Inb39GJ0VHN2/
      c/64mE0xODKGy1NKaDZKdVU5Qj6H2+2+b3GAH77dwecf3YZOO1epvXdxhI3VburKHUt+7bux
      4c1zg+zYUEGlZ64JNRVK0DHk58kDG++bvaIo8aN3u/iDT+6YP/b9tzr40mPb0Gjm7uFaHCDu
      Hycv6SAXR2t3oNeYkVRqzAssiVzpcYCiaoDymkZ6e/tIRG5MbKvWm3A5zJjMNkyJJDNT46Cz
      43Q672kqRDie4c3zw6hVIMnw5P4mXLZb71erAlRICMJcNb651k3PWJAqz80PXxAlXjszSCYn
      IMuwZ1MFm2pu37QplGJsCEVTlDqM88+m1GEkFE3d9ln1e2e52O9HpQKjXstThzai1dy6BVuo
      bCCaotxlvuGa5S4zgUiCEsdcIoNrUyGMDjdiLInR5SYvZRhru0zzo0eLej4rkaIcIJ/JUF5Z
      RkIwIMtwbfp4LhbAG0hij4+RlzV4SirIZ9L3NBVClmV+c2aQrzyxA51WTV6Q+MHbHXz1Uztv
      OW99btaNev7re2Vilk21Jbe89q9O9fLIrgY8V1/yzz/oodJjv61zFW4zyIKIRpaQRZGRAS8b
      nCYIhZAFEVkU4OrPslk/8csSRo0KWRTIpnNUjnnJnooiCwKyKMLVn5Ig4O0a57PN5SCKhMIJ
      +s68Ta3bcpNeWRBIToZ4osQGskwinWPsNxJO6833pkKmLJQg9LoNbXk5nj95kelwilKXdX6f
      tGtTIWb6OtDaSgmNjWKvrqWiZSOpaByrc3VH+YsqmaIgMtjdRUBQU1lZS035XEDM4Chjz46y
      Bc6eI5bK8vb5YXJ5gU21Hva2VN3wd1mSQBAJhePUWjSoE7G5L5Qg0qjKEOwdwGHU3vTiH9Em
      eO1ffsr+5nLi8RS5yRCu1irignhTgaoY8qMedTErCCCKHIin8J/IIlr1yOKcPKKILIiAjCBI
      iJKMIEmoVSpMhls8NhkeV6sYeDfHxGwStVbLto2V6Ax6oloNKo0Wrv5UaTXs02oZPztJ93gI
      NFqa60vZ11iOLAqotFpURsO8bPtIkB2PH8bosKLSaqjVavnthRFaj2z+SK9Wi0qj4Xj3JM0N
      ZZSVOVGpVJQDP36nky8+vv2W72N2NMBb1/oAb3Wwd1PlTZsEApS1XG0mVVUW9J5XC0U5gNFq
      obK0HLDNF/5iyOVFfvFBD198bBupb3+byDsTXBFEXLbrAmtq1fyLd4WShC955guOYSqCZqqc
      5NUXjkaDSjP3f5tWw2Mb3aCRcHis1JY74KqeuUIyV0DQaggIdvY90DL/9/GJWQxGA66GshsK
      FBoNEzMxLvT5ePboZgBeOXGFfS1Vt+1blMky5bE0FpMe4wL77jqBhuRchmi7xXBbOYtzmmkZ
      KjaWzx+LD8TRVVXdJOsqcRKI56gq/6iWFO+wEUFrQykttR5C8TSP7mqYb/uvF4psAiURTU6q
      TXfXqWnr9/HIrgZMBh2mP3kRD/Cjdzr50m2+TpfbhomqVGxtKKV7NIAky7gXYWRns7mEV4dn
      OLKtlkAkRVdU4ssHNt6yaXWya4IvPLp1frvRZ49u5mfvd9/WAVQq1XzTqhDuVPCvsb2pjB++
      3QlAqdPMya4J9m++ufAXK3sNjUZNmXPldlSXkqIb54loEMt9WhT/+N4mxqejdI8GFnVEp6Wu
      hDKXlctDfjw2E19+YvuKXg+rUqn48hPb6Rqeod8b4vG9dxgMKEJWoUgH0BktZKb9BFUWDt3F
      xfZuquIHb3dQ6bFiMui42D9FdcmdO1F15Y4lGcp02Yw8sqthQbkj22p55cSVG5pAD2yrXXR7
      FkKlUrF9Q/nCgkXKrneKcoAZ7wjm+iZKHHcXKNHrNHzukVZePzM43wl+uIBCuJxcc76fvd8N
      wAPbau9rbEFhaSnKAQb6B9FoDUyMjnFw99a7uqDdbOD5h7fc1bnLxVLVQgrLT1Fd/oqqSoxG
      I3XVJYxNziyVTQoK942iUyM2ShIqlZrr+4zXpkJ4yioQBAmLyUD+6lQIhbXB/FSIfBpnfTW5
      aK6gqRArnaJqgHwmyQfvfUD/4PCNSnQ6SjwuDCYbspgjkYgRnl1fU6bXOlqTDaPVjMFoQiKH
      v3cQw3rLDq0zWjDrIZO/MfV5LhHHH4pSIqsJBmepqa/HYDCuuwRaa5l0eAb0dsREEEEDFVub
      yay37NBw68xw12eHLi8rbEqEwurio+zQa2sqRNFx7/7zXQRTsYUFFRRWAUU7wJb9rWjy62u+
      iMLapeiSPD7hRaW07hXWCHfxKVdjtay3tCgKa5WiHaC5pQVZzCMqlYDCGqBoB8ikk1gsevzT
      0aWwR0HhvlK0AwRDEcbG/FRXKHNjFFY/RcUBsukUnhIPed2Nq8HEbIq+vh4EjYNcNk1lZSnZ
      dJqmpsVJS6Kw/MT948SiKVS5OHqXHSGmxlZTteBG2SudohwgEYswMT6Oyl79sb/IWDy1qIU0
      sklLPB5Bo7XMb7qwWjfIUPgoKwRqDZ7aelLBKWQxRXI2jmtD43Kbd88U5QCe8io0KjUzE4OE
      Yjvx2OdGgyQZMokIVdU1xBMpGl3ViKKwZjbIWM9cywoR842SikTQm4wYnDU4KtVIYo67mEyw
      oijaerfbRUn95vnCD3NzhFpa5kLlNuu1KlG/KAYqrAzsVQ23OLq6Cz/cRSc4ncliNilrTBXW
      BkU7gNPlIKe06RXWCEXVYVe6r6A3OkEWFxZWUFgFFFUD6DUC45PjhBKrf39YBQUo0gFqGxpx
      2ByYDLqlskdB4b5SdB/APzlC5Go6PwWF1U5RDqAzWjAZjXg+vkukLBMORxCyKXz+ANlsjnRa
      aSatJfKpGLmcQMw/QT6fQ8gJ5DOr/x0XPZBbVV6DxXXjOlBJyBGOJYjNppicmiVW5kCnt9FY
      V6VEglc51yLBOpNIJiwTnZwgEQuQnslRe2D/cpt3zxTtANNjI2QzIo2VH+0TJksi074Jmpqa
      MFqy2GxO0omkEgleA1yLBMf9V4gGtNhKPEhaFWq3ilwqhV6/zhbFCwYt1R/bKE5jMHP48GEA
      ysuVnJRrEVvFZmzX74348elgq5SiHaCppZWGptU/CUpBAe5iFGisr4NXfvvBEpiioHD/KdoB
      mja1YjUqbXqFtUFRJTkQCNDYshWrS0mMq7A2KMoBQr5RBodGSGYEHlcywCmsAYpygM079yMI
      ApqPDWtK+QyD4348Vj2+QJSKynLy2QxVt9jETWF1kgyOIalLSc0MoHc5Uef1aO32Vb8ksug+
      gFar5eO7aal1RmxmI/l8nlw2RzjkJ5lRZoyuJSwlbqS8gJgXEHMp/P2DmNZAduhFyXEoZlME
      gwEktQ6L1UJ5ZR0ep0XJH7eGiPsDZFMRDBYLerOb+v27Scfiy23WPaOSZfmO5VQQhHua15PJ
      ZDAab15BJsvyTTsz3upYscfXsuxyXK9t3E/2Hr6T+xuqcK/gTIILOsC9IooiGo1m0WWXUrci
      e/fyq40lT/N8y4cn5piY8DITnF1YFpjxTzIx6b+pSXUree/4KMFb7E7zcdlsKoHX68Xrmy7I
      5nQyzsTEONFkZmEbBjs40zG46HpD3kkSmQi+j2Xlu+VzE1J4/bM3Hb7dM/Z6vbc8vpYLP9wH
      B7glYp5UNk++wFmi6XQai04mkszfUS4RDTMTnCWXv7McgMFgwGBYeJf2a6hUgFpPLp1YUNZk
      caDTFFaxFqM3nYoxMOjF7rAWpLuvp5PR8cmCZEeHB7kyMFSQ7FpieRxArSYZj2O1FvYik4kk
      gtqIy3LnlWhWhwuDXkcoEFhYqUZHwD+JKEkF2RAMBLhy6QQp9cI2T4eiVJe6FlYq5gnORlHJ
      AnbHwvI2ux2dXiY8W0DnU5ZQa7Vwi3b9rVBp1LfsA6x1lscBZIlYIkEweHMVfSviiTiBYAGF
      GqgoL6e1tbB9iD0lpYjCwrUFkoAsq6mo24hnAScEMOk1XBkYWVivRofHaScRmGAqtrAdJocD
      kwwU0ixR66mtLMNiKewjU1ddg9Wy+oc1i2XZaoDKioqC9xmoKCvHarMvLAhMeUe42NFbkGwy
      mSQamSWaSN1ZUBbJSRJWi7WgzUGc7hL02gK+ppKAf9pPXDJR7SqsOabSGrCaFnbCmakx4hmJ
      RGLh7ayi4SAzwVmi8dU/rFksy7TXkQadRmZ6JliQtM6gZ9rvL0g2GQyTUy1cSLOpBFqDCZVG
      h8NqvrOwJBIMBAnHU2jVd35k2VSCZCZPXW3twsaqNNTWN9FSZWM6mltQPOafJJ5NcuzEhQVl
      y8rKkGXwFLBXs8NVgl6vQ8wvbMNaY3mmdcoiPu8kG7bsKEh8NjRLQ8PCaxCmJyeo2rwNrX7h
      r6ksy6hkmYJGgXVmDh48UIipGMxWasxWJn2+hYVVKrRaLfbKDRRSv9nLyult62D//sKemyRK
      qBdw2GuUlZaAdv1l/FueGkBIoza5MZsKyx9qNOgL6qyWlpcjZBKEoguPqBgtNmrr6ti9Y1tB
      NhRL9VLMg1JrqSq3kykkKYfGjIYMyeQCzTvmaq3BkTFiShPoPqG3YTNIJJOFRZgzeYnZ4M3j
      9R9nxu8jlpGoKClgBGYVIskyedlEZWkBnVUxyZgvxGzk5pjIxzGYrThsVrJrIMtDsSxPE0hI
      Ec+CLbvwA4+Gg+RFEY/Ls6BsRU0DFTWLYeBKJM/gwAjReILGjc0LSkuCyK69+9CKC9cAiVgY
      k9mM3bX+prgvSw0QCCepq3RiNC7Q+WSug+bzeYlEwvfBspWMjm07d3DkyGE0BXTyU5kc4wNd
      mO0Ld4InJv00bdhIcLqwoNlaYsnnAt2JSCSC0+m8o0wwFAJJwlVSgmYdBmrumnSQU93TyGKK
      IwfvnL9HyKXxTc3gLqvEWmC/bK2wrIt7Fyr8AMlYhEQqg1pnwO0sLBagABgclLrieFwLd8a1
      ehN19fX3waiVx4pf3V7fuGG5TVidiFm8kz50egNu99ocFFgMlikQprDUjE/NUlXqWJfze4ph
      xdcACneHhjyllQ2IgpLJ+04saydYQWG5UZpACusaxQEU1jWKAyisaxQHUFjX/P/098Xv9tyx
      /gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='pg 12' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='pg 2 ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='pg 3' width='192'>
      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
      rMj78vH/B6gpJs5a0zu4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='pg 4' width='192'>
      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
      5Z3d5N1iEwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='pg 5' width='192'>
      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
      /wMTxLsu0gU8nQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='pg 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy913NkWZ7f97n3pveZyEx4Xwbl281Mz8yOodnlBpdLtyGKIh8VUoihR/Fd
      819IEQyJkji7FLlcjkardTO9Oxyz3T095R2qUPCJTCSQSKS31xw9JG7iZiITroBCzXZ9I7oL
      ec25x/x+5/zc+R1JCCF4h3f4kkK+6Aq8wztcJN4xwDt8qfGOAd7hS413DPAOX2rYrD/u//IX
      FHUn7924giQMUhsJJq/cxOOQ+eQv/oTZuVtEIxGq5TrCrlEvNHG5BTZXgEwqhWIUyTBIuJQk
      4/IxNzZMPp/H6Q2hV3aIRLy8WFEJBiSGB6Moskx2O0VDlxgaGWMzlWY4FmCnUOXVswf8xt/9
      XfxuW7+6v8M7vDY6qGsjmaKqO3jW2GZnM8fQzASru02uD7mQ7G7GIhL3nz7j1bN1vv3PvsnL
      hRTlwhJT08NU63bKO9uMfXwbSklA5uXCIgKQlSzC0NhYe8naSoNrd0b4dGMLj8+NotWRKPPL
      P/8zvDPXWUt58dtlAgNRfC7lYnrlHb40kKxm0EKhgBACo1nD6XbyH//DH/Gd3/7HTIzFKO9s
      UtYU6oUs/kCMgeEQ1UKDWnkHTXbg83gBiWwuz2DYw4vFdSZnZrDLEkiCLz79OV/7je8idIPk
      5hZRt0ZeijMYtIOkg2awvpFmdGIMmwT1SgF3ZAS/690K8A7nB+m4foB8bgdVbZ53fd7hHd4o
      DkyvG6uLOAKD1HIpwvFRVlfXuXHzOku5LQouBxggAIFACDAAIUAI0bourPdb1wyD1hUBRvt+
      63+C1jWDVmEd71vLs3wDY++7lm9YyzKf37vcWtWE5ZoQ7XINLNcAYew9bylzvx6tQgxAGMLy
      HWH5trB8h442m33QetawtE20n4VW+Z31bZW733eiVU/AEJY6mW2w9pux94zZGe1+tdazVVh7
      Kmy3tavfzbZZPmCOAdbLHYPW/nDXoFg66MD9dofRHgjMwbEOjGhftlS8oxzR/r51MPfu0csK
      JATJVAK328tmegu9kmar8G7mf4e/mTjAANVqlUqlxC9/eRe7IlNvajTq6kXU7R3e4dxxbB3g
      i+f3yKN3iRbWFaeHCGRdRvde6hCBzGvm2+0l11Ke5VvmstUpmnRd6y7ffMYqUljea6/6ljpa
      xbn283vvdLSzXYA4IE5Zy9xf0a1ih1XMEgfbLQ7Wzdq3++0VHBQ/LfU29p83r3aIKuYHLO1t
      t6ndJ6KjTKt8aIqF+/1qKbKr/HYJB8QbS0db71v611JoZ8f0fM5aP8t7Xc8KcQIGeId3+JuI
      d57gd/hS4x0DvMOXGu8Y4B2+1HjHAO/wpcY7BniHLzXeMcA7fKnxjgHe4UuNdwzwDl9qvGOA
      d/hS4x0DvMOXGocywHpi/cw+ZDQr3Lt3j3v3HqEd8Wxi4+y+C1Ar5cjkSgAUioVDn82sb1A/
      qkBh8PLZY1LbuyeqR7NW5uHDR9RVA61R5cmzlxiCvn+fB1ZfzZPY3HntcmqlHPfu3ePBk/kj
      n11PbLz296woZNMUKk0wmhRKtUOfPYqWlO9973vf63Wjur3ID3/8gOu3r1HK53C73eTzedRq
      kbX0LgNhL/ndAju5IqVsmq1chYFwkO3UOusb24RjA6TXliirMn6vi0ZmkYQ2yNfuXMKolUik
      0hSrDVJrK/jDMfKZFEvrm8SiUebnnzI+OsaLZ09w+EJUSkXcbje5XI5GrcyrxVVkVHYKNUJ+
      Dy/nn+LyR6hVyiRWFlE8Af74j75P3bAzMhRn4+l9fvRwkfeuXeLBg3sEAkFcTlervHqFxcVl
      ZElna7dMIZEgo1aQcOJ12S1lV8hltnEHgzz+/BfEr9xGalYxyjsU8VHLp1lc2SAWi5HLpEhs
      5wl67Tx9vkgsHkOSYH19nUuXZvjFLz5jfXWZW9dn+Pz+S1YXX/T8e2p8+NRE0guPv/gFvpHL
      BNwK9XoDl8tJLpejqTbJbGeQgHw2g8PrZ+H5E7zBAaqV0l6f+vjhf/x9VMnJ8GCMjaef4p79
      JtcmY5QKRdKbazRUwcrKGrFYjPTGMhvbeWIDYZ4+f87YcIwnT54TisYo7tFTLpejUsyxnEij
      14uUm+B1Kjx9+pxILE65kGP51Su8wQD/4fv/N5LTy2Aswr0Hd3m1uMrlcT8PXuQJemWcDplc
      sU6ttMviahLUCoWaTmJ9iXqpiM0TwCEb+2WXimS2M/0Z4Ff3n/Gb377Ogxc7bCcWGYq6ebKc
      YXV5mVGPSlKV+C//3y/46jc/ZDeT5uFf/wRvLMqrVBVXIYPhrJMoOMmszjM2NYVRzvCzB4vo
      9SoebZvlapCVR5/ywVduc+/BAqsry7x3fZK7T1eRRIPMxjqjV29x/5efUthOEYoN8PDpCmtL
      81wf8/P5uk49kyC/vUF85gaP7n5BanWFq7c/4PG9e4SiA3z1ow8ByG8mGZwYYSVVRKhltjI7
      TIyN8+nnn5JYW+X9S3E+eZpDL6bwyILA9FXm7/2S0s5mu+zk8gKBoUkiAS/BoJeH9x7SFAqu
      xhZV7xT3Pv0Jt8a9LGQ1FpfT3Lo6yeeffcbtG5f54tFLJkaHCPrd/PynP2XmxvtUi0Vmr8yR
      Wl1GsTl7/j0+OXGmDPB8cYXb16/idDq59+ABE+NjfPr556wuPmdo8grPfvUZ7ugoiRcPGb96
      i/t3vyC1urzXp/eJRAf4yocf7PXpCs8SOWqVEpm1RYKTV/n0r37E7akgCyUvi8/vcXnIxcst
      gVrLs76yzK337/DpZ1+QTiaI+uFlWuPl/GPicpGcd5bU8hOS62vcuH2DL754xMrSc97/6CPu
      3n9MNDLAhx/cBiCR2mR6wMl2zaDWsLOTWmFs0MXnj9KsLc4z5m+yrsfJJF4iaQ1mb7zPrz77
      jM1kol320vN7jM7c6CcCCXK728wvZdjdWuG9qyP8+x9+zvu3L5NcW2QtW8Ej61y6OodDrrO0
      tsvVqRjVuoZic1AulRF7YoLaFG2R5/LcLT58/xYyEI5E8AYieDwebOh4vT7URhO7w9Gug4mv
      fvwh/9f/9n3e+/AOwVAYl9NOKBjCbrOh1is8evgQxeHB7Qvh97iwKQpoGnVVb5cRGb9KKfmC
      hg6aqlEpZKmpEAiFcTvthEIh7HYboODxOBGCjrI9gShTo3EAqg2dj7/xDbLp/eV1IBbD7XKi
      6zqSJAFQyG7x6NkCfp8PgJ/85V/x8Xd/i6nhCM1mlUoxg2739v37rBFxyWzsFCkWi+iaSq2U
      o9rQCUSHGY1HcPnDzE4MU6+WePTwIXaXr6NPDU2lqe336Y07H3LnxlVQnERCPiKRATxuJ7pu
      4PP5aDQ1HA7b3mhaxvPWNP/HDz7ng+sThMMR7HaFUCiMzW6nUsjy8NEzPH4fwfAALqcHm6yj
      qU00vb31i5lbX2X58ecYgKpp5LJZdCAUjuC02wiGwthsdiSbA7ddQiB3lB0eHGU4GgTRC0ZT
      5HIlIYQQu7u7QgghkqmUEEKI/E5aPHr6QmhGUxTyZSGEEKuLL8TGxoao1mri6dMn4od/+ENR
      FUJsrLwSi6sbQggh9EZZ3L17V9y9+1DUqkVRbuh7ZeuikC+KP/nBH4nnC8utbxTyQhi6mH/y
      SBQrDWEYmvjRjz4RQghRyOeF3iiLfLkhCnnzuYcinS2IfL7Qej9fEFqzKh4+mRdCCFEt5kVD
      F6JRzovNnbwoZLfEi8VVsbu72/qWWhW7xaoo5POiUi6KJw8fiHyp1rNsIYTQmnXx+OEDkcmV
      RKOcF1W1VWe9URbFqiqyW0mxsJwQar0sHtx/IMr1phBCiFfPH4u7d++KpbWkUOsV8fjpC6Eb
      ou/fZw9DLL98JhKbGVHOZcTzheX9Ptjr29Zjmnj2+IHYzhU7+lStl8XjZy/3+nRX3L17V9x/
      /FwU8wWhixatmH3wgz/8vlhcTbbf1dW6ePTwsWioutCbVfHjv/pZ+161uLvfh2pdPHxwXxTK
      9Xa98oW8qJfz4tnLpX36EEIUd7fFbrEqMpsJsby6JnbzZZHPF0SjnBflhi7y+YIo5XfEwwcP
      RaWh9iz7bPcDCIOF+We4QkNMjMRO9GqhUCQYDPS8l0klcEeG8LnsZ1HLd3gDKBQLBAPBnveS
      66vERidxKNIbrtVBvNsQ8w5farzzA7zDlxo9s041Go1TFVar1ahUKn3vS5LUVhCtv8XevlbD
      MDqed7vdOBwOyuUyhmG03zUXLfN393vd3zK/0a9O1nuHPdsLpVKJYDDYsw4ngbVfDrsv2vt3
      xYFr3c8LIRge3jelVioVbLY3m2gsn8+jafueH0VRkGW5Y8y762/WvZterH3cTUfQux/Ma7J8
      cK7XNK03AwA4nc4jG9cNVT2YPUKW5XbFuwn3qEGs1+s4nc52R0iS1O4wayd1o/veYUTdff2k
      EqGmaUcS73HQq29MWMvvdf2wgbfCZrOdalxPi36MaZ30eo1NL4Yw/7VOANbnTzMGhzLAaWC3
      dyqpZqWsHN89gIfNnEIIKpVKBwN0zwqHfevXEccl5n73rERyFoz5Oug1u5voRQ8mrG1QVRXD
      MHC5XH0lgF5McRw4nc6zZwC73d5zJbCim3uh/2Dpuo6iKB2zeq9Bt84Sh33v1xXHXcHeNhw2
      wfVbma3XK5UKhmFQr9cRQqAoCqqqtu/bbDYkScLv9x9Zbvc3ZFk+WwaQZRmfz0cmk+mQ2aG1
      3Jgyn8nVVg5uy4Nm5cwK2mzY7XYkSWrLjybBW/82G+X1elFVlUaj0Xe1OC26Z5qjZrGT/DYH
      1Waz9ZRX+zF9t4gphEDX9Z7vvGn06vtuEbYXumV9SZJwOBw0m832b1M8tvaXVbQ6qh4mzlwj
      crvdfPb8MZ5oZO/rrf/tJFNEx0aRZblVYVlq3ZIlJElGliQkWQZJQhgCw9ARuorRrCHqxt41
      g0xig9hoS7HbT3rU+lsCJElGiP2l111sMDkx0XOZ7F41rB3YrUN0P2t2ut1up1QqdZTdPcC9
      fpsw75kDWa1W2wRsvlMqlQgEAgdESXMSsU4OZr3MZy8SZjus6J48jkIg0PINSZKE2+0GWoaH
      oaGhdlsPm4QOE5fhHBhA13W8A2HCw4Pta5mNJJGRIcKDJ3OO9UKjUiE6NtJX1lcUpaPjxdo2
      oVDotb97kVAUpWOJ70a/gb5oBugl/lgng6Pq128mt/aFVYQWQhxLB7Qy4Zn7AUql0gFluFGr
      MzA8dKbfOUzBgv5E8TcR/dp50e1vNg8mVT7McmWiW7Q97PlexhFzRTxO+8+cAcLhMOOuAIZ1
      Fj7LaIsj7h9cdl//2xdNSEfBlJH9fv+ByeciYVVWodMEehi6zZpWfe8wmPe7xcHDcC6e4Muz
      s+S3Mu3funrUFpizx/4yeDbE+zYzgdvtJhwO4/F43pp6apqGqqo9lf+j6titOx2XcUwYhnFs
      n8e5MIDdbkdpalSLJWrlCuHBOIWd7Hl86lAcZwY4Di5alj4OrGZBE452aPmbh2m+tOIkYmn3
      u8cZA3MldLlc2Gy2Dg90P5wLA0iSxHvTlxnWbUgbGSr5ArnNLbTmmz9n4LjzobnM9sPbwgSm
      fGuz2VCU1iGC1tAVn89HMBhEluVDFefzRi8LEBzP+nPaVUwI0TaBVyqVI/1RcA5WILMibreb
      SCRCOBxu2+RfpjfwTYwceN7QdXZfLuPw+wgcuQ3w+IR4EqI9zVJ7ETBNprBvCNB1vUNccDqd
      p47nOguYvh4rjtOvpk+j2z9kvX8c/eG4q8W5WIHMSpjLjyRJuFwunE4nLungsae7m1voyQwf
      XbuJIXp7DTscToLW+VyGQBhG+z+j6z/zmjgGw3THp/S6Z/59kbCuUibxm8pepVJpW11MUeB1
      A/ROi3q93mZKE9Yx7Eeg5orW7/5ZxjG1RcYzK9ECXdd7yl/j8SGW1lM4hqLYHHZ2l9e5MzHT
      tlwohSorr1YsYot0UIaRFOa/uEdkaJDjYJCj5WDTwnCY3fqiYdbRJBLrdWhF4qqqSjgcbk86
      FwVzhTpOXFN33M9hz1ivd/t7Tl3X1y6hD3oteW6Xi5uTMyytr1HWmuCwUavXcDgcCCHIyxCb
      GD+y7LIiMTh59HMArG8fWsd+y60VRwVbvQmxybpKdZsINU1D1/V2yIh5/aJgt9txOp3U64cn
      mOlnIeqeiMzftVqt/Yzb7aZcLrff6xcgdxTOhQG6Z6luzE5MtsIadnbwer3Y7XaWNxIEJseO
      94ETEdvRDhczrOAwXLRuYGVQa0y9YRjtmdBUAN9kyHMvHGbt6Q4vsfa7GUtWKBQOMLz1OSEE
      tVqtXU63qGXVFayxUr1wbjvCjmICWZYZjMdxOloBTVuVEsreDHaknfgM6md1lBxXcepbnzfE
      GN190z34uq5TLpfRdf1ClWDoHwVqNTZ0W93Md7rNt9ZVzxyrwyw83QxxGM6FAer1+rEVMF3X
      2dxKo/taaUC63do9cQJ669V+s2xz9nzTyuJpxBNZltszvxXdnlZd11FV9Ujx47xhrafVi2uN
      XO1l6zf3f1jf6aaHo/w7F8oAuq5Tq9WOraAIIVjZ2sLlb+XOaVtxDq340eHH+zf2/+ye9bst
      FUfV86xwmrJ6hQL0K6dQKNBoNC50FfB4PB2/rXU3x7gXjXRPSL1CIqy6zuuOy5nqAEII6vV6
      hwXoWPbf19TmD/3G3mWrvG/W9dRlXgD6RXt219Eab5/P5xkcPJ617KzhdDpZ2UhQURuwV/dK
      sYTH58MQxl6UvAQdbZCQJJClPctWpYLH57W0XQIEdrsDVW3SrNW5Pnv52GPZ698zZQBN0ygW
      ix0fPQpLGwnqA0GOMtp1yoEH7x2F4yq7JynzsG+9bhnddelnju123h2Xwc8bkiRRV8A7OgpA
      enUd3/gQvlDvXEG9kHu1RGx69IAiK8sydsOguLqOx+N5LRH2TBmge2eS+Xc/PFpcQIuGcToc
      6JpGfmsbt89HvVJBq9dBtIKaEAJZUchvbeOPhJCA9RcLSLLM+JVLh9bJ6gh7U0RxHt+xbg21
      QlGUjv4+ySp33rBb5E9d1U5E/EB7puulK5wkrugwnCkDmEracYKQltdWSVfLONIN7DYbAhge
      G6a8m2dwMIrT4z7wTnxshI2Xr5i6OYdis5FeaeXmLGZ3KWZzRMeGce1FRLYJgqPt/G87zJWr
      2xFm3QpoPvc24fLoBM8L27h8XnT97CKC2+08RXO7JZMz3xNst9sPKJe9BmhkaIgCOsGu2KDI
      cH+Z1eFy4nC5OkIA1p6/xBPwMXZ1ltTyKh6vj4HhwQOKtGEYbe9ht+PkMMJ5W3QBU2nvDoe4
      qHCH42B4aIi7808p2/a2up6xV/00ZXWP5ZlagWRZJhQK4Xa7D2jv3UuWy+nqWCKPghCCQmaH
      ZrGEzW7HMAzik2OMXJomNt6SM0dmpjAMneTiMs36ngVk7xN2u51IJNLTxtzdhsPuXyRMJuj+
      bb32NoRtWPHxzTvcHpsmImzkX60duJ9Lpalkc6cq+7A4r6Oie02cuSdYlmWCwSC6rpPL5Toq
      43a7OwjKfgLaKm3vMOsJ4RvpnPHszk6CNleQpUdPmb19s33dnC1tNltfJ8p5Ec9xRJTu2dG6
      Qh3lVe0u522ByaBOp5Nb166T3t4iV6ni8nqolcpo+RKXQlEeLC2Q36MVxL5ks5vebiVK6EPo
      he0szF7vea9Xv/Vazc8lFEKWZRwOB/dXF3FFwkiA1mxi042OpuR2skyNxFDsh1ejlMkyKDkI
      BAKs5jIcJ8p9YGSYwk6W4N4SYHpHbTbboTE9sO/FPk2wVa9OPkqMslp5uv89zffeFnSLaEPx
      QcRWmq3dFI1Gkw+nL2Oz2XB5vLgnDobBBCcnqG5u9o37stl6b/80J9zjbKo5t2C4QCDA16/d
      Yr6Uxen19Hym3Kj3JX5d06itJPG43Qx7vMQHogA4hISuaShH5LgMxQZYn39F0LNveSiXy23x
      rJfoY/VAWon/qHgSK3p18lHvdnsurSJjd3nWMIC3TdzpRrfvBWB4cIhhIJHcaPkqikVsQ9G+
      ZRw+cRy8ZhoKjmvyPtdMqRNjY7z4IgF9GEAYBitPnx9M2Lo3sHGXj2szl9qNEUIwNzXDs9Ul
      XBOtvDCVnRxI4B0IHyhfVmS6acQMouqG2XHd/oKTEP9Zoltssq4M1qC4t3X2hxbjy7LccyUd
      Hx3D6XTyYjOJPRY+ZT8fbLsZCNdv9T5XK1AvhJwuqn3uDc1Mkd1IMnppuuO6Ofj59Daqqrb3
      C7hcLur1OjemZnmwvIB3dBBvQyfs9ZNeSWGXFKS9hFvCEIy7AgQDx9sW2EvBhKNn75Ogn7jS
      K6Kxl/zajbOIhz8vmHE9h9Vxd3eXgmTg43j9fJi4Z42OPUrctOLcGcCt2PsygM1up7qdJe/x
      EBo5aP6UGvu7ykz/gsvlotlsMuIL8eCLh/z2t74D0JH8yhQfFEVhd3e3w2zYDycJoDotjtI9
      uv+Gk2/sf1t0gmaz2Q7I61enaqO+p+T2x6Ft2btlXQmPM8FYce4MoPbZ5lhIbxPWJb71/kcs
      bqV6PuMYCPL5s8d8+/2PgP29pp8+eYgtHGC0j3J0UmK2WgwOc5hZZ+ajMpCZS/pJlNl+3+t1
      r5/I8LYwgDUgsld91lJJ0rKBJxyivJtDttko7ewg78UHSbJMJZfHYVNoVGtM3ZjrqQ+ZOO7k
      1o1zZ4B8s47MQa+uUFVmpy4jSRLFfJ7cy+r+DkhJ2sslJPCIzsSn25kM3rEhZEmimcp0lNlP
      aexO1NsPRxG/lZjX19fx+/14vd72bixrCHK9Xm+bhE/qAOpnDj0uYb8NTGC32/vWQdM0Hi29
      IjIySKNYJBAJoakqM1cuIcn7bV958pyxK7NkEkk0VWPj1SIen++AVeh12nruDOBQlJ4nw/uH
      B9lMbzIyPIIrFCAytW8GsxLA+oOnPF5aoFau4PB50Jx27DYXrnyV61evAa3ldiGVpGoNwZBa
      5Yx7fITD4WOvBHA8USUQCLC93dJR3G436XSaSCRCrVZrK/WqqlKr1Q6EBh+Gfv6Aw2a/Xu9f
      NAO43W7q9XqHGASt+tlsNi5PTOKc6J8uUwiB1lSx2e3EJ8bYWFhk6uYcaqPB5soasbHRthlI
      URRcLhe1Wu1QE/Qb8wNYEfMFSOo6ctcOMb3RxO5onf4yFx9lPbGF6rLhjw20n1EbTezhIMpo
      nNLiCuPjwy2P8FqSmzNXEKK1Ne5+KolzKE73HjRJkqBYaf99GNH0+vuwZ/1+P263u23lGBlp
      hXQ4HA50XW8PiJnRuLuMXsxmvXYc30E3unWJi2QCWZYJh8MsLi6ys7MDkkQwEMDpdLaIu96g
      38ZNIQS5hRUmQgNIsoTd6WDq5hwAdqeT6OgQa89f4N6bWCSplQWjl4XvqODAcz8k78rsJerb
      B7PCNbN54tEobrcbv8/HjckZ5Eqjo6J2p4NGtYokSbh8HmrlfWKG1lL6xfoazqF4z28LS5jA
      cQj7qJggqxlSkqRWBjxFweFwtA8HcTqd7YwM3SEh3d/qxwjW3yfRH6wDfVKx6zwgyzKhcJhC
      wElzLMqqUeNZMcPzUpZkKXegzVqzSXZtg8LyOrdnLiMpvcnT5nAwce0K6ZVWaEWz2WxHy3Z/
      X5KkDjN7d5+c+wogSRKeHh47w2mjWCzi9XrxeDzUajWiXj87+SLeUKA9gJGhOLubWwghaFSr
      7GymadZUnq2tUqpW8I6PUUincXg8uAMBsuvrCLWJoih4fV40ydGux0k9tP3acxYzbS8CP005
      prXLDEA8CeO8CcRjMcKbSeqA1xIOXdrdZXNppSUZ7DVbU5vcHpkiGolgGAaXxieZT27gGxuk
      tJ3F7nVjczgAgSEMdIvIa57RYMLsF6sf4kJEIIC6oR/Y8BIYjPNiNYHL5WondR2KxXl2/wtc
      YbOjJJr1Ot5ggPBgnNTiMrWmTvzSJapARVdRF18xNDVBrVwmt75ONBZpx51LkkRmcwvP1hZD
      Q2eTnr2bwA6bufvNxN0D0e3gOqz8blidd4d94yIRdnsOiMEDoyOUtjMMT0+2r0mSxO5mltjA
      ALIs4/F4uBIb5u78S6YicexVAzVfbJtOv3bzzqEeczNQsFsEsj7/RhjgzsQ0D7eSuEMBsqk0
      WrNJPldEdjr50f17fPP6DcLmCSi6QFfshAbj7cpuPJ8nEI3gDQZQaK0muqah6BqjN1qyocvr
      IdzlShBCgN3GcnkXYwuG44MH758xTiJ6HPXccWZzt9vdMw+/9f2LhiIrGIbWZgBD12mkdwg0
      DWrlCu69hAgA26U8w8Uifr8fSZJYSKyhqirDsXiHT0SSJKrVfh6mzgmkF3OUSiXcbvebYYDh
      wSEkSeY//eQn+CYncQ1ECA7sz8gPk0m+4XRSKBYJTE+0UqsP7sv1o9fmePTzzxAuDxISXr+H
      er7Aja+9f+h381vbSMJgcHqC3VKZ5maSyeHRns+6XC5UVT2Wd7UfYfaahXsRb/f1Xu9Z/z2M
      kFVV7bkB6SQb/s8bhVoVW3BfBtB1nbFAK0jy2coaNvt+rtPybh73lRtomsby2ipSPIwnuc/g
      lUqlPcnU63X8fv+JjAXmu5lMhkgkgvK9733ve90v6bp+5gcq+7xe/G43W5qG3F2218v8/DPq
      fjeeUBCnx00xs4Pb72sTi+x08qoiUw7E2ZU85BUPIbXYd5vdzkaSzNo60zdbplK708HqxjqN
      So1YOHKAiO17ewxOEvpw1AzejwFOUr4kSaiq2jfVuXn4oBXWWc88YwvOZ1yPg0a1xo5aR7G1
      VgBFUWjkCkTDERqGjn8oRnR0mPBgjEatTrJS5OmrBfzTY9TTO3x05Rq1Wo1fra6QUJsk6zVS
      tSpLiQTXLee/9UK/CcjpdKJp2vlbgay4NjvLrM2G2mWukiQJyeVqp0ZxetzUSyXq5TLJl69I
      LSwSCAWJ7wVVCCGQ7A7W0zky6xtsLi6TSSSplcpsra6zubiMP+AnPNhpHVIUG5YaVlEAACAA
      SURBVPLIAE+WXrXLMVGr1Y61ldMMyzjqJMdexG8qZnB44qjusnr9/nXC1OQkVcv5EKXdHKPR
      ONGBAd6buoSaLQB7PgKHnVA8hjcUxOZw4NzzuN/fTGEbHsITDuMNh3EHgqjNw9O+9BJ/TPnf
      5XIRDoffLAMAfP32bT6ORtH28jqa8I2Os7m4AuwNtqxQKlWJzl5iYGaWwvY2RtcOsqouMTQx
      ysSVWaKDUcrZLHq9jgzkMzsUs7vtnWGaquL2emg2Grgmh3i4tHDAlf46RGaNHoX+M0+7fV3X
      TcayMo61Tsepm+n1ftsgSRIOeX/l8UfCLKeTQMtvErE5yabS5La2cXk8bK8lMHSNxz//nE1N
      55P555TrNQrra+yuJ8gvL9LMbjF99RKZbPbQWKrD6gRvSAnuxuWpKVa2t8nucWg7O7PDRbNW
      x+5y4nA5sHv2lSMhBKKLAawzcbVUBgGT168CkNlI4RhxkdvOoDaa1Ks1JASRkZbuEZgZ49Ha
      EjdHp9rRpudtOzdDMvpZhvrVwcoE3Z7N7ufeFvNnN8ZCETbKZUq7eWrlKqVShVLpc7753nt4
      3B7Wnj5i+NIsQgiqlSozN69RaRoEhofJra0yfXUW2NtYZREH7z5+xq3JGYZjrdX+xGZt0eON
      N5FgNZvL8YO//ATd68U7NNxuVDWVwOVxUcyViM1Mtze+rD54yLp9ABo1EAK70AjqVT788Aa5
      7Qy+UIjQnhe5nC+gNlVC8f2NFkIItlbXGZ6Z7KhHMZnmcniwHa7wunK7+a1+ZQgL0/eClUlM
      VKvVjvqZ93rtX+42qY6O7iv9F5k4VwjBzz//nGVZxunbywKo63jTaWSnnZrTjs1hxxMMIgyD
      ez//gqriwu12EnMKrr53s6M8Q9dZe/KMKx/cplGtoaTzzF250tH3Ho+np6XIap6+kBUAYCAc
      ZtDrpTY8RHk3S6FSxReLs7ORwuVyMHrnvY5dX0VDIahVmLk0imS3Y3M4aFQqZDZSTO2ZQqHV
      uGI2x/DsVMf3JKnlU6iVyrj3dA2AwOgQrza3mTYiBHxnc6RQP+I3xZOTMthJZrW3UQSCVpu/
      /fWvU/rsMwqGgSTLyIpCWtcYHxkjaLORfPESTdVo1mpMTo9xd1dQdXup5VJEN1KozSaegJ9y
      roDQNdxeT2v7rdtFUq8hr69yeXyyw0rUry4m3rgOYIUmQLHbGBgfY2zuCoFqhf/2H/4jHAYU
      19aoPJ9nZ3ERbSNJ2DAYD3pwezzt1cLh8VDXOgc8vbpObKK3qXPi2lWKu3k2Xi23r0mSRGA4
      zmqtQDa3eybt6kWwxyXiXmfk9jKZ9mOit1UEMvH3P/6YuGVWDk5Msrm82iJaxYawO7H5AtRL
      pXawW8VQCA2EGJudopDewqbIOJwO8pkslUKRbHITYRgwFOb52nJ7FTzMpN3Wu869xYfggxs3
      GFaNtlXI5/Px6ctXaBOXKShuiqMzVD1hEjUdRsdwOR1oXQNcqjVJrW0AkM9ksTud2A45Kzc+
      MYbd4UBTtQ5C88cG2KTJ5vbWa1tcjhNTdBSsz53Gv3AWotx5QJIkPr55k+rSEuXtLQB0xUG9
      UiG/lcHl82F3udjczrWOv6qUkItZtKbKxsIi8Ykxxi7PYBiCm7/xMY16E8MQDIwMo9hsOMcH
      ebi0cGw/yIUywOTkJF+/c4c5txd9N8f2zg4eWSa9nsAZiYIkYff5cQ0OEfT7KVYqHe9LkoTN
      6aRu95Be36CcLzAw0j/kYWstQXpljcjwIMlXSwesJt5wkKwTEunN125bL6I9zmHP3e90E/VR
      ZfQKp3jb4PN6mQoGcTvsFNdXMdQmC599QWR8fO/MN0FJl7kesXF72MtH3/oqyZU1Juau4A+H
      2N3aJjwUR5IkQvEokeFBttYTqI0mkiThnx7lycbKgYO6e+HCdAATkiRx8/IVZut1/vAvfoxT
      UWhi59WT50RjEULxOKXNFHVkNLVByPKurmkIw8Dp81HKqQTc+7Em6ZU1dE1rM0mzViMcj+EJ
      +ll9Oo8QvZVVT8BP2V7j1foqlyemTtWm45xmeFz0U3itsCq+vy7+Arui4HLaCVyaJZArsInC
      9naWTGobl9CZdCsEh1snhgohqDQ01GYTranSrDc6fDw2h4OJq1fYeLXI1I05ZFkmMDHCfCrF
      5XD80APEL8wK1Av/6x/9kMFwiInRUf7N41VQG1AtExkcomDIjKs7TF2/imEY5BMJbHY7dpcL
      78AAQgjqpRK2SoFydodL79/G6XZhGAaaquLYa0+1VKaYL6LrBs1qlbFLU9h7eFm1poq+meXG
      XlaKi4BJ0NVqFa+3ZRLu3t/cL+bFvG7uU4CLtQL1wm4ux89fPKeWzbFeaeIeG0dxOAjJEusr
      y4xfnW0Hvu0sLuJ1O/A5bIzsJVEws06ozSbb6xu4PO5WxsDxfR2wlM4w4x8g0OfM5AsVgbrh
      jYSpKDbGB0Jcc0vobj/6wDAOu52m0RpcXVXJJxJEp6YIjY7iHWiZPiVJwtA0CsUy4cE4Tncr
      9kSW5QPEHx4eIjo2wvClGRIvFnvWxeawYx+L8bjLYXae6Of9tRK3KbZZZ/xeTrxfh9UgEg7z
      Dz/+BsmtLCNuF4+eLlHb2ODZ/AIrK0mkvZU0t76OMHS8o+NUVJ1qsUTi5Su2VtdILa2wvZ5g
      7PIMlWKJnY1N1MZ+7JB/KMZKLc9uPt+zDhcuAlkRcjpJ2F38p/lFPI0ySk0m6veynUyDgK1K
      Fp/LTmxmpkN8qezuopYKhGMRhm7fILu62rP87USS4SuX27+XX67QdA/w/NFLRoYHsLucbctD
      m3iCXj59eI+v3rzTjqN5U84yE93K8NtO2CeBJEl4IhFuzEySNpLsKB7STi+Sr4mh6xRTSaJT
      lpBpX4BfffJTvvm7v9Wxcu+ktgiPjjJ4aZbEy1dM37ja7jdfNEIyX0TdURmMxjq+/1YxwNev
      zLL8eB4UhfuJHKpkx0Amp7ecQGW7jWmL1VPXNAqrK0RHBvGNXGqbvhS3h1q5jHPPeVQplshs
      bOLd2xsshGDl5QoiMoRDUcDvZ31tkdHRPbnSVDr3/ucYHOBpco0bIxPYbLZzZYCjzJt/k2KE
      TMSjA/wsX8WvVplPbGIYEpLaZP3BI2a+8gEA1VyOZj5HOBrh2m98g1IuTzgeQ9d1KvkC9UYD
      XyzK1sYmO5KH0sMXBB1Sxx6ERKnMtWqVqfEJgIt1hPVCNBpFbtQxfH5UxUk8GiNRsQQ8KXZ2
      SzXMqP5muUxsfBhvsBURam6LC8SipFdXmbgyQ71ao1wsM3hppm0aSy2v0fQPYJOkln7gcKAp
      DjwBf0dsejeep5JcHRjquc/3LHAY8VstQf3O0Pp1ZYYbg1HyuQpfJCtU5UAr67MdtopFZgCt
      0YBKkdFL0y2ZX1UpJJMEowPspNLoBgTiMXZSabYbMna/n2ZFweUVDHXlHK1Wq6xtppgaaekJ
      b5UOIIRAkSQo5PlG3IEidDSjc1AdiozWbFIvFPC6bHgCgfasbrPZ2s4PVzhCammNcqFEeHgI
      SWrt4W0pTSp2p7MjOtM1MsHuVuZAnazwj8R5uZtuH9B8nrAGyB12z2oqtf7XL2L1bYTP60Vk
      tvjqqBdJ25/wJCCf2qS5k2FoZrotGtpsNpqqxuKDJ7gDQcLDgyiKQnY7i9MfQFEUnIEg6Z3S
      gW+5PB5qYTeLidZ+4rfKCgRw78kTJE1jIBJhaWOTP3u2xobhBjPKsl7G1Sjy9757i8BApP2e
      ORNm1tYRmoYsSXiCfoKx/XigXHqb9bUUtnAM98DBhKy11DrjgyFiPbLUWVHc3GbGP0DQEmt/
      XpAkiXK53LYCnRTDe6ZEePusQCYqlQrprS3cLherGyl++GCZtXrraKyoUuF3/v5X28+WdrKo
      1QrhocH2KUK1UpknD+bxz1zBZmmfWq0idre48/7VA8mUtWYTY3P37WMAIQSNRoPt7e220vnJ
      vaf8WaoBCBACW7PCP/3uHC7L2cIAi/cecen2HI69rAzWphV2dllaTBC6PMdhUKsVIkaFsdnJ
      Q58rbmWYcAUZCB9MyntWMNtl7YuT4vr1/fz5byMD1Go1HA5HW7QxDIOFxUX+7V/8NXNz45R2
      dpj7+AMUm41yvkAyU2Ik6CA6uu8jePzwJa6RiZ4ipKHrhOtZxi9NHbina9rbpQNAa9B1XWd4
      eLh9luzXrk6xsvYzlEiIybifYq5BtVhsMwDA2stl7OOzpNdTTFyZaZdlikcb6dyRxA9g93jJ
      pnY4mK2+E4HBGBs7uxhZnViP1eSsIITA4/F07Oz6mwJtz1FpiqHmrrdEpcz7X51jaCCA584V
      1l8t0zSgbPPijg2S3kxQKr6ibshUGxr+0Ym24QJapvJmeS+WSAjqondQnGKzvX0MYJoB7ZZ4
      nkfbW0zcnGF8OIprL9V6anWdci6PLxxi7eUyRAZR7HZKDQO10UCSZNJrCRqaQV01cA/3ziPa
      C5o4npXHF42Q2s2jZ7YZivXOTfQ6sK5g1tiWXnsJfh0V4EajcUC029nZoazreGIx1lZWmJwe
      Y+LyDPlsjlK2lfnNOTyORsuEaZ0WGsUieimHVq0wODEGe/qQmusMobHirWOAXqkEVV3HPzTE
      6nqCidE4noCfkakJCjtZ1h49hZHpdgCce3iMp/PryLKMb2QUSZI6MpN2E0p1J4Oom9GJAgTU
      drPo2uyRh3AA+CIhtnMFjK00I4Nnk3qlG8ch7l5M8LaGRgN9s+a9SKyjRFpiZXh6mvVXL5l7
      /xahgTAzksRKtoDNHzwwCZTXlvE4bYxemT1QZr5SoVGrt52jVrxVOoBhGNTr9TYDCCH44v59
      lhA4vJ6WYySxztjY/oHLQggWXq5ihAePTLVtolEu09xKojgc2GSZoUszB+77ZI3wYKxPCQdR
      LZYI1nQm+mSdeB1UKpVTKcGGYbw1G2Ks0DStneq+G3efPGHVvm+7N3Sd+maSmbnWedAPHr7E
      PjTeMgfrOsFsmqjfj6ypFIYG+66GueVFrt6eO8A4b5WdrHv2NwyDx7tZHHtij6wohKam2dwL
      f4bWzHd1bhppN33kvl5D16lurCJy24xdvczYlUsHiB/A6fOxvX2yvQGegJ+S185qcuPoh0+I
      X0fx5jA0Go2exA9wfXYWOV9o/5YVBXwBnj9d4K//5Meo9taqIYRAGDrXhod4/+oVxFHnDNgc
      GD32B7w1DKDr+gG7tSRJPa0fciRKajXRcW3u2gzF9VWgK9mtYWBoGvXdLLHiLoGAj9GrVzr2
      lfaCzeMjs9H73IJ+cPm8VENuXq2vdrTltJGax/E498t88LaiWq0e6kj0eDz8zvsfYLMwgScU
      IjI1xfhXvoJQ9+N8ItUyI3tmXk05PEzcF4uR6+HneWsYoF6vH+gYSZLw9WAAbziM6mrFCOla
      Szls1GrtOB4r7FspPlIEv3tpim/evEGguX9E6mEd5o/HyZcb6NrJjiFyul3osSDPlxc7vLfW
      wLVjlbPnqDsKhxH/28YImqa183UeBqfTyXfmrlHPdiZVdng8xONhasl1woVdvnPtiiVE5PBv
      O9xuyqWD+4PfCiW4V2ZfaA3gnfEJvkhv4upKgOX0+cilUmTmlwh4nbx48JSxb/3tA2W4XS7G
      x1tGTcMwKOta+5jVo2ZkTdNPRUR2pwNtOMKz5VfcmLnc3gTfTfxmXs9eCbkOOzTOag3qJnhr
      qMTbxgC9rD79EA6FuBUb5K9fvQSkPStn6wQVt0Omkd1mZc217ytJb1Ir7q0afYa1kdvBZpPA
      zDAixNvBAPV6vW/HXJmaIuL389OlRUTXgXfBvVh3rdkkPDqKoWvIyn6TDE1jwLO/qui6jmFZ
      ZY4yH4ZGR0mvrjPStcH+OLDZ7UijcR4vLXDn0tWOKE+TIcz/zMhW0+tbr9dxuVzt8wesjGDN
      aGC2wXrvOO26CBwl+vTC7cuXWUolYTB+4HyJ1MIrFt2e9nXb3PUjJzbfxCQq8OrJPCl3y9t/
      4SKQuSwehujAAB8MDtHskwzV5nAQn52muplsKzp6s8mUVufO7L6Sa26gOC6UvZiT00KxKbgn
      hnnw6kWbaK1n51pnfkmSKBQKuFwuotEoAwMDlEolcrlcB+Ectdf3bdwHoKrqsUSfbkiSxD/5
      zncJlA/a8QfGRsmvrpyqrdbUnBfOAIdZBKyYnpxkhv4zm8PtZvzKDGpmk2pmi8to3JmZ7nj+
      uGeFWaGK1+siSZbwTY/ycHnhQJYCM323ab0yGdQwDGq1Gn6/H7/f3+EUhIMb5l83q915QghB
      s9k8tflVkiS++/4HeDKd+oDT4yE6MkRm/vnJjQuWvy+UAVRVPVGMy3vXbyAVioc+MzQzSTjg
      Jubd9yWYHWTs5aM5CTTdQHuNVcBEYHqMx2tLB/KPWnd3hcNhshbFzxom0A9vK+GbOOkZab1g
      s9kYDIcO6ESeYJDY2Ag7Cy87LG0nyYhxoY6w0zh4dnM5/uAvf4xjL388WORgS8MbO1lCsXhH
      Rxi6Tr7RQNlLx222XOx5gHtBrdVwuhwYhqBeyJPFbQk7kdqbZjqudPS91H6+0VSJOF3886/d
      OTCrQ0vxzeVyBIO9M173glWE6jXoFxkNamZl6JfZ+iQQQvDoxTzPiwU84TBas0khvUV4bJRG
      ucLGwiuGbt3uu3HIiuX5RRL2ViTxhSnB1hPgT4JwKMSdmVlSQsd1SIBYqtHEiMcPEIU1q8RJ
      Z091dZUSQST58Fn5MCSBP7j/nH/xwfUD7e8nvx+m1Jr33jaLjyn6nDaMuxuSJDE3PcNPf/j/
      YNtMo6kqg1evkllLIAkDfzCA0eMwxqNwYQxw2s6RJIlvffAhq4kEv8pu4+hTRmAgzPaLeWJz
      19rvvS5kWUY6cBblybHpCPD79+f5Fx9cw2FhAtM61Av9mOBtTYBlzWd6VlBsNiLDwzgiEQxd
      R7HbiUy0ghxzySQb9x/g9HmxuVwYhqBZa7QWdutKD5TLNYhd4ArQbDZPNftbMTU+Tr5a4Xlm
      B2/sYDiyLxJBGK2MAoHh4SM9v28aaYef799/wb9870qHWNKLyE+yUr0Nq4E5vmddD5uiYKO1
      z7d7pvdFozR08A8NIwydZz+/z9JG59FR5iQSjNux7YV5XYgSfNiJJyfBe1fn+MboOLqq9rzv
      jw4QH46z9fx5z3CEi549tx0+vv9woSOJ63Hr009cOm3YxVlBCIGmaWcyvr3gPIbFS5IVpq5P
      IRudDNDOqmExRLxxBmg0GmfaOaqqHmrZcfl8hAYi7Cwutn0E/ZJIXQQyDh//7uEClT0fRyAQ
      OHDk50lg3Sd8EeHQp3F4HReSJPGPvvUtZjWda0hc0g28xRLy7i5GJtOxyvtiMQYCfVLUW8zR
      b1wE0jTtzBQjgMmJCTaePCZZr+GP9w5fHpydprKbY3tpkYHLV04/80tSX2vR6yDr9PP7jxf5
      F7dm+2YwO1gVi3Vrz79x0aKPObmdZz0UReHD27fbv81jEoUQ3Hv2jIflGrY9Bhwei5B50WMy
      sRgxeppBza2I54HzklHX1td53Ky1N7GUd3OUd3PY7DbCoyMoNhvFTIZioUxoYqJnvY5CLpFg
      URzfRGniuKEJoXqJ3x4JMjY6euI9wN1MYK5yb2o/QPdejvNEs9lsSxGlUql9UqQkSXxy9x5L
      tTrLT5ZIrGap4TnQ/5EpL9Jwiwbe+ApwXrODbuhkVtdAklobWmJxIlNTCMNgZyOFZOgEYjGk
      XOGNy8fH/V7e5efPl1P8q6mpU9Wxe3J5kytCrVY705X9MCwtL1OqVFjL54g4nGxubfHBzZtc
      n5vj7370Ie/t7PB5wyD2tds8eLHOjx6nW6H1oolTqqLYApBeB5v97QiGOwv4giGCI6MoDge5
      ZBJ/fO+gbVkmPNaKBi1lMpS2t2lqBp5IGM8JMzq8CXKqGNKJQja69ZmTekLPAmet1x2Fa3Nz
      GIbBSCrF2NjB9AXRaJR/8He/BcDNucv89PH/jipk/rvf+ZCbV6b4d//lcxY9LXH5VCLQwrNH
      FFUbs6MRik0Zv12noUNNk3AaFRyBOMWtDYTNQSQ+wm46QTweZ3NrB62YpOKbZchZJzIyjZpL
      8mxti1vX59jayREPB5EViWa9SrGqs/D0HpdufsB4LIBu9+Nx9FZ4s9ksnyTW2+dP9cPO6iqu
      4QlKm0n0Ziv/ZG4rSypV2vMMi87YctGyHwshcDoEnq9949DyzwLfdal8fO3KsZ+3MkE38Vs9
      wc1m81ySZfULZz8LvO65xrqu86d/+QvuzM0QCgVpNpvUajW+/9lDVpzh060AAb+P5fl1nLYm
      z18kiA8EuDXu4VkhSljbYvP5S1x2Hw4nvPjVX5CzjeCo3GXuvRk2d2rMTftYfZFlef0zbGh8
      9Tt/i1/9/Kf4FcEnCzAeclAoVfC6vTi9IULk+cGPXvBP/tFv9q9TIIBarR7JACb8lr27Qrbz
      bKnRoRxBj3ycisH5S7jwk4LO2OYmYxbiPQzHcf+bOA/x7yzPQzhLCCFQFIXf/a3vtH9Xq1UM
      w8BjqAhNPR0DaIYgFAnjVBQuX75EwKlTxsaN2RG2l7Ncmr2My+HGZgN1ZJDtTIGw309kMMxA
      XJDbLRBw1YiMXmMoYOPBF79kfHKK5PYuH15ykyk0uHx5BLtiQ62XIDRK2JvGecjklc/nD55A
      f0xEJicI/GqRotrJAN2DKt6QWVFyuniWzh6bAaD3kUoXbRW6aGiaxg//5M+Zm7vGzblLSJKE
      1+tlc2uLJzUFkd9681ag06BS2EW3+wh4+suZkiSR2dnhL54/wwAQAkMIPJEIdotdOru2hnPo
      YI6g1QdPeTxfOHDdCq+jzsA3vnLaZpwMO2n+9d/6yqlEAGtUpPWAjGaz2Z8phMaDu/eJT15i
      NB7p/cwhWF1ZYWp6uv176eUzDGeQy1M9UozV86zkYHo4dPBeF44bMfD46VNmp6cPKOL5fIGV
      RJL3b13vuP77f/kLPslqRzNAs1Ik34R4uEfgmaGxsrpOfHgMr/twJciM/EyuryC7AgzHBw48
      s7OTIRo9XiqS7khSM3S4Xq93mPo202mWt7Zo6DpOm8KLpWWUmSsHCKFZqfDJf/4UTekv5Hjk
      CtFvf3ys+vVDrx1cPSEE4VqB/+rGNJHQ0YTSDdMJZjWDHsoAeo1PfvxzLt+8xs//5Ad4h+YY
      GBsmv/aUq3O3+JM//gumbl/HqJbRhELI1iRRtBH36jj9IbYSG0zNzlLMl/g7//B3+fxnP+Fv
      f/fr/OkPf4zPD4ZrHCnznJQUYMDQSEsRpiJgU2x84xv99arjMsBJ9RBVVfmf//MnR4tA27ki
      hmGwUSkiyzK1cgFNdnL10gy7W1sMTk6TS2+CXbBcqDMQcLOVSCNJGlXDSdAFDpebcrnKjdvv
      USqVCLoCzD99TEPV8QUjVAsZQrFRaOzybKeAgyYOl5dSo4larSDZ7HhllWRBZTjoQjhcNMtl
      xmcuEwz62u5sSZIOeCFHR0YYtcyCX795i79+9JhXqoFi2Yjj8HoZGvSysdOfKM9Cyj22H0SS
      yHlC/J/35vmffvObJ/bqHranuCcMQTAaYWttkaHLN3DKHmRJYnxmDodkcOfOTaRInKFJB41m
      E8VQGfdFUStFHE47IbcDpy+AZig4ZPA7bbxaSRMIePBHI2xv7hAOx7k9eRUpm0MqNQjKeXzT
      7x9dt2OgF/E3m00ePHzE1756cNW22+18NHwMJbhZr1BrCkaHBqjpCoqtgqa3XN7BSJCl5WW8
      bifJTB7/wCAjg2Ecsge1UcCwuXHYZCQETluLTB2O1uwcG9wjSklQyQucTiey4qdeahCOjZNO
      rjE0NIgYaJkqhVrHGbLhcdgQEjScp5P3bTYb3/nwAwqffs6uuUfXMMgur5DLFJDk/YRb3XAG
      j6dgH4XjMoG9VuYfXJ18MyENdg9f+eijvrenr93ue6+FGx2/vvL1lhny8vRU68Ity83Jca4D
      L18uMDt8NoeT94LD4SBXbpJKbTIyclCfCridJ9cB0qkEiitALHJyj2g/lIpF/JbYfr1ZI1du
      Ej3BN8wcQtVqlXqz2RYbyuUyiWSSsZERHA5HWzyqVqv87OkzlnMFHv1qge2CbBZ0gDjNLhq+
      FMAxPnXg+qlgGBjpRDvte/cmmimvk3/w/nUCx7Rq9UO3GfRNK8av631+3ajhw5DJZn89lODj
      wGSAbDZLLp9nZXOTTbXJt2cv8Yv5eYqVMhHgn//T3+t4r1arcffRc3RDMBIN8mhhjX//8yX2
      KVIgGxpuR4PIR3eQthIovgCG2kRIe8Srax3i1LEgwDYQQ7IdHGCjUeefjIaYGjr8nAKz3dCf
      GXsxgNEscffZOldnxrDLMjW1TqHUYGZyDNBZmH/JQDyK3RXCqGTI1hW8ShPJ7qJSb+J3yFSa
      glopy+jUZXbTCYTdi98lUyhVsTncOCQNw+YGo4kidBSnG4fTi1HbJVNooMgQjcXZ2ckR8Dso
      VZrotRLR4VGcbh+evRX+PBkAzjEUwqhu88d/9YCBgRAuSSWvOvnOnTH+ze//Md/55kf87PNH
      /N5//c/403/7v/Db/8O/ZuiE9NMPAwMDDAwMEI/FeLi4iNfj4V/+1m8Bvc2Cbrebb338Yfv3
      7OwMv3i8SqLQEjtibvgff+/bqLrB/3v/CfXJS8h7g3Jetu+BRoWZkWvHEn1OE1uVTKSx6RUa
      zTpr2SoRnx2bZH7LwOEOEvQopHJlmtkknon3aeRTiFqOes2ASBCXAq5IHL/HhZlEsqEK3C4X
      IDCEjFDrSIqMakCjUqWYSeL2BgiF/KhIvHy5QsArsUsEn0tBcUUIBQ8mvj1PnBsDyK4gUZ+D
      YqlMsVnn23/nb7O19oxbX/sWT375CV/71m/xyQ/+M8ITJJ8vMDR0diIVtBxj3/7ggxO/pygK
      VycH2XqSIOyW+O//8W8wNjqKYRj8Nx43f/BshabtbOvaDVk5mbf2pIwYEs7REwAABkRJREFU
      Gx1nfGaGesPA4/ZSyW3zKl0gGo3i8XiIBF2UVSd2SkRn5rC57AjXEHYFklu7xKIRJMBQG5Sq
      DQaiUXYKNaLRfcve2vIrBsdmcDkU6pUSijtAcq3G0MgomiEhgIFbATKZHaKxKLIEkqFSKBRw
      WFaA88Y5ikA6z5/MM3tllmfP5nEr4B+fQ9tNMDhxieTKAhOX5lDLBez+EH0iHI6NfnlET4O1
      9QTVepNrV2ap1WrUarV2n6ynNvmrVJac4/wCv1yFHf7Vt77y2sqvJEkMDe2nbL8IHeB1cd4i
      0N84HeA80Gw2KZVKGIZBs9nk3/3qCXnvyW3zx8VYs8zvfXDj6AcPgekXicX2/SqvywDJhXts
      M4q2s4DuCOCza5SaCl//4Bo//emnhIYmcalpKrYx3NVl6sFrvH/l9c5M+LXVAX4dUSwWKRaL
      jI6OdhCKw+EgFApRKBR4vvCK9e1dHI4CzuHxY+UZUhTl2MmrhKry/7d3dz2NlGEYgO/5aKel
      LdMPodiFlWWzuLKyhGzima6eqEfGIxMPPdvf4C/wN/gbPDdGo+6BiZss7sYYP9gILDELWAqU
      AtN2vjyAGaHbMsVSt81zX0clnUBK5p73nbfzPs984WLtkP6vUohXxgtYXqkDTQ9oVpFM6TBz
      k4DvwvEUrC8/xt7O39BHynBqfyF1PdtzAPqtbQAuWkJwEFzG0J7JZPDT45/x+Rff4tN7H52p
      WKdpGrLZLL7f2Ec9X0Ld86CuPkXQuO9YUF8oLEOAdGMfi/MzUFTlpP6Q/28jbkU5XnY9/gG+
      5yF+sI/ZxTd7+tz92hK5+mwXmqNhYjwHL25i59kKii/Z+OHhbygW0sgvLKKU07G2YWF6LIbV
      3Uv9830xUB1i+m2/VkNlbw/Xpjr3C2s0Gvjq/gO8sXATE8Xn+35Vdnfx2dcPUFGjl60URUG2
      ton331kMv6n0fb/j9NKxHZjb+5iZnu7uA3XhRX8P0Kt+T4GG6zLfo5FkErWI0oqGYeCDd99q
      e/IDQCGXwyd3XoViN9u+3yq4vHSzyUWP6bDV4TpBh52oewBd13H79d5uLgFg7vo13Flew9LR
      +XNv3/ehKX74Ouj0eN6c3basvs7ph20E6DdRAYiyV61ide0pFheinnsBFibyWFrZizwudWo9
      u5uT+qgwii8f/oi7c7cvVF6km00xvu/3baVsWImaAkXJmiYe/bqCR7/8EXnsRNYE3Oiq0Z2u
      t52uxMlMGqVbN1HZqbR9v5NB3JE1DBiAFh9/+B70LubhqqpC6bHES7Bac7pbjN1ooLq6jtLL
      pbbHn4chuDiOhy2SySTm56I3pE9fncLbv/+J7w7OrsM/17NLPX6veWShfngEu16H77iIqyoS
      sTgUz4Oh6YjrMeyWy5i5+gqyN16Druttl6N5kl8uBuA/UhQFd2/dwP1vlgDPhe45yBoxmCMJ
      pDQgP5JAKqYjF59AtlpHMjmC9JVxpE8ebw7rVJ5sX4zFYniiP8HU5CTq9Xq4hn/6YbcgDIPc
      AX7YiPoe4LK5rov19XWYpgld18/0/QpO7OC1oigwTRO2bcOyrPB3BNOgWq2GSqWCQqGAfD4P
      13XDBhOtjUBOd7yJ8iIbZAwDjgA9UFUVY2NjODg4QKPRiDxe0zQYhoFms3nm5A2ahczOzsJ1
      XWxubgIA0uk0MpkMbNuG4zi88vcBb4J7EOxB7nZp8fDwMHxo7/S9QlBR2XEc+L6PYrGIUqkE
      XdexsbGB7e1tqKqKRCIxdI+oDDr+N3ukaRpyXZRYDFoGWZYVdoFvnSIFPM8LR4UgDJZlYWtr
      C9VqFYZhHO+hZhh6xinQJVBVFZqmRT5CHlQmax0BDMPoOD8P7ilSqRRGR0ehqirK5XLYhCKf
      z8NxnPB+4Tz9Kl84zNreBBNJwTGURGMASDQGgERjAEg0BoBEYwBINAaARGMASDQGgERjAEg0
      BoBEYwBINAaARGMASDQGgERjAEg0BoBEYwBINAaARGMASDQGgERjAEg0BoBEYwBINAaARGMA
      SDQGgERjAEg0BoBEYwBINAaARGMASDQGgERjAEg0BoBEYwBINAaARGMASDQGgERjAEg0BoBE
      YwBINAaARGMASDQGgERjAEg0BoBEYwBINAaARGMASLR/AL5E6FaDZ/9oAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='pg 7' width='192'>
      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
      P7tp4aEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='pg 8' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='pg 9' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
